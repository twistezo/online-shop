{"version":3,"sources":["data/DataUtils.js","data/DataGenerator.js","data/DataFilter.js","components/Sidebar/CategoryList.js","components/Sidebar/FeatureList.js","components/Sidebar/SidebarContainer.js","components/Viewer/PaginationUtils.js","components/Viewer/Pagination.js","components/Viewer/ItemCard.js","components/Viewer/CardGroups.js","components/Viewer/ViewerContainer.js","components/ItemDetails/Images.js","components/ItemDetails/Reviews/ReviewsList.js","components/ItemDetails/Reviews/ReviewsForm.js","components/ItemDetails/ItemDetailsContainer.js","components/Menu/MenuContainer.js","components/Cart/Info.js","components/Cart/Checkout/TextFormGroup.js","components/Cart/Checkout/PaymentFormGroup.js","components/Cart/Checkout/DeliveryFormGroup.js","components/Cart/Checkout/PersonalDataFormGroup.js","components/Cart/Checkout/CheckoutContainer.js","components/Cart/Summary.js","components/Cart/CartContainer.js","components/Cart/CartUtils.js","components/MainContainer.js","App.js","serviceWorker.js","index.js"],"names":["DataUtils","randomBetween","min","max","Math","random","roundToTwoDecimalPlaces","num","round","randomArrayItem","array","floor","length","arrayFromArrayRandomItems","Array","from","filter","randomBoolean","arrayContainsAllElementsFromAnother","array0","array1","map","a","some","b","every","e","getItemById","initialItems","itemId","find","item","id","rebuildItemsFromJson","json","i","Item","_id","_name","_price","_descriptionShort","_descriptionLong","_categoryName","_featuresNames","_reviews","r","Review","_date","_text","_imagesSources","_quantityOnStock","rebuildCartItemsFromJson","CartItem","_itemId","setQuantity","_quantity","deliveryCost","_deliveryCost","saveToLocalStorage","key","object","localStorage","setItem","JSON","stringify","loadFromLocalStorage","rebuilder","getItem","undefined","parse","DataGenerator","Object","classCallCheck","this","checkNullEmptyOrUndefinded","value","_data","_categories","Category","Feature","_paymentMethods","_deliveryOptions","name","price","quantity","chance","Chance","category","push","uuidv1","capitalize","word","syllables","lenth","sentence","words","paragraph","features","f","generateRandomReviews","generateRandomImages","items","categories","paymentMethods","deliveryOptions","Error","imagesNum","images","j","reviewsNum","reviews","date","string","american","year","descriptionShort","descriptionLong","categoryName","featuresNames","imagesSources","quantityOnStock","_features","_state","text","_totalPrice","DataFilter","activeCategory","activeFeatures","state","values","searchedValue","toLowerCase","includes","toString","filterByAllOptions","searchValue","filterByCategoryAndFeature","filterBySearchValue","CategoryList","handleClick","_this","props","onItemClick","index","_this2","categoriesNames","c","react_default","createElement","ListGroup","action","onClick","className","handleActive","Component","FeatureList","featureName","Form","Check","type","label","onChange","SidebarContainer","possibleConstructorReturn","getPrototypeOf","call","handleClickOnCategory","getFeaturesFromCategory","resetFeatures","setState","onSidebarChange","handleClickOnFeature","featureToSwitch","newFeatures","toConsumableArray","switchState","forEach","Container","variant","Sidebar_CategoryList","Group","Sidebar_FeatureList","PaginationUtils","cardsData","newActivePageNum","activePage","firstItemNumOnActivePage","getFirstItemNumOnActivePage","getPagesLen","itemsLength","ceil","rows","columns","itemsPerPage","Pagination","handlePage","pageChoiceOpt","isFirstPage","isLastPage","es_Pagination","First","disabled","Prev","active","Ellipsis","Next","ItemCard","handleAddToCart","onAddToCartClick","isOutOfStock","Card","Img","src","Body","Title","Text","Row","Col","Link","to","process","Button","handleDetailsClick","CardGroups","firstItemOnActivePage","cardGroups","rowNum","itemsGroup","itemNum","Viewer_ItemCard","CardDeck","Viewer","handleActivepage","Empty","viewerRows","viewerColumns","filteredItems","Viewer_CardGroups","Viewer_Pagination","Images","onThumbnailClick","imageNum","activeImageNum","Thumbnails","result","sources","source","alt","style","height","ReviewsList","itemWithUpdatedReviews","review","Date","toLocaleString","day","month","ReviewsForm","handleAddReviewClick","onAddReview","formData","resetFormState","handleFormInputChange","targetName","target","targetValue","isFieldValid","checkValidity","formValidation","objectSpread","defineProperty","isFormValid","v","isFieldValidated","sm","validated","Control","placeholder","required","minLength","Feedback","as","maxLength","ItemDetailsContainer","routeParamId","handleAddReview","ItemNotExists","ItemDetails_Images","Reviews_ReviewsList","Reviews_ReviewsForm","idFromUrl","MenuContainer","handleSearchChange","event","onResetReceivedandFilteredData","onSearchChange","persist","preventDefault","xs","publicURL","Badge","cartItemsLength","Info","handleDecreaseQuantity","cartItem","handleQuantity","handleIncreaseQuantity","initialItemQuantyToAdd","cartItemQuantityToAdd","onChangeItemQuantity","handleRemoveFromCart","onRemoveCartItem","InfoView","cartItems","cartItemsComponents","cartItemQuantityIsZero","totalPrice","sumIsZero","cartItemsSum","cartIsEmpty","TextFormGroup","handleChange","Label","defaultValue","pattern","feedback","PaymentFormGroup","handlePaymentMethodChange","showCreditCardExtraFields","onPaymenthMethodChange","PaymentMethods","options","paymentMethod","showTotalPrice","checkoutData","selectedOption","Checkout_TextFormGroup","creditCardNumber","creditCardNumRegex","creditCardExpirationDate","creditCardExpDateRegex","DeliveryFormGroup","DeliveryOptions","deliveryOption","PersonalDataFormGroup","email","address","CheckoutContainer","handleTextFormGroupDataChange","shouldCheckFieldValidity","handleDeliveryOptionChange","option","findDeliveryOptionByName","selected","deliveryPrice","recalculateTotalPriceWithDeliveryOption","handleButton","onCheckoutDataChange","newTotalPrice","o","substring","form","document","getElementById","CheckoutView","Checkout_PersonalDataFormGroup","Checkout_PaymentFormGroup","regex","Checkout_DeliveryFormGroup","Summary","handleCloseModal","onPurchaseComplete","showModal","handleShowModal","EndOfDemoModal","Modal","show","onHide","Header","closeButton","Footer","SummaryRow","CartContainer","handleQuantityChange","handleRemove","handleCheckoutDataChange","handlePurchaseComplete","initialData","Route","exact","path","concat","routeUrl","component","route","Cart_Info","match","url","eaxct","Checkout_CheckoutContainer","Cart_Summary","CartUtils","recalculateTotalSum","reduce","recalculateOnAdd","addedItemId","cartData","isOk","findItemInCart","newCartItem","recalculateOnRemove","previousCartDataItems","cartItemIndex","indexOf","quantitiesToGiveBack","splice","recalculateAllAfterItemQuantityChange","initialItem","changedCartItem","newQuantityOfChangedItem","MainContainer","handleSidebarChange","receivedData","filteredData","saveCartDataToLocalStorage","handleItemQuantityChange","loadCartDataFromLocalStorage","handleResetReceivedandFilteredData","data","Sidebar_SidebarContainer","ViewerContainer","NoMatch","_ref","location","pathname","BrowserRouter","Menu_MenuContainer","Switch","Cart_CartContainer","ItemDetails_ItemDetailsContainer","params","App","generateData","Promise","resolve","reject","generate","dataQuantity","ErrorContainer","error","message","WaitContainer","occured","then","catch","err","components_MainContainer","Boolean","window","hostname","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a6d7eb01.chunk.js","sourcesContent":["import { Item, Review, CartItem } from './DataGenerator'\n\nclass DataUtils {\n  // min - inclusive, max - exclusive\n  static randomBetween = (min, max) => Math.random() * (max - min) + min\n\n  static roundToTwoDecimalPlaces = num => Math.round(num * 100) / 100\n\n  static randomArrayItem = array =>\n    array[Math.floor(Math.random() * array.length)]\n\n  static arrayFromArrayRandomItems = array =>\n    Array.from(array).filter(() => DataUtils.randomBoolean())\n\n  static randomBoolean = () => Math.random() >= 0.5\n\n  static arrayContainsAllElementsFromAnother = (array0, array1) =>\n    array1\n      .map(a => {\n        return array0.some(b => {\n          return b === a\n        })\n      })\n      .every(e => e)\n\n  static getItemById = (initialItems, itemId) =>\n    initialItems.find(item => item.id === itemId)\n\n  static rebuildItemsFromJson = json =>\n    json.map(i => {\n      return new Item(\n        i._id,\n        i._name,\n        i._price,\n        i._descriptionShort,\n        i._descriptionLong,\n        i._categoryName,\n        i._featuresNames,\n        i._reviews.map(r => new Review(r._name, r._date, r._text)),\n        i._imagesSources,\n        i._quantityOnStock\n      )\n    })\n\n  static rebuildCartItemsFromJson = json =>\n    json.map(i => {\n      let item = new CartItem(i._itemId, i._price)\n      item.setQuantity(i._quantity)\n      item.deliveryCost = i._deliveryCost\n      return item\n    })\n\n  static saveToLocalStorage = (key, object) => {\n    localStorage.setItem(key, JSON.stringify(object))\n  }\n\n  static loadFromLocalStorage = (key, rebuilder) => {\n    const item = localStorage.getItem(key)\n    if (item !== null) {\n      if (rebuilder === undefined) {\n        return JSON.parse(localStorage.getItem(key))\n      } else {\n        return rebuilder(JSON.parse(localStorage.getItem(key)))\n      }\n    } else {\n      return null\n    }\n  }\n}\n\nexport default DataUtils\n","import DataUtils from './DataUtils'\nimport Chance from 'chance'\nimport uuidv1 from 'uuid/v1'\n\nclass DataGenerator {\n  constructor() {\n    this._data = []\n    this._categories = [\n      new Category('Category 0', [\n        new Feature('C0 feature 0'),\n        new Feature('C0 feature 1'),\n        new Feature('C0 feature 2')\n      ]),\n      new Category('Category 1', [\n        new Feature('C1 feature 0'),\n        new Feature('C1 feature 1'),\n        new Feature('C1 feature 2'),\n        new Feature('C1 feature 3')\n      ]),\n      new Category('Category 2', [\n        new Feature('C2 feature 0'),\n        new Feature('C2 feature 1'),\n        new Feature('C2 feature 2'),\n        new Feature('C2 feature 3'),\n        new Feature('C2 feature 4')\n      ])\n    ]\n    this._paymentMethods = ['PayPal', 'PayU', 'Credit Card']\n    this._deliveryOptions = [\n      {\n        name: 'UPS',\n        price: 14.99\n      },\n      {\n        name: 'DHL',\n        price: 16.99\n      },\n      {\n        name: 'DPD',\n        price: 18.99\n      }\n    ]\n  }\n\n  set paymentMethods(value) {\n    this._paymentMethods = value\n  }\n\n  set deliveryOptions(value) {\n    this._deliveryOptions = value\n  }\n\n  generate(quantity) {\n    const chance = new Chance()\n    for (let i = 0; i < quantity; i++) {\n      const category = DataUtils.randomArrayItem(this._categories)\n      this._data.push(\n        new Item(\n          uuidv1(),\n          chance.capitalize(chance.word({ syllables: 2, lenth: 6 })) + ' #' + i,\n          DataUtils.roundToTwoDecimalPlaces(DataUtils.randomBetween(1, 1000)),\n          chance.sentence({ words: 10 }),\n          chance.paragraph(),\n          category.name,\n          DataUtils.arrayFromArrayRandomItems(\n            category.features.map(f => f.name)\n          ),\n          this.generateRandomReviews(\n            chance,\n            Math.floor(DataUtils.randomBetween(2, 6))\n          ),\n          this.generateRandomImages(\n            chance,\n            Math.floor(DataUtils.randomBetween(2, 6))\n          ),\n          Math.floor(DataUtils.randomBetween(1, 11))\n        )\n      )\n    }\n\n    const isCreatedWithSuccess =\n      this.checkNullEmptyOrUndefinded(this._data) &&\n      this.checkNullEmptyOrUndefinded(this._categories) &&\n      this.checkNullEmptyOrUndefinded(this._paymentMethods) &&\n      this.checkNullEmptyOrUndefinded(this._deliveryOptions)\n    return isCreatedWithSuccess\n      ? {\n          items: this._data,\n          categories: this._categories,\n          paymentMethods: this._paymentMethods,\n          deliveryOptions: this._deliveryOptions\n        }\n      : new Error('Generated data is broken. Some field is null or undefinded.')\n  }\n\n  checkNullEmptyOrUndefinded = value =>\n    value !== null && value !== [] && value !== undefined\n\n  generateRandomImages(chance, imagesNum) {\n    let images = []\n    for (let j = 0; j < imagesNum; j++) {\n      images.push(\n        'https://avatars.dicebear.com/v2/identicon/' +\n          chance.word({ length: 15 }) +\n          '.svg'\n      )\n    }\n    return images\n  }\n\n  generateRandomReviews(chance, reviewsNum) {\n    let reviews = []\n    for (let i = 0; i < reviewsNum; i++) {\n      reviews.push(\n        new Review(\n          chance.name(),\n          chance.date({\n            string: false,\n            american: false,\n            year: 2018\n          }),\n          chance.sentence()\n        )\n      )\n    }\n    return reviews\n  }\n}\n\nclass Item {\n  constructor(\n    id,\n    name,\n    price,\n    descriptionShort,\n    descriptionLong,\n    categoryName,\n    featuresNames,\n    reviews,\n    imagesSources,\n    quantityOnStock\n  ) {\n    this._id = id\n    this._name = name\n    this._price = price\n    this._descriptionShort = descriptionShort\n    this._descriptionLong = descriptionLong\n    this._categoryName = categoryName\n    this._featuresNames = featuresNames\n    this._reviews = reviews\n    this._imagesSources = imagesSources\n    this._quantityOnStock = quantityOnStock\n  }\n\n  get id() {\n    return this._id\n  }\n\n  get name() {\n    return this._name\n  }\n\n  get price() {\n    return this._price\n  }\n\n  get descriptionShort() {\n    return this._descriptionShort\n  }\n\n  get descriptionLong() {\n    return this._descriptionLong\n  }\n\n  get categoryName() {\n    return this._categoryName\n  }\n\n  get featuresNames() {\n    return this._featuresNames\n  }\n\n  get reviews() {\n    return this._reviews\n  }\n\n  get imagesSources() {\n    return this._imagesSources\n  }\n\n  get quantityOnStock() {\n    return this._quantityOnStock\n  }\n\n  set quantityOnStock(value) {\n    this._quantityOnStock = value\n  }\n}\n\nclass Category {\n  constructor(name, features) {\n    this._name = name\n    this._features = features\n  }\n\n  get name() {\n    return this._name\n  }\n\n  get features() {\n    return this._features\n  }\n}\n\nclass Feature {\n  constructor(name) {\n    this._name = name\n    this._state = false\n  }\n\n  get name() {\n    return this._name\n  }\n\n  get state() {\n    return this._state\n  }\n\n  set state(value) {\n    this._state = value\n  }\n\n  switchState() {\n    this._state = !this._state\n  }\n}\n\nclass Review {\n  constructor(name, date, text) {\n    this._name = name\n    this._date = date\n    this._text = text\n  }\n\n  get name() {\n    return this._name\n  }\n\n  get date() {\n    return this._date\n  }\n\n  get text() {\n    return this._text\n  }\n}\n\nclass CartItem {\n  constructor(itemId, price) {\n    this._itemId = itemId\n    this._quantity = 0\n    this._price = price\n    this._deliveryCost = 0\n    this._totalPrice = 0\n  }\n\n  get itemId() {\n    return this._itemId\n  }\n\n  get quantity() {\n    return this._quantity\n  }\n\n  get price() {\n    return this._price\n  }\n\n  get deliveryCost() {\n    return this._deliveryCost\n  }\n\n  set deliveryCost(value) {\n    this._deliveryCost = value\n  }\n\n  get totalPrice() {\n    return this._totalPrice\n  }\n\n  setQuantity(quantity) {\n    this._quantity = quantity\n    this._totalPrice = DataUtils.roundToTwoDecimalPlaces(\n      this._quantity * this._price\n    )\n  }\n}\n\nexport { DataGenerator, Item, Category, Feature, Review, CartItem }\n","import DataUtils from './DataUtils'\n\nclass DataFilter {\n  static filterByCategoryAndFeature(\n    initialItems,\n    activeCategory,\n    activeFeatures\n  ) {\n    const allFeaturesAreOff = activeFeatures.every(\n      filter => filter.state === false\n    )\n\n    if (allFeaturesAreOff) {\n      return Object.values(\n        initialItems.filter(item => {\n          return item.categoryName === activeCategory\n        })\n      )\n    } else {\n      return initialItems.filter(\n        item =>\n          DataUtils.arrayContainsAllElementsFromAnother(\n            item.featuresNames,\n            activeFeatures.filter(f => f.state === true).map(f => f.name)\n          ) && item.categoryName === activeCategory\n      )\n    }\n  }\n\n  static filterBySearchValue(initialItems, value) {\n    const searchedValue = value.toLowerCase()\n    return initialItems.filter(\n      item =>\n        item.name.toLowerCase().includes(searchedValue) ||\n        item.descriptionShort.toLowerCase().includes(searchedValue) ||\n        item.descriptionLong.toLowerCase().includes(searchedValue) ||\n        item.price.toString().includes(searchedValue)\n    )\n  }\n\n  static filterByAllOptions = (\n    initialItems,\n    searchValue,\n    activeCategory,\n    activeFeatures\n  ) =>\n    DataFilter.filterByCategoryAndFeature(\n      DataFilter.filterBySearchValue(initialItems, searchValue),\n      activeCategory,\n      activeFeatures\n    )\n}\n\nexport default DataFilter\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { ListGroup } from 'react-bootstrap'\n\nclass CategoryList extends Component {\n  handleClick = activeCategory => {\n    this.props.onItemClick(activeCategory)\n  }\n\n  handleActive(value, index) {\n    if (\n      this.props.activeCategory === value ||\n      (this.props.activeCategory === null && index === 0)\n    )\n      return 'active'\n  }\n\n  render() {\n    return this.props.categoriesNames.map((c, index) => (\n      <ListGroup.Item\n        action\n        onClick={() => {\n          this.handleClick(c)\n        }}\n        className={this.handleActive(c, index)}\n        key={c}\n      >\n        {c}\n      </ListGroup.Item>\n    ))\n  }\n}\n\nCategoryList.propTypes = {\n  categoriesNames: PropTypes.arrayOf(PropTypes.string),\n  activeCategory: PropTypes.string,\n  onItemClick: PropTypes.func\n}\n\nexport default CategoryList\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Form } from 'react-bootstrap'\nimport { Feature } from '../../data/DataGenerator'\n\nclass FeatureList extends Component {\n  handleClick = featureName => {\n    this.props.onItemClick(featureName)\n  }\n\n  render() {\n    return this.props.features.map(f => (\n      <Form.Check\n        type='checkbox'\n        label={f.name}\n        key={f.name}\n        onChange={() => {\n          this.handleClick(f.name)\n        }}\n      />\n    ))\n  }\n}\n\nFeatureList.propTypes = {\n  features: PropTypes.arrayOf(PropTypes.instanceOf(Feature))\n}\n\nexport default FeatureList\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Container, Form, ListGroup } from 'react-bootstrap'\nimport CategoryList from './CategoryList'\nimport FeatureList from './FeatureList'\nimport { Category } from '../../data/DataGenerator'\n\nclass SidebarContainer extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      activeCategory: '',\n      activeFeatures: []\n    }\n  }\n\n  componentWillMount() {\n    this.setState({\n      activeCategory: 'Category 0',\n      activeFeatures: this.getFeaturesFromCategory('Category 0')\n    })\n  }\n\n  handleClickOnCategory = activeCategory => {\n    let activeFeatures = this.getFeaturesFromCategory(activeCategory)\n    if (this.state.activeCategory !== activeCategory) {\n      this.resetFeatures(activeFeatures)\n    }\n\n    this.setState(() => ({\n      activeCategory,\n      activeFeatures\n    }))\n    this.props.onSidebarChange(activeCategory, activeFeatures)\n  }\n\n  handleClickOnFeature = featureToSwitch => {\n    let newFeatures = [...this.state.activeFeatures]\n    newFeatures.find(f => f.name === featureToSwitch).switchState()\n\n    this.setState(() => ({\n      activeFeatures: newFeatures\n    }))\n    this.props.onSidebarChange(this.state.activeCategory, newFeatures)\n  }\n\n  getFeaturesFromCategory(activeCategory) {\n    return this.props.categories.find(c => c.name === activeCategory).features\n  }\n\n  resetFeatures(activeFeatures) {\n    activeFeatures.forEach(f => {\n      f.state = false\n    })\n  }\n\n  render() {\n    return (\n      <Container>\n        <ListGroup className='pb-3' variant='flush'>\n          <CategoryList\n            categoriesNames={this.props.categories.map(c => c.name)}\n            activeCategory={this.props.activeCategory}\n            onItemClick={this.handleClickOnCategory}\n          />\n        </ListGroup>\n        <Form className='pl-3'>\n          <Form.Group>\n            <FeatureList\n              features={this.getFeaturesFromCategory(this.props.activeCategory)}\n              onItemClick={this.handleClickOnFeature}\n            />\n          </Form.Group>\n        </Form>\n      </Container>\n    )\n  }\n}\n\nSidebarContainer.propTypes = {\n  categories: PropTypes.arrayOf(PropTypes.instanceOf(Category)),\n  activeCategory: PropTypes.string,\n  onSidebarChange: PropTypes.func\n}\n\nexport default SidebarContainer\n","class PaginationUtils {\n  static getPagesLen = (itemsLength, cardsData) =>\n    Math.ceil(itemsLength / (cardsData.rows * cardsData.columns)) - 1\n\n  static getFirstItemNumOnActivePage = cardsData => {\n    const itemsPerPage = cardsData.rows * cardsData.columns\n    const activePage = cardsData.activePage\n    let firstItemOnActivePage = cardsData.firstItemNumOnActivePage\n\n    if (activePage === 0) {\n      firstItemOnActivePage = 0\n    } else {\n      firstItemOnActivePage = itemsPerPage * activePage\n    }\n    return firstItemOnActivePage\n  }\n\n  static handlePage(cardsData, newActivePageNum) {\n    cardsData.activePage = newActivePageNum\n    cardsData.firstItemNumOnActivePage = PaginationUtils.getFirstItemNumOnActivePage(\n      cardsData\n    )\n    return cardsData\n  }\n}\n\nexport default PaginationUtils\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Pagination as BootstrapPagination } from 'react-bootstrap'\nimport PaginationUtils from './PaginationUtils'\n\nclass Pagination extends Component {\n  handlePage = (props, pageChoiceOpt) => {\n    let cardsData = props.cardsData\n    let activePage = cardsData.activePage\n\n    switch (pageChoiceOpt) {\n      case 'first':\n        props.onItemClick(PaginationUtils.handlePage(cardsData, 0))\n        break\n      case 'last':\n        props.onItemClick(\n          PaginationUtils.handlePage(\n            cardsData,\n            PaginationUtils.getPagesLen(props.itemsLength, cardsData)\n          )\n        )\n        break\n      case 'prev':\n        props.onItemClick(PaginationUtils.handlePage(cardsData, activePage - 1))\n        break\n      case 'next':\n        props.onItemClick(PaginationUtils.handlePage(cardsData, activePage + 1))\n        break\n      default:\n    }\n  }\n\n  render() {\n    const props = this.props\n    const isFirstPage = props.cardsData.activePage === 0\n    const isLastPage =\n      props.cardsData.activePage ===\n      PaginationUtils.getPagesLen(props.itemsLength, props.cardsData)\n    return (\n      <div>\n        <BootstrapPagination className='pt-2 float-right'>\n          <BootstrapPagination.First\n            disabled={isFirstPage}\n            onClick={() => this.handlePage(props, 'first')}\n          />\n          <BootstrapPagination.Prev\n            disabled={isFirstPage}\n            onClick={() => this.handlePage(props, 'prev')}\n          />\n          <BootstrapPagination.Item active>\n            {props.cardsData.activePage + 1}\n          </BootstrapPagination.Item>\n          <BootstrapPagination.Ellipsis disabled />\n          <BootstrapPagination.Item\n            onClick={() => this.handlePage(props, 'last')}\n          >\n            {PaginationUtils.getPagesLen(props.itemsLength, props.cardsData) +\n              1}\n          </BootstrapPagination.Item>\n          <BootstrapPagination.Next\n            disabled={isLastPage}\n            onClick={() => this.handlePage(props, 'next')}\n          />\n        </BootstrapPagination>\n      </div>\n    )\n  }\n}\n\nPagination.propTypes = {\n  itemsLength: PropTypes.number,\n  cardsData: PropTypes.shape({\n    rows: PropTypes.number,\n    columns: PropTypes.number,\n    activePage: PropTypes.number,\n    firstItemNumOnActivePage: PropTypes.num\n  }),\n  onItemClick: PropTypes.func\n}\n\nexport default Pagination\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Card, Row, Col, Button } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { Item } from '../../data/DataGenerator'\n\nclass ItemCard extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      item: this.props.item\n    }\n  }\n\n  handleAddToCart = () => {\n    this.props.onAddToCartClick(this.state.item.id)\n  }\n\n  render() {\n    const isOutOfStock = this.state.item.quantityOnStock === 0\n    return (\n      <Card>\n        <Card.Img\n          className='mx-auto d-block viewerCardImage'\n          variant='top'\n          src={this.state.item.imagesSources[0]}\n        />\n        <Card.Body className='d-flex flex-column'>\n          <Card.Title>{this.state.item.name}</Card.Title>\n          <Card.Text>{this.state.item.descriptionShort}</Card.Text>\n          <div className='mt-auto'>\n            <Row>\n              <Col>\n                <Link\n                  to={\n                    process.env.PUBLIC_URL +\n                    '/item-details/item-id-' +\n                    this.state.item.id\n                  }\n                >\n                  <Button\n                    className='float-left'\n                    variant='primary'\n                    onClick={this.handleDetailsClick}\n                  >\n                    <i className='fas fa-info' /> &nbsp; Details\n                  </Button>\n                </Link>\n              </Col>\n              <Col>\n                <Button\n                  className='float-right'\n                  variant='primary'\n                  disabled={isOutOfStock}\n                  onClick={this.handleAddToCart}\n                >\n                  <i className='fas fa-cart-arrow-down' />\n                </Button>\n              </Col>\n            </Row>\n            <Row className='pt-3 text-center'>\n              <Col>\n                {isOutOfStock ? 'Out of stock' : this.state.item.price + ' EUR'}\n              </Col>\n            </Row>\n          </div>\n        </Card.Body>\n      </Card>\n    )\n  }\n}\n\nItemCard.propTypes = {\n  item: PropTypes.instanceOf(Item)\n}\n\nexport default ItemCard\n","import React, { Component } from 'react'\nimport { CardDeck } from 'react-bootstrap'\nimport { Item } from '../../data/DataGenerator'\nimport PropTypes from 'prop-types'\nimport ItemCard from './ItemCard'\n\nclass CardGroups extends Component {\n  handleAddToCart = itemId => {\n    this.props.onAddToCartClick(itemId)\n  }\n\n  CardGroups = () => {\n    const rows = this.props.cardsData.rows\n    let firstItemOnActivePage = this.props.cardsData.firstItemNumOnActivePage\n\n    let cardGroups = []\n    for (let rowNum = 0; rowNum < rows; rowNum++) {\n      let itemsGroup = []\n      for (let itemNum = 0; itemNum < this.props.cardsData.columns; itemNum++) {\n        const item = this.props.items[firstItemOnActivePage]\n        if (item !== undefined) {\n          itemsGroup.push(\n            <ItemCard\n              item={item}\n              key={item.id}\n              onAddToCartClick={this.handleAddToCart}\n            />\n          )\n          firstItemOnActivePage += 1\n        }\n        if (itemNum % rows === 0) {\n          cardGroups.push(\n            <CardDeck className='pb-2' key={rowNum}>\n              {itemsGroup}\n            </CardDeck>\n          )\n        }\n      }\n    }\n    return cardGroups\n  }\n\n  render() {\n    return <this.CardGroups />\n  }\n}\n\nCardGroups.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.instanceOf(Item)),\n  cardsData: PropTypes.shape({\n    rows: PropTypes.number,\n    columns: PropTypes.number,\n    activePage: PropTypes.number,\n    firstItemNumOnActivePage: PropTypes.num\n  })\n}\n\nexport default CardGroups\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Container } from 'react-bootstrap'\nimport Pagination from './Pagination'\nimport CardGroups from './CardGroups'\nimport { Item } from '../../data/DataGenerator'\n\nclass Viewer extends Component {\n  static viewerRows = 2\n  static viewerColumns = 2\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      cardsData: {\n        rows: Viewer.viewerRows,\n        columns: Viewer.viewerColumns,\n        activePage: 0,\n        firstItemNumOnActivePage: 0\n      }\n    }\n  }\n\n  handleActivepage = cardsData => {\n    this.setState(() => ({\n      cardsData\n    }))\n  }\n\n  handleAddToCart = itemId => {\n    this.props.onAddToCartClick(itemId)\n  }\n\n  Empty = () => {\n    return (\n      <div className='text-center pt-5'>\n        <div className='pb-2'>\n          <h2>There is nothing...</h2>\n        </div>\n      </div>\n    )\n  }\n\n  render() {\n    if (this.props.filteredItems.length === 0) return <this.Empty />\n    return (\n      <Container>\n        <CardGroups\n          items={this.props.filteredItems}\n          cardsData={this.state.cardsData}\n          onAddToCartClick={this.handleAddToCart}\n        />\n        <Pagination\n          itemsLength={this.props.filteredItems.length}\n          cardsData={this.state.cardsData}\n          onItemClick={this.handleActivepage}\n        />\n      </Container>\n    )\n  }\n}\n\nViewer.propTypes = {\n  filteredItems: PropTypes.arrayOf(PropTypes.instanceOf(Item))\n}\n\nexport default Viewer\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Container, Row, Col, Button } from 'react-bootstrap'\n\nclass Images extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      activeImageNum: 0\n    }\n  }\n\n  onThumbnailClick = imageNum => {\n    this.setState(() => ({\n      activeImageNum: imageNum\n    }))\n  }\n\n  Thumbnails = props => {\n    let result = []\n    props.sources.forEach((source, i) => {\n      result.push(\n        <Col key={i}>\n          <Button variant='light' onClick={() => this.onThumbnailClick(i)}>\n            <img alt='' style={{ height: '20px' }} src={source} />\n          </Button>\n        </Col>\n      )\n    })\n    return result\n  }\n\n  render() {\n    return (\n      <Container>\n        <Row>\n          <img\n            className='itemDetailsImage'\n            alt=''\n            src={this.props.imagesSources[this.state.activeImageNum]}\n          />\n        </Row>\n        <Row className='pt-4 align-items-center'>\n          <this.Thumbnails sources={this.props.imagesSources} />\n        </Row>\n      </Container>\n    )\n  }\n}\n\nImages.propTypes = {\n  imagesSources: PropTypes.arrayOf(PropTypes.string)\n}\n\nexport default Images\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Item } from '../../../data/DataGenerator'\nimport { Container, Row } from 'react-bootstrap'\n\nclass ReviewsList extends Component {\n  render() {\n    const itemWithUpdatedReviews = this.props.initialItems.find(\n      i => i.id === this.props.item.id\n    )\n    let reviews = []\n    itemWithUpdatedReviews.reviews.forEach((review, i) => {\n      reviews.push(\n        <div key={i}>\n          <Container className='pt-3'>\n            <Row>\n              {review.name} -{' '}\n              {new Date(review.date).toLocaleString('pl-PL', {\n                day: 'numeric',\n                month: 'numeric',\n                year: 'numeric'\n              })}\n            </Row>\n            <Row>{review.text}</Row>\n          </Container>\n        </div>\n      )\n    })\n    return reviews\n  }\n}\n\nReviewsList.propTypes = {\n  item: PropTypes.instanceOf(Item),\n  initialItems: PropTypes.arrayOf(PropTypes.instanceOf(Item))\n}\n\nexport default ReviewsList\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Col, Button, Form } from 'react-bootstrap'\n\nclass ReviewsForm extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      formData: {\n        name: '',\n        review: ''\n      },\n      formValidation: {\n        name: false,\n        review: false\n      },\n      isFormValid: false,\n      isFieldValidated: false\n    }\n  }\n\n  handleAddReviewClick = () => {\n    this.props.onAddReview(this.state.formData.name, this.state.formData.review)\n    this.resetFormState()\n  }\n\n  handleFormInputChange = e => {\n    const targetName = e.target.name\n    const targetValue = e.target.value\n    const isFieldValid = e.target.checkValidity() === true\n    let formValidation = { ...this.state.formValidation }\n    formValidation[targetName] = isFieldValid\n\n    this.setState(() => ({\n      formData: {\n        ...this.state.formData,\n        [targetName]: targetValue\n      },\n      formValidation,\n      isFormValid: Object.values(formValidation).every(v => v === true),\n      isFieldValidated: true\n    }))\n  }\n\n  resetFormState() {\n    this.setState(() => ({\n      formData: {\n        name: '',\n        review: ''\n      },\n      formValidation: {\n        name: false,\n        review: false\n      },\n      isFormValid: false,\n      isFieldValidated: false\n    }))\n  }\n\n  render() {\n    return (\n      <div>\n        <Col sm={6} className='pt-4 pl-0'>\n          <hr className='mb-4' />\n          <h4>Add your review</h4>\n          <Form className='pt-3' validated={this.state.isFieldValidated}>\n            <Form.Group>\n              <Form.Control\n                name='name'\n                value={this.state.formData.name}\n                type='text'\n                placeholder='Your name'\n                required\n                minLength='5'\n                onChange={this.handleFormInputChange}\n              />\n              <Form.Control.Feedback type='invalid'>\n                This field is required. Min. characters is 5.\n              </Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group>\n              <Form.Control\n                name='review'\n                value={this.state.formData.review}\n                as='textarea'\n                placeholder='Your review'\n                rows='3'\n                minLength='10'\n                maxLength='250'\n                required\n                onChange={this.handleFormInputChange}\n              />\n              <Form.Control.Feedback type='invalid'>\n                This field is required. Min. characters: 10, max. 250.\n              </Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group>\n              <Button\n                disabled={!this.state.isFormValid}\n                onClick={this.handleAddReviewClick}\n              >\n                Submit\n              </Button>\n            </Form.Group>\n          </Form>\n        </Col>\n      </div>\n    )\n  }\n}\n\nReviewsForm.propTypes = {\n  onAddReview: PropTypes.func\n}\n\nexport default ReviewsForm\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Item } from '../../data/DataGenerator'\nimport { Container, Row, Col, Button } from 'react-bootstrap'\nimport { Review } from '../../data/DataGenerator'\nimport Images from './Images'\nimport ReviewsList from './Reviews/ReviewsList'\nimport DataUtils from '../../data/DataUtils'\nimport ReviewsForm from './Reviews/ReviewsForm'\n\nclass ItemDetailsContainer extends Component {\n  handleAddToCart = () => {\n    this.props.onAddToCartClick(this.props.routeParamId)\n  }\n\n  handleAddReview = (name, review) => {\n    this.props.onAddReview(\n      new Review(name, new Date(), review),\n      this.props.routeParamId\n    )\n  }\n\n  ItemNotExists = () => (\n    <div className='text-center'>\n      <div className='pb-2'>\n        <h1>Error</h1>\n        <h3>Item with given id '{this.props.routeParamId}' does not exists.</h3>\n      </div>\n    </div>\n  )\n\n  Container = props => {\n    return (\n      <Container className='pb-5'>\n        <Row>\n          <Col sm={6} className='pb-4 pb-sm-0'>\n            <Images imagesSources={props.item.imagesSources} />\n          </Col>\n          <Col sm={6}>\n            <Container>\n              <Row>\n                <h3>{props.item.name}</h3>\n              </Row>\n              <Row>\n                <p>Id: {props.item.id}</p>\n              </Row>\n              <Row className='text-justify'>\n                <p>{props.item.descriptionLong}</p>\n              </Row>\n              <Row>\n                <Col className='align-self-center pl-0'>\n                  <span className='float-left'>\n                    On stock: {props.item.quantityOnStock}\n                  </span>\n                </Col>\n                <Col className='pr-0'>\n                  <Button\n                    className='float-right'\n                    disabled={props.item.quantityOnStock === 0}\n                    onClick={this.handleAddToCart}\n                  >\n                    Add &nbsp; <i className='fas fa-cart-arrow-down' />\n                  </Button>\n                </Col>\n              </Row>\n            </Container>\n          </Col>\n        </Row>\n        <hr className='mt-4 mb-4' />\n        <Row>\n          <Container className='pl-15'>\n            <h4>Reviews</h4>\n            <ReviewsList item={props.item} initialItems={props.initialItems} />\n\n            <ReviewsForm onAddReview={this.handleAddReview} />\n          </Container>\n        </Row>\n      </Container>\n    )\n  }\n\n  render() {\n    const idFromUrl = this.props.routeParamId\n    const initialItems = this.props.initialItems\n    return (\n      <div>\n        {DataUtils.getItemById(initialItems, idFromUrl) ? (\n          <this.Container\n            item={DataUtils.getItemById(initialItems, idFromUrl)}\n            initialItems={initialItems}\n          />\n        ) : (\n          <this.ItemNotExists />\n        )}\n      </div>\n    )\n  }\n}\n\nItemDetailsContainer.propTypes = {\n  initialItems: PropTypes.arrayOf(PropTypes.instanceOf(Item)),\n  routeParamId: PropTypes.string,\n  onAddReview: PropTypes.func,\n  onAddToCartClick: PropTypes.func\n}\n\nexport default ItemDetailsContainer\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Row, Col, Button, Badge, Container, Form } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\n\nclass MenuContainer extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      searchValue: ''\n    }\n  }\n\n  handleSearchChange = event => {\n    const searchValue = event.target.value\n    this.setState(() => ({\n      searchValue\n    }))\n    if (searchValue === '') {\n      this.props.onResetReceivedandFilteredData()\n    } else {\n      this.props.onSearchChange(searchValue)\n      event.persist()\n      event.preventDefault()\n    }\n  }\n\n  render() {\n    const publicURL = process.env.PUBLIC_URL\n    return (\n      <Container className='menu pb-3'>\n        <Row>\n          <Col xs={3} sm={4}>\n            <Link to={publicURL}>\n              <Button\n                className='float-right'\n                variant='primary'\n                onClick={() => this.props.onResetReceivedandFilteredData()}\n              >\n                <i className='fas fa-home' />\n              </Button>\n            </Link>\n          </Col>\n          <Col className='text-center' xs={6} sm={4}>\n            <Link to={publicURL + '/search'}>\n              <Form.Control\n                type='text'\n                placeholder='Search'\n                value={this.props.searchValue}\n                onChange={this.handleSearchChange}\n              />\n            </Link>\n          </Col>\n          <Col xs={3} sm={4}>\n            <Link to={publicURL + '/cart/info'}>\n              <Button\n                variant='primary float-left'\n                onClick={() => this.props.onResetReceivedandFilteredData()}\n              >\n                <i className='fas fa-shopping-cart' />\n                \"&nbsp;\n                <Badge variant='primary'>{this.props.cartItemsLength}</Badge>\n              </Button>\n            </Link>\n          </Col>\n        </Row>\n        <hr className='mt-4' />\n      </Container>\n    )\n  }\n}\n\nMenuContainer.propTypes = {\n  searchValue: PropTypes.string,\n  onSearchChange: PropTypes.func,\n  cartItemsLength: PropTypes.number,\n  onResetReceivedandFilteredData: PropTypes.func\n}\n\nexport default MenuContainer\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\nimport { CartItem, Item } from '../../data/DataGenerator'\nimport { Container, Row, Col, Button } from 'react-bootstrap'\n\nclass Info extends Component {\n  handleDecreaseQuantity = cartItem => {\n    this.handleQuantity(cartItem, 1, -1)\n  }\n\n  handleIncreaseQuantity = cartItem => {\n    this.handleQuantity(cartItem, -1, 1)\n  }\n\n  handleQuantity = (\n    cartItem,\n    initialItemQuantyToAdd,\n    cartItemQuantityToAdd\n  ) => {\n    this.props.onChangeItemQuantity(\n      cartItem,\n      initialItemQuantyToAdd,\n      cartItemQuantityToAdd\n    )\n  }\n\n  handleRemoveFromCart = cartItem => {\n    this.props.onRemoveCartItem(cartItem)\n  }\n\n  InfoView = () => {\n    const initialItems = this.props.initialItems\n    const cartItems = this.props.cartItems\n    let cartItemsComponents = []\n\n    cartItems.forEach((cartItem, i) => {\n      const cartItemQuantityIsZero = cartItem.quantity === 0\n      const item = initialItems.find(item => item.id === cartItem.itemId)\n      cartItemsComponents.push(\n        <Container key={i}>\n          <Row className='text-center'>\n            <Col xs={6} sm={2} className='pb-4 pb-sm-0'>\n              <Link\n                to={process.env.PUBLIC_URL + '/item-details/item-id-' + item.id}\n              >\n                <img\n                  className='cartItemImage'\n                  alt=''\n                  src={item.imagesSources[0]}\n                />\n              </Link>\n            </Col>\n            <Col xs={6} sm={3} className='pb-4 pb-sm-0 align-self-center'>\n              <Link\n                to={process.env.PUBLIC_URL + '/item-details/item-id-' + item.id}\n              >\n                {item.name}\n              </Link>\n            </Col>\n            <Col xs={12} sm={2} className='pb-4 pb-sm-0 align-self-center'>\n              <Row>\n                <Col xs={4} sm={4}>\n                  <Button\n                    className='float-left'\n                    disabled={cartItemQuantityIsZero}\n                    onClick={() => this.handleDecreaseQuantity(cartItem)}\n                  >\n                    <i className='fas fa-minus' />\n                  </Button>\n                </Col>\n                <Col xs={4} sm={4} className='align-self-center'>\n                  {cartItem.quantity}\n                </Col>\n                <Col xs={4} sm={4}>\n                  <Button\n                    className='float-none float-sm-right'\n                    onClick={() => this.handleIncreaseQuantity(cartItem)}\n                  >\n                    <i className='fas fa-plus' />\n                  </Button>\n                </Col>\n              </Row>\n            </Col>\n            <Col xs={12} sm={2} className='pb-4 pb-sm-0 align-self-center'>\n              {cartItem.price} EUR/unit\n            </Col>\n            <Col xs={12} sm={2} className='pb-4 pb-sm-0 align-self-center'>\n              Total: {cartItem.totalPrice} EUR\n            </Col>\n            <Col xs={12} sm={1} className='align-self-center'>\n              <Button onClick={() => this.handleRemoveFromCart(cartItem)}>\n                <i className='fas fa-trash-alt' />\n              </Button>\n            </Col>\n          </Row>\n          <hr />\n        </Container>\n      )\n    })\n\n    const sumIsZero = this.props.cartItemsSum === 0\n    return (\n      <Container>\n        <Row>{cartItemsComponents}</Row>\n        <Row className='pt-2'>\n          <Container>\n            <Row>\n              <Col>\n                <h4 className='float-right'>{this.props.cartItemsSum} EUR</h4>\n              </Col>\n            </Row>\n            <Row className='pt-1'>\n              <Col>\n                <Link to={`checkout`}>\n                  <Button className='float-right' disabled={sumIsZero}>\n                    Checkout\n                  </Button>\n                </Link>\n              </Col>\n            </Row>\n          </Container>\n        </Row>\n      </Container>\n    )\n  }\n\n  render() {\n    const cartIsEmpty = this.props.cartItems.length === 0\n    return (\n      <Container>\n        {cartIsEmpty ? (\n          <div className='text-center'>\n            <h2>Cart is empty. Pick something.</h2>\n          </div>\n        ) : (\n          <this.InfoView />\n        )}\n      </Container>\n    )\n  }\n}\n\nInfo.propTypes = {\n  cartItems: PropTypes.arrayOf(PropTypes.instanceOf(CartItem)),\n  cartItemsSum: PropTypes.number,\n  initialItems: PropTypes.arrayOf(PropTypes.instanceOf(Item)),\n  routeUrl: PropTypes.string,\n  onChangeItemQuantity: PropTypes.func,\n  onRemoveCartItem: PropTypes.func\n}\n\nexport default Info\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Form } from 'react-bootstrap'\n\nclass TextFormGroup extends Component {\n  handleChange = event => {\n    this.props.onChange(event)\n    event.persist()\n  }\n\n  render() {\n    return (\n      <Form.Group>\n        <Form.Label>{this.props.label}</Form.Label>\n        <Form.Control\n          name={this.props.name}\n          type={this.props.type}\n          defaultValue={this.props.defaultValue}\n          placeholder={this.props.placeholder}\n          required={true}\n          onChange={this.handleChange}\n          pattern={this.props.pattern}\n        />\n        <Form.Control.Feedback type='invalid'>\n          {this.props.feedback}\n        </Form.Control.Feedback>\n      </Form.Group>\n    )\n  }\n}\n\nTextFormGroup.propTypes = {\n  label: PropTypes.string,\n  name: PropTypes.string,\n  type: PropTypes.string,\n  defaultValue: PropTypes.string,\n  placeholder: PropTypes.string,\n  feedback: PropTypes.string,\n  pattern: PropTypes.string,\n  onChange: PropTypes.func\n}\n\nexport default TextFormGroup\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Form } from 'react-bootstrap'\nimport TextFormGroup from './TextFormGroup'\n\nclass PaymentFormGroup extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      showTotalPrice: false,\n      showCreditCardExtraFields:\n        this.props.checkoutData.paymentMethod.value === 'Credit Card'\n    }\n  }\n\n  handleChange = event => {\n    this.props.onChange(event)\n  }\n\n  handlePaymentMethodChange = event => {\n    const showCreditCardExtraFields = event.target.value === 'Credit Card'\n    this.setState(() => ({\n      showCreditCardExtraFields\n    }))\n    this.props.onPaymenthMethodChange(event)\n  }\n\n  PaymentMethods = () => {\n    let options = []\n    this.props.paymentMethods.forEach((paymentMethod, i) => {\n      options.push(\n        <option key={i + 1} value={paymentMethod}>\n          {paymentMethod}\n        </option>\n      )\n    })\n    return options\n  }\n\n  render() {\n    return (\n      <div>\n        <Form.Group>\n          <Form.Label>Payment method</Form.Label>\n          <Form.Control\n            as='select'\n            defaultValue={this.props.selectedOption}\n            onChange={this.handlePaymentMethodChange}\n          >\n            <this.PaymentMethods />\n          </Form.Control>\n        </Form.Group>\n        {this.state.showCreditCardExtraFields && (\n          <TextFormGroup\n            label={'Credit card number'}\n            name={'creditCardNumber'}\n            type={'text'}\n            defaultValue={this.props.checkoutData.creditCardNumber}\n            placeholder={'Ex. 5500000000000004'}\n            feedback={'Invalid format. Ex. 5500000000000004'}\n            pattern={this.props.creditCardNumRegex}\n            onChange={this.handleChange}\n          />\n        )}\n        {this.state.showCreditCardExtraFields && (\n          <TextFormGroup\n            label={'Credit card expiration date'}\n            name={'creditCardExpirationDate'}\n            type={'text'}\n            defaultValue={this.props.checkoutData.creditCardExpirationDate}\n            placeholder={'Ex. 02/19'}\n            feedback={'Invalid format. Ex. 02/19'}\n            pattern={this.props.creditCardExpDateRegex}\n            onChange={this.handleChange}\n          />\n        )}\n      </div>\n    )\n  }\n}\n\nPaymentFormGroup.propTypes = {\n  checkoutData: PropTypes.shape({\n    name: PropTypes.string,\n    email: PropTypes.string,\n    address: PropTypes.string,\n    paymentMethod: PropTypes.shape({\n      value: PropTypes.string,\n      selected: PropTypes.string\n    }),\n    creditCardNumber: PropTypes.string,\n    creditCardExpirationDate: PropTypes.string,\n    deliveryOption: PropTypes.shape({\n      value: PropTypes.shape({\n        name: PropTypes.string,\n        price: PropTypes.number\n      }),\n      selected: PropTypes.string\n    })\n  }),\n  paymentMethods: PropTypes.arrayOf(PropTypes.string),\n  creditCardNumRegex: PropTypes.string,\n  creditCardExpDateRegex: PropTypes.string,\n  selectedOption: PropTypes.string,\n  onPaymenthMethodChange: PropTypes.func,\n  onChange: PropTypes.func\n}\n\nexport default PaymentFormGroup\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Form } from 'react-bootstrap'\n\nclass DeliveryFormGroup extends Component {\n  handleChange = event => {\n    this.props.onChange(event)\n  }\n\n  DeliveryOptions = () => {\n    let options = []\n    this.props.deliveryOptions.forEach((deliveryOption, i) => {\n      options.push(\n        <option key={i + 1} value={deliveryOption.name}>\n          {deliveryOption.name + ' - ' + deliveryOption.price + ' EUR'}\n        </option>\n      )\n    })\n    return options\n  }\n\n  render() {\n    return (\n      <Form.Group>\n        <Form.Label>Delivery option</Form.Label>\n        <Form.Control\n          as='select'\n          defaultValue={this.props.selectedOption}\n          onChange={this.handleChange}\n        >\n          <this.DeliveryOptions />\n        </Form.Control>\n      </Form.Group>\n    )\n  }\n}\n\nDeliveryFormGroup.propTypes = {\n  deliveryOptions: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      price: PropTypes.num\n    })\n  ),\n  selectedOption: PropTypes.string,\n  onDeliveryOptionChange: PropTypes.func\n}\n\nexport default DeliveryFormGroup\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport TextFormGroup from './TextFormGroup'\n\nclass PersonalDataFormGroup extends Component {\n  handleChange = event => {\n    this.props.onChange(event)\n  }\n\n  render() {\n    return (\n      <div>\n        <TextFormGroup\n          label={'Full name'}\n          name={'name'}\n          type={'text'}\n          defaultValue={this.props.checkoutData.name}\n          placeholder={'Ex. John Smith'}\n          feedback={'This field is required.'}\n          pattern={null}\n          onChange={this.handleChange}\n        />\n        <TextFormGroup\n          label={'Email'}\n          name={'email'}\n          type={'email'}\n          defaultValue={this.props.checkoutData.email}\n          placeholder={'example@gmail.com'}\n          feedback={'Incorrect email format.'}\n          pattern={null}\n          onChange={this.handleChange}\n        />\n        <TextFormGroup\n          label={'Address'}\n          name={'address'}\n          type={'text'}\n          defaultValue={this.props.checkoutData.address}\n          placeholder={'Street, city, postalcode'}\n          feedback={'This field is required.'}\n          pattern={null}\n          onChange={this.handleChange}\n        />\n      </div>\n    )\n  }\n}\n\nPersonalDataFormGroup.propTypes = {\n  checkoutData: PropTypes.shape({\n    name: PropTypes.string,\n    email: PropTypes.string,\n    address: PropTypes.string,\n    paymentMethod: PropTypes.shape({\n      value: PropTypes.string,\n      selected: PropTypes.string\n    }),\n    creditCardNumber: PropTypes.string,\n    creditCardExpirationDate: PropTypes.string,\n    deliveryOption: PropTypes.shape({\n      value: PropTypes.shape({\n        name: PropTypes.string,\n        price: PropTypes.number\n      }),\n      selected: PropTypes.string\n    })\n  }),\n  onChange: PropTypes.func\n}\n\nexport default PersonalDataFormGroup\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\nimport { Container, Col, Row, Button, Form } from 'react-bootstrap'\nimport DataUtils from '../../../data/DataUtils'\nimport PaymentFormGroup from './PaymentFormGroup'\nimport DeliveryFormGroup from './DeliveryFormGroup'\nimport PersonalDataFormGroup from './PersonalDataFormGroup'\n\nclass CheckoutContainer extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      checkoutData: props.checkoutData,\n      deliveryPrice: props.checkoutData.deliveryOption.value.price,\n      showTotalPrice: false,\n      shouldCheckFieldValidity: false,\n      isFormValid: false,\n      regex: {\n        creditCardNumber:\n          '^(?:4[0-9]{12}(?:[0-9]{3})?|[25][1-7][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35d{3})d{11})$',\n        creditCardExpirationDate: '^(0[1-9]|1[0-2])/?([0-9]{4}|[0-9]{2})$'\n      }\n    }\n  }\n\n  handleTextFormGroupDataChange = event => {\n    this.setState(() => ({\n      checkoutData: {\n        ...this.state.checkoutData,\n        [event.target.name]: event.target.value\n      },\n      shouldCheckFieldValidity: true,\n      isFormValid: this.isFormValid()\n    }))\n  }\n\n  handleDeliveryOptionChange = event => {\n    const targetValue = event.target.value\n    const option = this.findDeliveryOptionByName(targetValue)\n    let checkoutData = { ...this.state.checkoutData }\n    checkoutData.deliveryOption.value = option\n    checkoutData.deliveryOption.selected = targetValue\n\n    this.setState(() => ({\n      checkoutData,\n      deliveryPrice: option.price,\n      shouldCheckFieldValidity: true\n    }))\n    this.recalculateTotalPriceWithDeliveryOption(option)\n  }\n\n  handlePaymentMethodChange = event => {\n    const option = event.target.value\n    let checkoutData = { ...this.state.checkoutData }\n    checkoutData.paymentMethod.value = option\n    checkoutData.paymentMethod.selected = option\n\n    this.setState(() => ({\n      checkoutData,\n      shouldCheckFieldValidity: true,\n      isFormValid: option !== 'Credit Card'\n    }))\n  }\n\n  handleButton = () => {\n    this.props.onCheckoutDataChange(this.state.checkoutData, this.isFormValid())\n  }\n\n  recalculateTotalPriceWithDeliveryOption = option => {\n    let newTotalPrice = this.props.cartItemsSum\n    newTotalPrice += option.price\n    newTotalPrice = DataUtils.roundToTwoDecimalPlaces(newTotalPrice)\n\n    this.setState(() => ({\n      totalPrice: newTotalPrice\n    }))\n  }\n\n  findDeliveryOptionByName = name =>\n    this.props.deliveryOptions.find(\n      o => o.name.substring(0, 2) === name.substring(0, 2)\n    )\n\n  isFormValid = () => {\n    const form = document.getElementById('checkoutForm')\n    let result = false\n    if (form !== 'undefinded' && form !== null) {\n      result = form.checkValidity()\n    }\n    return result\n  }\n\n  CheckoutView = () => {\n    return (\n      <Container>\n        <Col sm={5} className='col-centered'>\n          <Form\n            id='checkoutForm'\n            validated={this.state.shouldCheckFieldValidity}\n          >\n            <PersonalDataFormGroup\n              checkoutData={this.props.checkoutData}\n              onChange={this.handleTextFormGroupDataChange}\n            />\n            <PaymentFormGroup\n              checkoutData={this.props.checkoutData}\n              paymentMethods={this.props.paymentMethods}\n              creditCardNumRegex={this.state.regex.creditCardNumber}\n              creditCardExpDateRegex={this.state.regex.creditCardExpirationDate}\n              selectedOption={this.props.checkoutData.paymentMethod.value}\n              onPaymenthMethodChange={this.handlePaymentMethodChange}\n              onChange={this.handleTextFormGroupDataChange}\n            />\n            <DeliveryFormGroup\n              deliveryOptions={this.props.deliveryOptions}\n              selectedOption={this.props.checkoutData.deliveryOption.selected}\n              onChange={this.handleDeliveryOptionChange}\n            />\n\n            <h5 className='text-center'>\n              {DataUtils.roundToTwoDecimalPlaces(\n                this.props.cartItemsSum + this.state.deliveryPrice\n              )}{' '}\n              EUR\n            </h5>\n            <Row className='text-center pt-2'>\n              <Col>\n                <Link to={`info`}>\n                  <Button onClick={this.handleButton}>Back</Button>\n                </Link>\n              </Col>\n              <Col>\n                <Link to={`summary`}>\n                  <Button\n                    disabled={!this.state.isFormValid}\n                    onClick={this.handleButton}\n                  >\n                    Confirm\n                  </Button>\n                </Link>\n              </Col>\n            </Row>\n          </Form>\n        </Col>\n      </Container>\n    )\n  }\n\n  render() {\n    return <this.CheckoutView />\n  }\n}\n\nCheckoutContainer.propTypes = {\n  cartItemsSum: PropTypes.number,\n  checkoutData: PropTypes.shape({\n    name: PropTypes.string,\n    email: PropTypes.string,\n    address: PropTypes.string,\n    paymentMethod: PropTypes.shape({\n      value: PropTypes.string,\n      selected: PropTypes.string\n    }),\n    creditCardNumber: PropTypes.string,\n    creditCardExpirationDate: PropTypes.string,\n    deliveryOption: PropTypes.shape({\n      value: PropTypes.shape({\n        name: PropTypes.string,\n        price: PropTypes.number\n      }),\n      selected: PropTypes.string\n    })\n  }),\n  paymentMethods: PropTypes.arrayOf(PropTypes.string),\n  deliveryOptions: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      price: PropTypes.num\n    })\n  ),\n  routeUrl: PropTypes.string,\n  onConfirmCheckoutData: PropTypes.func\n}\n\nexport default CheckoutContainer\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\nimport { Container, Col, Row, Button, Modal } from 'react-bootstrap'\nimport DataUtils from '../../data/DataUtils'\n\nclass Summary extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      showModal: false\n    }\n  }\n\n  handleCloseModal = () => {\n    this.props.onPurchaseComplete()\n    this.setState({ showModal: false })\n  }\n\n  handleShowModal = () => {\n    this.setState({ showModal: true })\n  }\n\n  EndOfDemoModal = () => {\n    return (\n      <Modal show={this.state.showModal} onHide={this.handleCloseModal}>\n        <Modal.Header closeButton>\n          <Modal.Title>Online shop</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <p>\n            Your purchases are completed. This is the end of demo version. You\n            will be redirected to main page.\n          </p>\n          <p>PS. Check available quantity of items which you just bought.</p>\n        </Modal.Body>\n        <Modal.Footer>\n          <Link to={process.env.PUBLIC_URL}>\n            <Button variant='primary' onClick={this.handleCloseModal}>\n              Ok\n            </Button>\n          </Link>\n        </Modal.Footer>\n      </Modal>\n    )\n  }\n\n  SummaryRow = props => {\n    return (\n      <Row>\n        <Col className='text-right'>\n          <h6>{props.name}</h6>\n        </Col>\n        <Col className='text-left'>\n          <h6>{props.value}</h6>\n        </Col>\n      </Row>\n    )\n  }\n\n  render() {\n    const checkoutData = this.props.checkoutData\n    const showCreditCardExtraFields =\n      checkoutData.paymentMethod.value === 'Credit Card'\n    return (\n      <Container>\n        <Col xs={12} sm={5} className='col-centered text-center'>\n          <this.SummaryRow name={'Name:'} value={checkoutData.name} />\n          <this.SummaryRow name={'Email:'} value={checkoutData.email} />\n          <this.SummaryRow name={'Address:'} value={checkoutData.address} />\n          <this.SummaryRow\n            name={'Payment method:'}\n            value={checkoutData.paymentMethod.value}\n          />\n          {showCreditCardExtraFields ? (\n            <div>\n              <this.SummaryRow\n                name={'Credit card number:'}\n                value={checkoutData.creditCardNumber}\n              />\n              <this.SummaryRow\n                name={'Credit card expiration date:'}\n                value={checkoutData.creditCardExpirationDate}\n              />\n            </div>\n          ) : (\n            ''\n          )}\n          <this.SummaryRow\n            name={'Delivery option:'}\n            value={\n              checkoutData.deliveryOption.value.name +\n              ' - ' +\n              checkoutData.deliveryOption.value.price\n            }\n          />\n          <this.SummaryRow\n            name={'Price to pay:'}\n            value={\n              DataUtils.roundToTwoDecimalPlaces(\n                this.props.cartItemsSum +\n                  checkoutData.deliveryOption.value.price\n              ) + ' EUR'\n            }\n          />\n          <Row className='text-center pt-2'>\n            <Col>\n              <Link to={`checkout`}>\n                <Button>Back</Button>\n              </Link>\n            </Col>\n            <Col>\n              <Button onClick={this.handleShowModal}>Buy</Button>\n            </Col>\n          </Row>\n        </Col>\n        <this.EndOfDemoModal />\n      </Container>\n    )\n  }\n}\n\nSummary.propTypes = {\n  cartItemsSum: PropTypes.number,\n  checkoutData: PropTypes.shape({\n    name: PropTypes.string,\n    email: PropTypes.string,\n    address: PropTypes.string,\n    paymentMethod: PropTypes.shape({\n      value: PropTypes.string,\n      selected: PropTypes.string\n    }),\n    creditCardNumber: PropTypes.string,\n    creditCardExpirationDate: PropTypes.string,\n    deliveryOption: PropTypes.shape({\n      value: PropTypes.shape({\n        name: PropTypes.string,\n        price: PropTypes.number\n      }),\n      selected: PropTypes.string\n    })\n  }),\n  routeUrl: PropTypes.string,\n  onPurchaseComplete: PropTypes.func\n}\n\nexport default Summary\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Route } from 'react-router-dom'\nimport { CartItem, Item, Category } from '../../data/DataGenerator'\nimport Info from './Info'\nimport CheckoutContainer from './Checkout/CheckoutContainer'\nimport Summary from './Summary'\nimport { Container } from 'react-bootstrap'\n\nclass CartContainer extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      checkoutData: {\n        name: '',\n        email: '',\n        address: '',\n        paymentMethod: {\n          value: this.props.initialData.paymentMethods[0],\n          selected: this.props.initialData.paymentMethods[0]\n        },\n        creditCardNumber: '',\n        creditCardExpirationDate: '',\n        deliveryOption: {\n          value: this.props.initialData.deliveryOptions[0],\n          selected: this.props.initialData.deliveryOptions[0].name\n        }\n      }\n    }\n  }\n\n  handleQuantityChange = (\n    cartItem,\n    initialItemQuantyToAdd,\n    cartItemQuantityToAdd\n  ) => {\n    this.props.onChangeItemQuantity(\n      cartItem,\n      initialItemQuantyToAdd,\n      cartItemQuantityToAdd\n    )\n  }\n\n  handleRemove = cartItem => {\n    this.props.onRemoveCartItem(cartItem)\n  }\n\n  handleCheckoutDataChange = checkoutData => {\n    this.setState(() => ({ checkoutData }))\n  }\n\n  handlePurchaseComplete = () => {\n    this.props.onPurchaseComplete()\n  }\n\n  render() {\n    return (\n      <Container className='pb-5'>\n        <Route\n          exact\n          path={`${this.props.routeUrl}/info`}\n          component={route => (\n            <Info\n              cartItems={this.props.cartItems}\n              cartItemsSum={this.props.cartItemsSum}\n              initialItems={this.props.initialData.items}\n              routeUrl={route.match.url}\n              onChangeItemQuantity={this.handleQuantityChange}\n              onRemoveCartItem={this.handleRemove}\n            />\n          )}\n        />\n        <Route\n          eaxct\n          path={`${this.props.routeUrl}/checkout`}\n          component={route => (\n            <CheckoutContainer\n              cartItemsSum={this.props.cartItemsSum}\n              checkoutData={this.state.checkoutData}\n              paymentMethods={this.props.initialData.paymentMethods}\n              deliveryOptions={this.props.initialData.deliveryOptions}\n              routeUrl={route.match.url}\n              onCheckoutDataChange={this.handleCheckoutDataChange}\n            />\n          )}\n        />\n        <Route\n          eaxct\n          path={`${this.props.routeUrl}/summary`}\n          component={route => (\n            <Summary\n              cartItemsSum={this.props.cartItemsSum}\n              checkoutData={this.state.checkoutData}\n              routeUrl={route.match.url}\n              onPurchaseComplete={this.handlePurchaseComplete}\n            />\n          )}\n        />\n      </Container>\n    )\n  }\n}\n\nCartContainer.propTypes = {\n  cartItems: PropTypes.arrayOf(PropTypes.instanceOf(CartItem)),\n  cartItemsSum: PropTypes.number,\n  initialData: PropTypes.shape({\n    items: PropTypes.arrayOf(PropTypes.instanceOf(Item)),\n    categories: PropTypes.arrayOf(PropTypes.instanceOf(Category)),\n    paymentMethods: PropTypes.arrayOf(PropTypes.string),\n    deliveryOptions: PropTypes.arrayOf(\n      PropTypes.shape({\n        name: PropTypes.string,\n        price: PropTypes.num\n      })\n    )\n  }),\n  routeUrl: PropTypes.string,\n  onChangeItemQuantity: PropTypes.func,\n  onRemoveCartItem: PropTypes.func,\n  onPurchaseComplete: PropTypes.func\n}\n\nexport default CartContainer\n","import DataUtils from '../../data/DataUtils'\nimport { CartItem } from '../../data/DataGenerator'\n\nclass CartUtils {\n  static recalculateTotalSum = cartItems =>\n    cartItems.length > 0\n      ? DataUtils.roundToTwoDecimalPlaces(\n          cartItems.map(i => i.totalPrice).reduce((a, b) => a + b)\n        )\n      : 0\n\n  /**\n   * Returns recalculated CartData and info about operation status\n   */\n  static recalculateOnAdd = (addedItemId, items, cartData) => {\n    let isOk = false\n    const cartItem = CartUtils.findItemInCart(cartData, addedItemId)\n    const item = DataUtils.getItemById(items, addedItemId)\n\n    if (item.quantityOnStock > 0) {\n      item.quantityOnStock -= 1\n      if (cartItem === undefined) {\n        let newCartItem = new CartItem(addedItemId, item.price)\n        newCartItem.setQuantity(1)\n        cartData.cartItems.push(newCartItem)\n      } else {\n        cartItem.setQuantity(cartItem.quantity + 1)\n      }\n      cartData.cartItemsSum = CartUtils.recalculateTotalSum(cartData.cartItems)\n      isOk = true\n    }\n\n    return {\n      cartData,\n      isOk\n    }\n  }\n\n  /**\n   * Returns recalculated initialItems and cartData\n   */\n  static recalculateOnRemove = (cartItem, cartData, items) => {\n    const previousCartDataItems = cartData.cartItems\n    let item = DataUtils.getItemById(items, cartItem.itemId)\n    const cartItemIndex = cartData.cartItems\n      .map(i => i.itemId)\n      .indexOf(cartItem.itemId)\n    let changedCartItem = cartData.cartItems[cartItemIndex]\n    const quantitiesToGiveBack = changedCartItem.quantity\n    cartData.cartItems.splice(cartItemIndex, 1)\n    cartData.cartItemsSum = CartUtils.recalculateTotalSum(previousCartDataItems)\n    item.quantityOnStock += quantitiesToGiveBack\n\n    return {\n      items,\n      cartData\n    }\n  }\n\n  /**\n   * Returns recalculated initialItems and cartData\n   */\n  static recalculateAllAfterItemQuantityChange = (\n    items,\n    cartData,\n    cartItem,\n    initialItemQuantyToAdd,\n    cartItemQuantityToAdd\n  ) => {\n    let initialItem = items.find(i => i.id === cartItem.itemId)\n    let changedCartItem = cartData.cartItems.find(\n      c => c.itemId === cartItem.itemId\n    )\n\n    if (\n      // decrease quantity\n      (initialItemQuantyToAdd > 0 && changedCartItem.quantity > 0) ||\n      // increase quantity\n      (initialItemQuantyToAdd < 0 && initialItem.quantityOnStock > 0)\n    ) {\n      initialItem.quantityOnStock += initialItemQuantyToAdd\n      let newQuantityOfChangedItem =\n        changedCartItem.quantity + cartItemQuantityToAdd\n      changedCartItem.setQuantity(newQuantityOfChangedItem)\n      cartData.cartItemsSum = CartUtils.recalculateTotalSum(cartData.cartItems)\n    }\n\n    return {\n      items,\n      cartData\n    }\n  }\n\n  static findItemInCart = (cartData, itemId) =>\n    cartData.cartItems.find(cartItem => cartItem.itemId === itemId)\n}\n\nexport default CartUtils\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport DataFilter from '../data/DataFilter'\nimport SidebarContainer from './Sidebar/SidebarContainer'\nimport ViewerContainer from './Viewer/ViewerContainer'\nimport ItemDetailsContainer from './ItemDetails/ItemDetailsContainer'\nimport MenuContainer from './Menu/MenuContainer'\nimport CartContainer from './Cart/CartContainer'\nimport { Item, Category } from '../data/DataGenerator'\nimport CartUtils from './Cart/CartUtils'\nimport DataUtils from '../data/DataUtils'\n\nclass MainContainer extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      initialData: {\n        items: props.data.items,\n        categories: props.data.categories,\n        paymentMethods: props.data.paymentMethods,\n        deliveryOptions: props.data.deliveryOptions\n      },\n      receivedData: {\n        searchValue: '',\n        activeCategory: this.props.data.categories[0].name,\n        activeFeatures: []\n      },\n      filteredData: {\n        items: DataFilter.filterByCategoryAndFeature(\n          this.props.data.items,\n          this.props.data.categories[0].name,\n          []\n        )\n      },\n      cartData: {\n        cartItems: [],\n        cartItemsSum: 0\n      }\n    }\n  }\n\n  componentDidMount() {\n    this.loadCartDataFromLocalStorage()\n  }\n\n  handleSidebarChange = (activeCategory, activeFeatures) => {\n    this.setState(() => ({\n      receivedData: {\n        ...this.state.receivedData,\n        activeCategory,\n        activeFeatures\n      },\n      filteredData: {\n        ...this.state.filteredData,\n        items: DataFilter.filterByAllOptions(\n          this.state.initialData.items,\n          this.state.receivedData.searchValue,\n          activeCategory,\n          activeFeatures\n        )\n      }\n    }))\n  }\n\n  handleSearchChange = searchValue => {\n    this.setState(() => ({\n      receivedData: {\n        ...this.state.receivedData,\n        searchValue\n      },\n      filteredData: {\n        ...this.state.filteredData,\n        items: DataFilter.filterByAllOptions(\n          this.state.initialData.items,\n          searchValue,\n          this.state.receivedData.activeCategory,\n          this.state.receivedData.activeFeatures\n        )\n      }\n    }))\n  }\n\n  handleAddReview = (review, itemId) => {\n    let items = [...this.state.initialData.items]\n    let item = items.find(item => item.id === itemId)\n    if (item.reviews.find(r => r.name === review.name) === undefined) {\n      item.reviews.push(review)\n      DataUtils.saveToLocalStorage('items', items)\n      this.setState(() => ({\n        initialData: {\n          ...this.state.initialData,\n          items\n        }\n      }))\n    }\n  }\n\n  handleAddToCart = itemId => {\n    const result = CartUtils.recalculateOnAdd(\n      itemId,\n      this.state.initialData.items,\n      this.state.cartData\n    )\n    if (result.isOk) {\n      DataUtils.saveToLocalStorage('items', this.state.initialData.items)\n      this.saveCartDataToLocalStorage(result.cartData)\n      this.setState(() => ({\n        cartData: result.cartData\n      }))\n    }\n  }\n\n  handleRemoveFromCart = cartItem => {\n    const result = CartUtils.recalculateOnRemove(\n      cartItem,\n      this.state.cartData,\n      this.state.initialData.items\n    )\n    DataUtils.saveToLocalStorage('items', this.state.initialData.items)\n    this.saveCartDataToLocalStorage(result.cartData)\n    this.setState(() => ({\n      initialData: {\n        ...this.state.initialData,\n        items: result.items\n      },\n      cartData: result.cartData\n    }))\n  }\n\n  handleItemQuantityChange = (\n    cartItem,\n    initialItemQuantyToAdd,\n    cartItemQuantityToAdd\n  ) => {\n    const result = CartUtils.recalculateAllAfterItemQuantityChange(\n      this.state.initialData.items,\n      this.state.cartData,\n      cartItem,\n      initialItemQuantyToAdd,\n      cartItemQuantityToAdd\n    )\n    DataUtils.saveToLocalStorage('items', result.items)\n    this.saveCartDataToLocalStorage(result.cartData)\n    this.setState(() => ({\n      initialData: {\n        ...this.state.initialData,\n        items: result.items\n      },\n      cartData: result.cartData\n    }))\n  }\n\n  handlePurchaseComplete = () => {\n    DataUtils.saveToLocalStorage('items', this.state.initialData.items)\n    DataUtils.saveToLocalStorage('cartItems', [])\n    DataUtils.saveToLocalStorage('cartItemsSum', 0)\n    this.setState(() => ({\n      cartData: {\n        cartItems: [],\n        cartItemsSum: 0\n      }\n    }))\n  }\n\n  loadCartDataFromLocalStorage = () => {\n    const cartData = {\n      cartItems: DataUtils.loadFromLocalStorage(\n        'cartItems',\n        DataUtils.rebuildCartItemsFromJson\n      ),\n      cartItemsSum: DataUtils.loadFromLocalStorage('cartItemsSum')\n    }\n    if (cartData.cartItems !== null && cartData.cartItemsSum !== null) {\n      this.setState({\n        cartData\n      })\n    }\n  }\n\n  saveCartDataToLocalStorage = cartData => {\n    DataUtils.saveToLocalStorage('cartItems', cartData.cartItems)\n    DataUtils.saveToLocalStorage('cartItemsSum', cartData.cartItemsSum)\n  }\n\n  handleResetReceivedandFilteredData = () => {\n    this.setState(() => ({\n      receivedData: {\n        searchValue: '',\n        activeCategory: this.props.data.categories[0].name,\n        activeFeatures: []\n      },\n      filteredData: {\n        items: DataFilter.filterByCategoryAndFeature(\n          this.props.data.items,\n          this.props.data.categories[0].name,\n          []\n        )\n      }\n    }))\n  }\n\n  Viewer = () => {\n    return (\n      <Row>\n        <Col sm={3}>\n          <SidebarContainer\n            categories={this.props.data.categories}\n            activeCategory={this.state.receivedData.activeCategory}\n            onSidebarChange={this.handleSidebarChange}\n          />\n        </Col>\n        <Col sm={9}>\n          <ViewerContainer\n            filteredItems={this.state.filteredData.items}\n            onAddToCartClick={this.handleAddToCart}\n          />\n        </Col>\n      </Row>\n    )\n  }\n\n  NoMatch = ({ location }) => (\n    <div className='text-center'>\n      <div className='pb-2'>\n        <h1>Error 404</h1>\n        <h3>This page doesn't exists.</h3>\n      </div>\n      <h3>\n        No match for <code>{location.pathname}</code>\n      </h3>\n    </div>\n  )\n\n  render() {\n    const publicURL = process.env.PUBLIC_URL\n    return (\n      <Router>\n        <Container>\n          <Row>\n            <MenuContainer\n              searchValue={this.state.receivedData.searchValue}\n              onSearchChange={this.handleSearchChange}\n              cartItemsLength={this.state.cartData.cartItems.length}\n              onResetReceivedandFilteredData={\n                this.handleResetReceivedandFilteredData\n              }\n            />\n          </Row>\n          <Switch>\n            <Route\n              exact\n              path={'(' + publicURL + '|' + publicURL + '/search)'}\n              component={this.Viewer}\n            />\n            <Route\n              path={publicURL + '/cart'}\n              component={route => (\n                <CartContainer\n                  cartItems={this.state.cartData.cartItems}\n                  cartItemsSum={this.state.cartData.cartItemsSum}\n                  initialData={this.state.initialData}\n                  routeUrl={route.match.url}\n                  onChangeItemQuantity={this.handleItemQuantityChange}\n                  onRemoveCartItem={this.handleRemoveFromCart}\n                  onPurchaseComplete={this.handlePurchaseComplete}\n                />\n              )}\n            />\n            <Route\n              path={publicURL + '/item-details/item-id-:id'}\n              component={route => (\n                <ItemDetailsContainer\n                  initialItems={this.state.initialData.items}\n                  routeParamId={route.match.params.id}\n                  onAddReview={this.handleAddReview}\n                  onAddToCartClick={this.handleAddToCart}\n                />\n              )}\n            />\n            <Route component={this.NoMatch} />\n          </Switch>\n        </Container>\n      </Router>\n    )\n  }\n}\n\nMainContainer.propTypes = {\n  data: PropTypes.shape({\n    items: PropTypes.arrayOf(PropTypes.instanceOf(Item)),\n    categories: PropTypes.arrayOf(PropTypes.instanceOf(Category)),\n    paymentMethods: PropTypes.arrayOf(PropTypes.string),\n    deliveryOptions: PropTypes.arrayOf(\n      PropTypes.shape({\n        name: PropTypes.string,\n        price: PropTypes.num\n      })\n    )\n  })\n}\n\nexport default MainContainer\n","import React, { Component } from 'react'\nimport { DataGenerator } from './data/DataGenerator'\nimport DataUtils from './data/DataUtils'\nimport MainContainer from './components/MainContainer'\nimport './App.scss'\n\nclass App extends Component {\n  static dataQuantity = 200\n\n  constructor() {\n    super()\n    this.state = {\n      data: null,\n      error: {\n        occured: false,\n        message: ''\n      }\n    }\n  }\n\n  componentDidMount() {\n    this.generateData()\n      .then(data => {\n        const items = DataUtils.loadFromLocalStorage(\n          'items',\n          DataUtils.rebuildItemsFromJson\n        )\n        items === null\n          ? DataUtils.saveToLocalStorage('items', data.items)\n          : (data.items = items)\n        this.setState({ data })\n      })\n      .catch(err => {\n        this.setState({\n          error: {\n            occured: true,\n            message: err.message\n          }\n        })\n      })\n  }\n\n  generateData = () =>\n    new Promise((resolve, reject) => {\n      const data = new DataGenerator().generate(App.dataQuantity)\n      if (data instanceof Error) {\n        reject(new Error('Generate mocks with DataGenerator failed.'))\n      } else {\n        resolve(new DataGenerator().generate(App.dataQuantity))\n      }\n    })\n\n  ErrorContainer = () => {\n    return (\n      <div className=\"text-center pt-5\">\n        <div className=\"pb-2\">\n          <h2>Error while fetching data. Please reload the page.</h2>\n          <h5>Error message: \"{this.state.error.message}\"</h5>\n        </div>\n      </div>\n    )\n  }\n\n  WaitContainer = () => {\n    return (\n      <div className=\"text-center pt-5\">\n        <div className=\"pb-2\">\n          <h2>Downloading data...</h2>\n        </div>\n      </div>\n    )\n  }\n\n  render() {\n    if (\n      this.state.data !== null &&\n      this.state.data !== undefined &&\n      !this.state.error.occured\n    ) {\n      return <MainContainer data={this.state.data} />\n    } else if (this.state.error.occured) {\n      return <this.ErrorContainer />\n    } else {\n      return <this.WaitContainer />\n    }\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}