{"version":3,"sources":["data/DataUtils.js","data/DataGenerator.js","data/DataFilter.js","components/Sidebar/CategoryList.js","components/Sidebar/FeatureList.js","components/Sidebar/SidebarContainer.js","components/Viewer/PaginationUtils.js","components/Viewer/Pagination.js","components/Viewer/ItemCard.js","components/Viewer/CardGroups.js","components/Viewer/ViewerContainer.js","components/ItemDetails/Images.js","components/ItemDetails/Reviews/ReviewsList.js","components/ItemDetails/Reviews/ReviewsForm.js","components/ItemDetails/ItemDetailsContainer.js","components/Menu/MenuContainer.js","components/Cart/Info.js","components/Cart/Checkout/TextFormGroup.js","components/Cart/Checkout/PaymentFormGroup.js","components/Cart/Checkout/DeliveryFormGroup.js","components/Cart/Checkout/PersonalDataFormGroup.js","components/Cart/Checkout/CheckoutContainer.js","components/Cart/Summary.js","components/Cart/CartContainer.js","components/Cart/CartUtils.js","components/MainContainer.js","App.js","serviceWorker.js","index.js"],"names":["DataUtils","randomBetween","min","max","Math","random","roundToTwoDecimalPlaces","num","round","randomArrayItem","array","floor","length","arrayFromArrayRandomItems","Array","from","filter","randomBoolean","arrayContainsAllElementsFromAnother","array0","array1","map","a","some","b","every","e","getItemById","initialItems","itemId","find","item","id","rebuildItemsFromJson","json","i","Item","_id","_name","_price","_descriptionShort","_descriptionLong","_categoryName","_featuresNames","_reviews","r","Review","_date","_text","_imagesSources","_quantityOnStock","rebuildCartItemsFromJson","CartItem","_itemId","setQuantity","_quantity","deliveryCost","_deliveryCost","saveToLocalStorage","key","object","localStorage","setItem","JSON","stringify","loadFromLocalStorage","rebuilder","getItem","undefined","parse","DataGenerator","Object","classCallCheck","this","checkNullEmptyOrUndefinded","value","_data","_categories","Category","Feature","_paymentMethods","_deliveryOptions","name","price","quantity","chance","Chance","category","push","uuidv1","capitalize","word","syllables","lenth","sentence","words","paragraph","features","f","generateRandomReviews","generateRandomImages","items","categories","paymentMethods","deliveryOptions","Error","imagesNum","images","j","reviewsNum","reviews","date","string","american","year","descriptionShort","descriptionLong","categoryName","featuresNames","imagesSources","quantityOnStock","_features","_state","text","_totalPrice","DataFilter","activeCategory","activeFeatures","state","values","searchedValue","toLowerCase","includes","toString","filterByAllOptions","searchValue","filterByCategoryAndFeature","filterBySearchValue","CategoryList","handleClick","_this","props","onItemClick","index","_this2","categoriesNames","c","react_default","createElement","ListGroup","action","onClick","className","handleActive","Component","FeatureList","featureName","Form","Check","type","label","onChange","SidebarContainer","possibleConstructorReturn","getPrototypeOf","call","handleClickOnCategory","getFeaturesFromCategory","resetFeatures","setState","onSidebarChange","handleClickOnFeature","featureToSwitch","newFeatures","toConsumableArray","switchState","forEach","Container","variant","Sidebar_CategoryList","Group","Sidebar_FeatureList","PaginationUtils","cardsData","newActivePageNum","activePage","firstItemNumOnActivePage","getFirstItemNumOnActivePage","getPagesLen","itemsLength","ceil","rows","columns","itemsPerPage","Pagination","handlePage","pageChoiceOpt","isFirstPage","isLastPage","es_Pagination","First","disabled","Prev","active","Ellipsis","Next","ItemCard","handleAddToCart","onAddToCartClick","isOutOfStock","Card","Img","src","Body","Title","Text","Row","Col","Link","to","process","Button","handleDetailsClick","CardGroups","firstItemOnActivePage","cardGroups","rowNum","itemsGroup","itemNum","Viewer_ItemCard","CardDeck","Viewer","handleActivepage","viewerRows","viewerColumns","Viewer_CardGroups","filteredItems","Viewer_Pagination","Images","onThumbnailClick","imageNum","activeImageNum","Thumbnails","result","sources","source","alt","style","height","ReviewsList","itemWithUpdatedReviews","review","toLocaleString","day","month","ReviewsForm","handleAddReviewClick","onAddReview","formData","resetFormState","handleFormInputChange","targetName","target","targetValue","isFieldValid","checkValidity","formValidation","objectSpread","defineProperty","isFormValid","v","isFieldValidated","sm","validated","Control","placeholder","required","minLength","Feedback","as","maxLength","ItemDetailsContainer","routeParamId","handleAddReview","Date","ItemNotExists","ItemDetails_Images","Reviews_ReviewsList","Reviews_ReviewsForm","idFromUrl","MenuContainer","handleSearchChange","event","onResetReceivedandFilteredData","onSearchChange","persist","preventDefault","xs","publicURL","Badge","cartItemsLength","Info","handleDecreaseQuantity","cartItem","handleQuantity","handleIncreaseQuantity","initialItemQuantyToAdd","cartItemQuantityToAdd","onChangeItemQuantity","handleRemoveFromCart","onRemoveCartItem","InfoView","cartItems","cartItemsComponents","cartItemQuantityIsZero","totalPrice","sumIsZero","cartItemsSum","cartIsEmpty","TextFormGroup","handleChange","Label","defaultValue","pattern","feedback","PaymentFormGroup","handlePaymentMethodChange","showCreditCardExtraFields","onPaymenthMethodChange","PaymentMethods","options","paymentMethod","showTotalPrice","checkoutData","selectedOption","Checkout_TextFormGroup","creditCardNumber","creditCardNumRegex","creditCardExpirationDate","creditCardExpDateRegex","DeliveryFormGroup","DeliveryOptions","deliveryOption","PersonalDataFormGroup","email","address","CheckoutContainer","handleTextFormGroupDataChange","shouldCheckFieldValidity","handleDeliveryOptionChange","option","findDeliveryOptionByName","selected","deliveryPrice","recalculateTotalPriceWithDeliveryOption","handleButton","onCheckoutDataChange","newTotalPrice","o","substring","form","document","getElementById","CheckoutView","Checkout_PersonalDataFormGroup","Checkout_PaymentFormGroup","regex","Checkout_DeliveryFormGroup","Summary","handleCloseModal","onPurchaseComplete","showModal","handleShowModal","EndOfDemoModal","Modal","show","onHide","Header","closeButton","Footer","SummaryRow","CartContainer","handleQuantityChange","handleRemove","handleCheckoutDataChange","handlePurchaseComplete","initialData","Route","exact","path","concat","routeUrl","component","route","Cart_Info","match","url","eaxct","Checkout_CheckoutContainer","Cart_Summary","CartUtils","recalculateTotalSum","reduce","recalculateOnAdd","addedItemId","cartData","isOk","findItemInCart","newCartItem","recalculateOnRemove","previousCartDataItems","cartItemIndex","indexOf","quantitiesToGiveBack","splice","recalculateAllAfterItemQuantityChange","initialItem","changedCartItem","newQuantityOfChangedItem","MainContainer","handleSidebarChange","receivedData","filteredData","saveCartDataToLocalStorage","handleItemQuantityChange","loadCartDataFromLocalStorage","handleResetReceivedandFilteredData","data","Sidebar_SidebarContainer","ViewerContainer","NoMatch","_ref","location","pathname","BrowserRouter","Menu_MenuContainer","Switch","Cart_CartContainer","ItemDetails_ItemDetailsContainer","params","App","generateData","Promise","resolve","reject","generate","dataQuantity","ErrorContainer","error","message","WaitContainer","occured","then","catch","err","components_MainContainer","Boolean","window","hostname","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.21bd1fc8.chunk.js","sourcesContent":["import { Item, Review, CartItem } from './DataGenerator'\r\n\r\nclass DataUtils {\r\n  // min - inclusive, max - exclusive\r\n  static randomBetween = (min, max) => Math.random() * (max - min) + min\r\n\r\n  static roundToTwoDecimalPlaces = num => Math.round(num * 100) / 100\r\n\r\n  static randomArrayItem = array =>\r\n    array[Math.floor(Math.random() * array.length)]\r\n\r\n  static arrayFromArrayRandomItems = array =>\r\n    Array.from(array).filter(() => DataUtils.randomBoolean())\r\n\r\n  static randomBoolean = () => Math.random() >= 0.5\r\n\r\n  static arrayContainsAllElementsFromAnother = (array0, array1) =>\r\n    array1\r\n      .map(a => {\r\n        return array0.some(b => {\r\n          return b === a\r\n        })\r\n      })\r\n      .every(e => e)\r\n\r\n  static getItemById = (initialItems, itemId) =>\r\n    initialItems.find(item => item.id === itemId)\r\n\r\n  static rebuildItemsFromJson = json =>\r\n    json.map(i => {\r\n      return new Item(\r\n        i._id,\r\n        i._name,\r\n        i._price,\r\n        i._descriptionShort,\r\n        i._descriptionLong,\r\n        i._categoryName,\r\n        i._featuresNames,\r\n        i._reviews.map(r => new Review(r._name, r._date, r._text)),\r\n        i._imagesSources,\r\n        i._quantityOnStock\r\n      )\r\n    })\r\n\r\n  static rebuildCartItemsFromJson = json =>\r\n    json.map(i => {\r\n      let item = new CartItem(i._itemId, i._price)\r\n      item.setQuantity(i._quantity)\r\n      item.deliveryCost = i._deliveryCost\r\n      return item\r\n    })\r\n\r\n  static saveToLocalStorage = (key, object) => {\r\n    localStorage.setItem(key, JSON.stringify(object))\r\n  }\r\n\r\n  static loadFromLocalStorage = (key, rebuilder) => {\r\n    const item = localStorage.getItem(key)\r\n    if (item !== null) {\r\n      if (rebuilder === undefined) {\r\n        return JSON.parse(localStorage.getItem(key))\r\n      } else {\r\n        return rebuilder(JSON.parse(localStorage.getItem(key)))\r\n      }\r\n    } else {\r\n      return null\r\n    }\r\n  }\r\n}\r\n\r\nexport default DataUtils\r\n","import DataUtils from './DataUtils'\r\nimport Chance from 'chance'\r\nimport uuidv1 from 'uuid/v1'\r\n\r\nclass DataGenerator {\r\n  constructor() {\r\n    this._data = []\r\n    this._categories = [\r\n      new Category('Category 0', [\r\n        new Feature('C0 feature 0'),\r\n        new Feature('C0 feature 1'),\r\n        new Feature('C0 feature 2')\r\n      ]),\r\n      new Category('Category 1', [\r\n        new Feature('C1 feature 0'),\r\n        new Feature('C1 feature 1'),\r\n        new Feature('C1 feature 2'),\r\n        new Feature('C1 feature 3')\r\n      ]),\r\n      new Category('Category 2', [\r\n        new Feature('C2 feature 0'),\r\n        new Feature('C2 feature 1'),\r\n        new Feature('C2 feature 2'),\r\n        new Feature('C2 feature 3'),\r\n        new Feature('C2 feature 4')\r\n      ])\r\n    ]\r\n    this._paymentMethods = ['PayPal', 'PayU', 'Credit Card']\r\n    this._deliveryOptions = [\r\n      {\r\n        name: 'UPS',\r\n        price: 14.99\r\n      },\r\n      {\r\n        name: 'DHL',\r\n        price: 16.99\r\n      },\r\n      {\r\n        name: 'DPD',\r\n        price: 18.99\r\n      }\r\n    ]\r\n  }\r\n\r\n  set paymentMethods(value) {\r\n    this._paymentMethods = value\r\n  }\r\n\r\n  set deliveryOptions(value) {\r\n    this._deliveryOptions = value\r\n  }\r\n\r\n  generate(quantity) {\r\n    const chance = new Chance()\r\n    for (let i = 0; i < quantity; i++) {\r\n      const category = DataUtils.randomArrayItem(this._categories)\r\n      this._data.push(\r\n        new Item(\r\n          uuidv1(),\r\n          chance.capitalize(chance.word({ syllables: 2, lenth: 6 })) + ' #' + i,\r\n          DataUtils.roundToTwoDecimalPlaces(DataUtils.randomBetween(1, 1000)),\r\n          chance.sentence({ words: 10 }),\r\n          chance.paragraph(),\r\n          category.name,\r\n          DataUtils.arrayFromArrayRandomItems(\r\n            category.features.map(f => f.name)\r\n          ),\r\n          this.generateRandomReviews(\r\n            chance,\r\n            Math.floor(DataUtils.randomBetween(2, 6))\r\n          ),\r\n          this.generateRandomImages(\r\n            chance,\r\n            Math.floor(DataUtils.randomBetween(2, 6))\r\n          ),\r\n          Math.floor(DataUtils.randomBetween(1, 11))\r\n        )\r\n      )\r\n    }\r\n\r\n    const isCreatedWithSuccess =\r\n      this.checkNullEmptyOrUndefinded(this._data) &&\r\n      this.checkNullEmptyOrUndefinded(this._categories) &&\r\n      this.checkNullEmptyOrUndefinded(this._paymentMethods) &&\r\n      this.checkNullEmptyOrUndefinded(this._deliveryOptions)\r\n    return isCreatedWithSuccess\r\n      ? {\r\n          items: this._data,\r\n          categories: this._categories,\r\n          paymentMethods: this._paymentMethods,\r\n          deliveryOptions: this._deliveryOptions\r\n        }\r\n      : new Error('Generated data is broken. Some field is null or undefinded.')\r\n  }\r\n\r\n  checkNullEmptyOrUndefinded = value =>\r\n    value !== null && value !== [] && value !== undefined\r\n\r\n  generateRandomImages(chance, imagesNum) {\r\n    let images = []\r\n    for (let j = 0; j < imagesNum; j++) {\r\n      images.push(\r\n        'https://avatars.dicebear.com/v2/identicon/' +\r\n          chance.word({ length: 15 }) +\r\n          '.svg'\r\n      )\r\n    }\r\n    return images\r\n  }\r\n\r\n  generateRandomReviews(chance, reviewsNum) {\r\n    let reviews = []\r\n    for (let i = 0; i < reviewsNum; i++) {\r\n      reviews.push(\r\n        new Review(\r\n          chance.name(),\r\n          chance.date({\r\n            string: false,\r\n            american: false,\r\n            year: 2018\r\n          }),\r\n          chance.sentence()\r\n        )\r\n      )\r\n    }\r\n    return reviews\r\n  }\r\n}\r\n\r\nclass Item {\r\n  constructor(\r\n    id,\r\n    name,\r\n    price,\r\n    descriptionShort,\r\n    descriptionLong,\r\n    categoryName,\r\n    featuresNames,\r\n    reviews,\r\n    imagesSources,\r\n    quantityOnStock\r\n  ) {\r\n    this._id = id\r\n    this._name = name\r\n    this._price = price\r\n    this._descriptionShort = descriptionShort\r\n    this._descriptionLong = descriptionLong\r\n    this._categoryName = categoryName\r\n    this._featuresNames = featuresNames\r\n    this._reviews = reviews\r\n    this._imagesSources = imagesSources\r\n    this._quantityOnStock = quantityOnStock\r\n  }\r\n\r\n  get id() {\r\n    return this._id\r\n  }\r\n\r\n  get name() {\r\n    return this._name\r\n  }\r\n\r\n  get price() {\r\n    return this._price\r\n  }\r\n\r\n  get descriptionShort() {\r\n    return this._descriptionShort\r\n  }\r\n\r\n  get descriptionLong() {\r\n    return this._descriptionLong\r\n  }\r\n\r\n  get categoryName() {\r\n    return this._categoryName\r\n  }\r\n\r\n  get featuresNames() {\r\n    return this._featuresNames\r\n  }\r\n\r\n  get reviews() {\r\n    return this._reviews\r\n  }\r\n\r\n  get imagesSources() {\r\n    return this._imagesSources\r\n  }\r\n\r\n  get quantityOnStock() {\r\n    return this._quantityOnStock\r\n  }\r\n\r\n  set quantityOnStock(value) {\r\n    this._quantityOnStock = value\r\n  }\r\n}\r\n\r\nclass Category {\r\n  constructor(name, features) {\r\n    this._name = name\r\n    this._features = features\r\n  }\r\n\r\n  get name() {\r\n    return this._name\r\n  }\r\n\r\n  get features() {\r\n    return this._features\r\n  }\r\n}\r\n\r\nclass Feature {\r\n  constructor(name) {\r\n    this._name = name\r\n    this._state = false\r\n  }\r\n\r\n  get name() {\r\n    return this._name\r\n  }\r\n\r\n  get state() {\r\n    return this._state\r\n  }\r\n\r\n  set state(value) {\r\n    this._state = value\r\n  }\r\n\r\n  switchState() {\r\n    this._state = !this._state\r\n  }\r\n}\r\n\r\nclass Review {\r\n  constructor(name, date, text) {\r\n    this._name = name\r\n    this._date = date\r\n    this._text = text\r\n  }\r\n\r\n  get name() {\r\n    return this._name\r\n  }\r\n\r\n  get date() {\r\n    return this._date\r\n  }\r\n\r\n  get text() {\r\n    return this._text\r\n  }\r\n}\r\n\r\nclass CartItem {\r\n  constructor(itemId, price) {\r\n    this._itemId = itemId\r\n    this._quantity = 0\r\n    this._price = price\r\n    this._deliveryCost = 0\r\n    this._totalPrice = 0\r\n  }\r\n\r\n  get itemId() {\r\n    return this._itemId\r\n  }\r\n\r\n  get quantity() {\r\n    return this._quantity\r\n  }\r\n\r\n  get price() {\r\n    return this._price\r\n  }\r\n\r\n  get deliveryCost() {\r\n    return this._deliveryCost\r\n  }\r\n\r\n  set deliveryCost(value) {\r\n    this._deliveryCost = value\r\n  }\r\n\r\n  get totalPrice() {\r\n    return this._totalPrice\r\n  }\r\n\r\n  setQuantity(quantity) {\r\n    this._quantity = quantity\r\n    this._totalPrice = DataUtils.roundToTwoDecimalPlaces(\r\n      this._quantity * this._price\r\n    )\r\n  }\r\n}\r\n\r\nexport { DataGenerator, Item, Category, Feature, Review, CartItem }\r\n","import DataUtils from './DataUtils'\r\n\r\nclass DataFilter {\r\n  static filterByCategoryAndFeature(\r\n    initialItems,\r\n    activeCategory,\r\n    activeFeatures\r\n  ) {\r\n    const allFeaturesAreOff = activeFeatures.every(\r\n      filter => filter.state === false\r\n    )\r\n\r\n    if (allFeaturesAreOff) {\r\n      return Object.values(\r\n        initialItems.filter(item => {\r\n          return item.categoryName === activeCategory\r\n        })\r\n      )\r\n    } else {\r\n      return initialItems.filter(\r\n        item =>\r\n          DataUtils.arrayContainsAllElementsFromAnother(\r\n            item.featuresNames,\r\n            activeFeatures.filter(f => f.state === true).map(f => f.name)\r\n          ) && item.categoryName === activeCategory\r\n      )\r\n    }\r\n  }\r\n\r\n  static filterBySearchValue(initialItems, value) {\r\n    const searchedValue = value.toLowerCase()\r\n    return initialItems.filter(\r\n      item =>\r\n        item.name.toLowerCase().includes(searchedValue) ||\r\n        item.descriptionShort.toLowerCase().includes(searchedValue) ||\r\n        item.descriptionLong.toLowerCase().includes(searchedValue) ||\r\n        item.price.toString().includes(searchedValue)\r\n    )\r\n  }\r\n\r\n  static filterByAllOptions = (\r\n    initialItems,\r\n    searchValue,\r\n    activeCategory,\r\n    activeFeatures\r\n  ) =>\r\n    DataFilter.filterByCategoryAndFeature(\r\n      DataFilter.filterBySearchValue(initialItems, searchValue),\r\n      activeCategory,\r\n      activeFeatures\r\n    )\r\n}\r\n\r\nexport default DataFilter\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { ListGroup } from 'react-bootstrap'\r\n\r\nclass CategoryList extends Component {\r\n  handleClick = activeCategory => {\r\n    this.props.onItemClick(activeCategory)\r\n  }\r\n\r\n  handleActive(value, index) {\r\n    if (\r\n      this.props.activeCategory === value ||\r\n      (this.props.activeCategory === null && index === 0)\r\n    )\r\n      return 'active'\r\n  }\r\n\r\n  render() {\r\n    return this.props.categoriesNames.map((c, index) => (\r\n      <ListGroup.Item\r\n        action\r\n        onClick={() => {\r\n          this.handleClick(c)\r\n        }}\r\n        className={this.handleActive(c, index)}\r\n        key={c}\r\n      >\r\n        {c}\r\n      </ListGroup.Item>\r\n    ))\r\n  }\r\n}\r\n\r\nCategoryList.propTypes = {\r\n  categoriesNames: PropTypes.arrayOf(PropTypes.string),\r\n  activeCategory: PropTypes.string,\r\n  onItemClick: PropTypes.func\r\n}\r\n\r\nexport default CategoryList\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Form } from 'react-bootstrap'\r\nimport { Feature } from '../../data/DataGenerator'\r\n\r\nclass FeatureList extends Component {\r\n  handleClick = featureName => {\r\n    this.props.onItemClick(featureName)\r\n  }\r\n\r\n  render() {\r\n    return this.props.features.map(f => (\r\n      <Form.Check\r\n        type='checkbox'\r\n        label={f.name}\r\n        key={f.name}\r\n        onChange={() => {\r\n          this.handleClick(f.name)\r\n        }}\r\n      />\r\n    ))\r\n  }\r\n}\r\n\r\nFeatureList.propTypes = {\r\n  features: PropTypes.arrayOf(PropTypes.instanceOf(Feature))\r\n}\r\n\r\nexport default FeatureList\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Container, Form, ListGroup } from 'react-bootstrap'\r\nimport CategoryList from './CategoryList'\r\nimport FeatureList from './FeatureList'\r\nimport { Category } from '../../data/DataGenerator'\r\n\r\nclass SidebarContainer extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      activeCategory: '',\r\n      activeFeatures: []\r\n    }\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.setState({\r\n      activeCategory: 'Category 0',\r\n      activeFeatures: this.getFeaturesFromCategory('Category 0')\r\n    })\r\n  }\r\n\r\n  handleClickOnCategory = activeCategory => {\r\n    let activeFeatures = this.getFeaturesFromCategory(activeCategory)\r\n    if (this.state.activeCategory !== activeCategory) {\r\n      this.resetFeatures(activeFeatures)\r\n    }\r\n\r\n    this.setState(() => ({\r\n      activeCategory,\r\n      activeFeatures\r\n    }))\r\n    this.props.onSidebarChange(activeCategory, activeFeatures)\r\n  }\r\n\r\n  handleClickOnFeature = featureToSwitch => {\r\n    let newFeatures = [...this.state.activeFeatures]\r\n    newFeatures.find(f => f.name === featureToSwitch).switchState()\r\n\r\n    this.setState(() => ({\r\n      activeFeatures: newFeatures\r\n    }))\r\n    this.props.onSidebarChange(this.state.activeCategory, newFeatures)\r\n  }\r\n\r\n  getFeaturesFromCategory(activeCategory) {\r\n    return this.props.categories.find(c => c.name === activeCategory).features\r\n  }\r\n\r\n  resetFeatures(activeFeatures) {\r\n    activeFeatures.forEach(f => {\r\n      f.state = false\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <ListGroup className='pb-3' variant='flush'>\r\n          <CategoryList\r\n            categoriesNames={this.props.categories.map(c => c.name)}\r\n            activeCategory={this.props.activeCategory}\r\n            onItemClick={this.handleClickOnCategory}\r\n          />\r\n        </ListGroup>\r\n        <Form className='pl-3'>\r\n          <Form.Group>\r\n            <FeatureList\r\n              features={this.getFeaturesFromCategory(this.props.activeCategory)}\r\n              onItemClick={this.handleClickOnFeature}\r\n            />\r\n          </Form.Group>\r\n        </Form>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nSidebarContainer.propTypes = {\r\n  categories: PropTypes.arrayOf(PropTypes.instanceOf(Category)),\r\n  activeCategory: PropTypes.string,\r\n  onSidebarChange: PropTypes.func\r\n}\r\n\r\nexport default SidebarContainer\r\n","class PaginationUtils {\r\n  static getPagesLen = (itemsLength, cardsData) =>\r\n    Math.ceil(itemsLength / (cardsData.rows * cardsData.columns)) - 1\r\n\r\n  static getFirstItemNumOnActivePage = cardsData => {\r\n    const itemsPerPage = cardsData.rows * cardsData.columns\r\n    const activePage = cardsData.activePage\r\n    let firstItemOnActivePage = cardsData.firstItemNumOnActivePage\r\n\r\n    if (activePage === 0) {\r\n      firstItemOnActivePage = 0\r\n    } else {\r\n      firstItemOnActivePage = itemsPerPage * activePage\r\n    }\r\n    return firstItemOnActivePage\r\n  }\r\n\r\n  static handlePage(cardsData, newActivePageNum) {\r\n    cardsData.activePage = newActivePageNum\r\n    cardsData.firstItemNumOnActivePage = PaginationUtils.getFirstItemNumOnActivePage(\r\n      cardsData\r\n    )\r\n    return cardsData\r\n  }\r\n}\r\n\r\nexport default PaginationUtils\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Pagination as BootstrapPagination } from 'react-bootstrap'\r\nimport PaginationUtils from './PaginationUtils'\r\n\r\nclass Pagination extends Component {\r\n  handlePage = (props, pageChoiceOpt) => {\r\n    let cardsData = props.cardsData\r\n    let activePage = cardsData.activePage\r\n\r\n    switch (pageChoiceOpt) {\r\n      case 'first':\r\n        props.onItemClick(PaginationUtils.handlePage(cardsData, 0))\r\n        break\r\n      case 'last':\r\n        props.onItemClick(\r\n          PaginationUtils.handlePage(\r\n            cardsData,\r\n            PaginationUtils.getPagesLen(props.itemsLength, cardsData)\r\n          )\r\n        )\r\n        break\r\n      case 'prev':\r\n        props.onItemClick(PaginationUtils.handlePage(cardsData, activePage - 1))\r\n        break\r\n      case 'next':\r\n        props.onItemClick(PaginationUtils.handlePage(cardsData, activePage + 1))\r\n        break\r\n      default:\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const props = this.props\r\n    const isFirstPage = props.cardsData.activePage === 0\r\n    const isLastPage =\r\n      props.cardsData.activePage ===\r\n      PaginationUtils.getPagesLen(props.itemsLength, props.cardsData)\r\n    return (\r\n      <div>\r\n        <BootstrapPagination className='pt-2 float-right'>\r\n          <BootstrapPagination.First\r\n            disabled={isFirstPage}\r\n            onClick={() => this.handlePage(props, 'first')}\r\n          />\r\n          <BootstrapPagination.Prev\r\n            disabled={isFirstPage}\r\n            onClick={() => this.handlePage(props, 'prev')}\r\n          />\r\n          <BootstrapPagination.Item active>\r\n            {props.cardsData.activePage + 1}\r\n          </BootstrapPagination.Item>\r\n          <BootstrapPagination.Ellipsis disabled />\r\n          <BootstrapPagination.Item\r\n            onClick={() => this.handlePage(props, 'last')}\r\n          >\r\n            {PaginationUtils.getPagesLen(props.itemsLength, props.cardsData) +\r\n              1}\r\n          </BootstrapPagination.Item>\r\n          <BootstrapPagination.Next\r\n            disabled={isLastPage}\r\n            onClick={() => this.handlePage(props, 'next')}\r\n          />\r\n        </BootstrapPagination>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nPagination.propTypes = {\r\n  itemsLength: PropTypes.number,\r\n  cardsData: PropTypes.shape({\r\n    rows: PropTypes.number,\r\n    columns: PropTypes.number,\r\n    activePage: PropTypes.number,\r\n    firstItemNumOnActivePage: PropTypes.num\r\n  }),\r\n  onItemClick: PropTypes.func\r\n}\r\n\r\nexport default Pagination\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Card, Row, Col, Button } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { Item } from '../../data/DataGenerator'\r\n\r\nclass ItemCard extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      item: this.props.item\r\n    }\r\n  }\r\n\r\n  handleAddToCart = () => {\r\n    this.props.onAddToCartClick(this.state.item.id)\r\n  }\r\n\r\n  render() {\r\n    const isOutOfStock = this.state.item.quantityOnStock === 0\r\n    return (\r\n      <Card>\r\n        <Card.Img\r\n          className='mx-auto d-block viewerCardImage'\r\n          variant='top'\r\n          src={this.state.item.imagesSources[0]}\r\n        />\r\n        <Card.Body className='d-flex flex-column'>\r\n          <Card.Title>{this.state.item.name}</Card.Title>\r\n          <Card.Text>{this.state.item.descriptionShort}</Card.Text>\r\n          <div className='mt-auto'>\r\n            <Row>\r\n              <Col>\r\n                <Link\r\n                  to={\r\n                    process.env.PUBLIC_URL +\r\n                    '/item-details/item-id-' +\r\n                    this.state.item.id\r\n                  }\r\n                >\r\n                  <Button\r\n                    className='float-left'\r\n                    variant='primary'\r\n                    onClick={this.handleDetailsClick}\r\n                  >\r\n                    <i className='fas fa-info' /> &nbsp; Details\r\n                  </Button>\r\n                </Link>\r\n              </Col>\r\n              <Col>\r\n                <Button\r\n                  className='float-right'\r\n                  variant='primary'\r\n                  disabled={isOutOfStock}\r\n                  onClick={this.handleAddToCart}\r\n                >\r\n                  <i className='fas fa-cart-arrow-down' />\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n            <Row className='pt-3 text-center'>\r\n              <Col>\r\n                {isOutOfStock ? 'Out of stock' : this.state.item.price + ' EUR'}\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n        </Card.Body>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\nItemCard.propTypes = {\r\n  item: PropTypes.instanceOf(Item)\r\n}\r\n\r\nexport default ItemCard\r\n","import React, { Component } from 'react'\r\nimport { CardDeck } from 'react-bootstrap'\r\nimport { Item } from '../../data/DataGenerator'\r\nimport PropTypes from 'prop-types'\r\nimport ItemCard from './ItemCard'\r\n\r\nclass CardGroups extends Component {\r\n  handleAddToCart = itemId => {\r\n    this.props.onAddToCartClick(itemId)\r\n  }\r\n\r\n  CardGroups = () => {\r\n    const rows = this.props.cardsData.rows\r\n    let firstItemOnActivePage = this.props.cardsData.firstItemNumOnActivePage\r\n\r\n    let cardGroups = []\r\n    for (let rowNum = 0; rowNum < rows; rowNum++) {\r\n      let itemsGroup = []\r\n      for (let itemNum = 0; itemNum < this.props.cardsData.columns; itemNum++) {\r\n        const item = this.props.items[firstItemOnActivePage]\r\n        if (item !== undefined) {\r\n          itemsGroup.push(\r\n            <ItemCard\r\n              item={item}\r\n              key={item.id}\r\n              onAddToCartClick={this.handleAddToCart}\r\n            />\r\n          )\r\n          firstItemOnActivePage += 1\r\n        }\r\n        if (itemNum % rows === 0) {\r\n          cardGroups.push(\r\n            <CardDeck className='pb-2' key={rowNum}>\r\n              {itemsGroup}\r\n            </CardDeck>\r\n          )\r\n        }\r\n      }\r\n    }\r\n    return cardGroups\r\n  }\r\n\r\n  render() {\r\n    return <this.CardGroups />\r\n  }\r\n}\r\n\r\nCardGroups.propTypes = {\r\n  items: PropTypes.arrayOf(PropTypes.instanceOf(Item)),\r\n  cardsData: PropTypes.shape({\r\n    rows: PropTypes.number,\r\n    columns: PropTypes.number,\r\n    activePage: PropTypes.number,\r\n    firstItemNumOnActivePage: PropTypes.num\r\n  })\r\n}\r\n\r\nexport default CardGroups\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Container } from 'react-bootstrap'\r\nimport Pagination from './Pagination'\r\nimport CardGroups from './CardGroups'\r\nimport { Item } from '../../data/DataGenerator'\r\n\r\nclass Viewer extends Component {\r\n  static viewerRows = 2\r\n  static viewerColumns = 2\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      cardsData: {\r\n        rows: Viewer.viewerRows,\r\n        columns: Viewer.viewerColumns,\r\n        activePage: 0,\r\n        firstItemNumOnActivePage: 0\r\n      }\r\n    }\r\n  }\r\n\r\n  handleActivepage = cardsData => {\r\n    this.setState(() => ({\r\n      cardsData\r\n    }))\r\n  }\r\n\r\n  handleAddToCart = itemId => {\r\n    this.props.onAddToCartClick(itemId)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <CardGroups\r\n          items={this.props.filteredItems}\r\n          cardsData={this.state.cardsData}\r\n          onAddToCartClick={this.handleAddToCart}\r\n        />\r\n        <Pagination\r\n          itemsLength={this.props.filteredItems.length}\r\n          cardsData={this.state.cardsData}\r\n          onItemClick={this.handleActivepage}\r\n        />\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nViewer.propTypes = {\r\n  filteredItems: PropTypes.arrayOf(PropTypes.instanceOf(Item))\r\n}\r\n\r\nexport default Viewer\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Container, Row, Col, Button } from 'react-bootstrap'\r\n\r\nclass Images extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      activeImageNum: 0\r\n    }\r\n  }\r\n\r\n  onThumbnailClick = imageNum => {\r\n    this.setState(() => ({\r\n      activeImageNum: imageNum\r\n    }))\r\n  }\r\n\r\n  Thumbnails = props => {\r\n    let result = []\r\n    props.sources.forEach((source, i) => {\r\n      result.push(\r\n        <Col key={i}>\r\n          <Button variant='light' onClick={() => this.onThumbnailClick(i)}>\r\n            <img alt='' style={{ height: '20px' }} src={source} />\r\n          </Button>\r\n        </Col>\r\n      )\r\n    })\r\n    return result\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Row>\r\n          <img\r\n            className='itemDetailsImage'\r\n            alt=''\r\n            src={this.props.imagesSources[this.state.activeImageNum]}\r\n          />\r\n        </Row>\r\n        <Row className='pt-4 align-items-center'>\r\n          <this.Thumbnails sources={this.props.imagesSources} />\r\n        </Row>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nImages.propTypes = {\r\n  imagesSources: PropTypes.arrayOf(PropTypes.string)\r\n}\r\n\r\nexport default Images\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Item } from '../../../data/DataGenerator'\r\nimport { Container, Row } from 'react-bootstrap'\r\n\r\nclass ReviewsList extends Component {\r\n  render() {\r\n    const itemWithUpdatedReviews = this.props.initialItems.find(\r\n      i => i.id === this.props.item.id\r\n    )\r\n    let reviews = []\r\n    itemWithUpdatedReviews.reviews.forEach((review, i) => {\r\n      reviews.push(\r\n        <div key={i}>\r\n          <Container className='pt-3'>\r\n            <Row>\r\n              {review.name} -{' '}\r\n              {review.date.toLocaleString('pl-PL', {\r\n                day: 'numeric',\r\n                month: 'numeric',\r\n                year: 'numeric'\r\n              })}\r\n            </Row>\r\n            <Row>{review.text}</Row>\r\n          </Container>\r\n        </div>\r\n      )\r\n    })\r\n    return reviews\r\n  }\r\n}\r\n\r\nReviewsList.propTypes = {\r\n  item: PropTypes.instanceOf(Item),\r\n  initialItems: PropTypes.arrayOf(PropTypes.instanceOf(Item))\r\n}\r\n\r\nexport default ReviewsList\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Col, Button, Form } from 'react-bootstrap'\r\n\r\nclass ReviewsForm extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      formData: {\r\n        name: '',\r\n        review: ''\r\n      },\r\n      formValidation: {\r\n        name: false,\r\n        review: false\r\n      },\r\n      isFormValid: false,\r\n      isFieldValidated: false\r\n    }\r\n  }\r\n\r\n  handleAddReviewClick = () => {\r\n    this.props.onAddReview(this.state.formData.name, this.state.formData.review)\r\n    this.resetFormState()\r\n  }\r\n\r\n  handleFormInputChange = e => {\r\n    const targetName = e.target.name\r\n    const targetValue = e.target.value\r\n    const isFieldValid = e.target.checkValidity() === true\r\n    let formValidation = { ...this.state.formValidation }\r\n    formValidation[targetName] = isFieldValid\r\n\r\n    this.setState(() => ({\r\n      formData: {\r\n        ...this.state.formData,\r\n        [targetName]: targetValue\r\n      },\r\n      formValidation,\r\n      isFormValid: Object.values(formValidation).every(v => v === true),\r\n      isFieldValidated: true\r\n    }))\r\n  }\r\n\r\n  resetFormState() {\r\n    this.setState(() => ({\r\n      formData: {\r\n        name: '',\r\n        review: ''\r\n      },\r\n      formValidation: {\r\n        name: false,\r\n        review: false\r\n      },\r\n      isFormValid: false,\r\n      isFieldValidated: false\r\n    }))\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Col sm={6} className='pt-4 pl-0'>\r\n          <h4>Add your review</h4>\r\n          <Form className='pt-3' validated={this.state.isFieldValidated}>\r\n            <Form.Group>\r\n              <Form.Control\r\n                name='name'\r\n                value={this.state.formData.name}\r\n                type='text'\r\n                placeholder='Your name'\r\n                required\r\n                minLength='5'\r\n                onChange={this.handleFormInputChange}\r\n              />\r\n              <Form.Control.Feedback type='invalid'>\r\n                This field is required. Min. characters is 5.\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Control\r\n                name='review'\r\n                value={this.state.formData.review}\r\n                as='textarea'\r\n                placeholder='Your review'\r\n                rows='3'\r\n                minLength='10'\r\n                maxLength='250'\r\n                required\r\n                onChange={this.handleFormInputChange}\r\n              />\r\n              <Form.Control.Feedback type='invalid'>\r\n                This field is required. Min. characters: 10, max. 250.\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Button\r\n                disabled={!this.state.isFormValid}\r\n                onClick={this.handleAddReviewClick}\r\n              >\r\n                Submit\r\n              </Button>\r\n            </Form.Group>\r\n          </Form>\r\n        </Col>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nReviewsForm.propTypes = {\r\n  onAddReview: PropTypes.func\r\n}\r\n\r\nexport default ReviewsForm\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Item } from '../../data/DataGenerator'\r\nimport { Container, Row, Col, Button } from 'react-bootstrap'\r\nimport { Review } from '../../data/DataGenerator'\r\nimport Images from './Images'\r\nimport ReviewsList from './Reviews/ReviewsList'\r\nimport DataUtils from '../../data/DataUtils'\r\nimport ReviewsForm from './Reviews/ReviewsForm'\r\n\r\nclass ItemDetailsContainer extends Component {\r\n  handleAddToCart = () => {\r\n    this.props.onAddToCartClick(this.props.routeParamId)\r\n  }\r\n\r\n  handleAddReview = (name, review) => {\r\n    this.props.onAddReview(\r\n      new Review(name, new Date(), review),\r\n      this.props.routeParamId\r\n    )\r\n  }\r\n\r\n  ItemNotExists = () => (\r\n    <div className='text-center'>\r\n      <div className='pb-2'>\r\n        <h1>Error</h1>\r\n        <h3>Item with given id '{this.props.routeParamId}' does not exists.</h3>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n  Container = props => {\r\n    return (\r\n      <Container>\r\n        <Row>\r\n          <Col className='pb-3' sm={6}>\r\n            <Images imagesSources={props.item.imagesSources} />\r\n          </Col>\r\n          <Col sm={6}>\r\n            <Container>\r\n              <Row>\r\n                <h3>{props.item.name}</h3>\r\n              </Row>\r\n              <Row>\r\n                <p>Id: {props.item.id}</p>\r\n              </Row>\r\n              <Row className='text-justify'>\r\n                <p>{props.item.descriptionLong}</p>\r\n              </Row>\r\n              <Row>\r\n                <Col className='align-self-center pl-0'>\r\n                  <span className='float-left'>\r\n                    On stock: {props.item.quantityOnStock}\r\n                  </span>\r\n                </Col>\r\n                <Col className='pr-0'>\r\n                  <Button\r\n                    className='float-right'\r\n                    disabled={props.item.quantityOnStock === 0}\r\n                    onClick={this.handleAddToCart}\r\n                  >\r\n                    Add &nbsp; <i className='fas fa-cart-arrow-down' />\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            </Container>\r\n          </Col>\r\n        </Row>\r\n        <Row className='pt-3'>\r\n          <Container className='pl-15'>\r\n            <h4>Reviews</h4>\r\n            <ReviewsList item={props.item} initialItems={props.initialItems} />\r\n            <ReviewsForm onAddReview={this.handleAddReview} />\r\n          </Container>\r\n        </Row>\r\n      </Container>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    const idFromUrl = this.props.routeParamId\r\n    const initialItems = this.props.initialItems\r\n    return (\r\n      <div>\r\n        {DataUtils.getItemById(initialItems, idFromUrl) ? (\r\n          <this.Container\r\n            item={DataUtils.getItemById(initialItems, idFromUrl)}\r\n            initialItems={initialItems}\r\n          />\r\n        ) : (\r\n          <this.ItemNotExists />\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nItemDetailsContainer.propTypes = {\r\n  initialItems: PropTypes.arrayOf(PropTypes.instanceOf(Item)),\r\n  routeParamId: PropTypes.string,\r\n  onAddReview: PropTypes.func,\r\n  onAddToCartClick: PropTypes.func\r\n}\r\n\r\nexport default ItemDetailsContainer\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Row, Col, Button, Badge, Container, Form } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass MenuContainer extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      searchValue: ''\r\n    }\r\n  }\r\n\r\n  handleSearchChange = event => {\r\n    const searchValue = event.target.value\r\n    this.setState(() => ({\r\n      searchValue\r\n    }))\r\n    if (searchValue === '') {\r\n      this.props.onResetReceivedandFilteredData()\r\n    } else {\r\n      this.props.onSearchChange(searchValue)\r\n      event.persist()\r\n      event.preventDefault()\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const publicURL = process.env.PUBLIC_URL\r\n    return (\r\n      <Container className='menu'>\r\n        <Row>\r\n          <Col xs={3} sm={4}>\r\n            <Link to={publicURL}>\r\n              <Button\r\n                className='float-right'\r\n                variant='primary'\r\n                onClick={() => this.props.onResetReceivedandFilteredData()}\r\n              >\r\n                <i className='fas fa-home' />\r\n              </Button>\r\n            </Link>\r\n          </Col>\r\n          <Col className='text-center' xs={6} sm={4}>\r\n            <Link to={publicURL + '/search'}>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Search'\r\n                value={this.props.searchValue}\r\n                onChange={this.handleSearchChange}\r\n              />\r\n            </Link>\r\n          </Col>\r\n          <Col xs={3} sm={4}>\r\n            <Link to={publicURL + '/cart/info'}>\r\n              <Button\r\n                variant='primary float-left'\r\n                onClick={() => this.props.onResetReceivedandFilteredData()}\r\n              >\r\n                <i className='fas fa-shopping-cart' />\r\n                \"&nbsp;\r\n                <Badge variant='primary'>{this.props.cartItemsLength}</Badge>\r\n              </Button>\r\n            </Link>\r\n          </Col>\r\n        </Row>\r\n        <hr />\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nMenuContainer.propTypes = {\r\n  searchValue: PropTypes.string,\r\n  onSearchChange: PropTypes.func,\r\n  cartItemsLength: PropTypes.number,\r\n  onResetReceivedandFilteredData: PropTypes.func\r\n}\r\n\r\nexport default MenuContainer\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\nimport { CartItem, Item } from '../../data/DataGenerator'\r\nimport { Container, Row, Col, Button } from 'react-bootstrap'\r\n\r\nclass Info extends Component {\r\n  handleDecreaseQuantity = cartItem => {\r\n    this.handleQuantity(cartItem, 1, -1)\r\n  }\r\n\r\n  handleIncreaseQuantity = cartItem => {\r\n    this.handleQuantity(cartItem, -1, 1)\r\n  }\r\n\r\n  handleQuantity = (\r\n    cartItem,\r\n    initialItemQuantyToAdd,\r\n    cartItemQuantityToAdd\r\n  ) => {\r\n    this.props.onChangeItemQuantity(\r\n      cartItem,\r\n      initialItemQuantyToAdd,\r\n      cartItemQuantityToAdd\r\n    )\r\n  }\r\n\r\n  handleRemoveFromCart = cartItem => {\r\n    this.props.onRemoveCartItem(cartItem)\r\n  }\r\n\r\n  InfoView = () => {\r\n    const initialItems = this.props.initialItems\r\n    const cartItems = this.props.cartItems\r\n    let cartItemsComponents = []\r\n\r\n    cartItems.forEach((cartItem, i) => {\r\n      const cartItemQuantityIsZero = cartItem.quantity === 0\r\n      const item = initialItems.find(item => item.id === cartItem.itemId)\r\n      cartItemsComponents.push(\r\n        <Container key={i}>\r\n          <Row className='text-center'>\r\n            <Col xs={6} sm={2} className='pb-4 pb-sm-0'>\r\n              <Link\r\n                to={process.env.PUBLIC_URL + '/item-details/item-id-' + item.id}\r\n              >\r\n                <img\r\n                  className='cartItemImage'\r\n                  alt=''\r\n                  src={item.imagesSources[0]}\r\n                />\r\n              </Link>\r\n            </Col>\r\n            <Col xs={6} sm={3} className='pb-4 pb-sm-0 align-self-center'>\r\n              <Link\r\n                to={process.env.PUBLIC_URL + '/item-details/item-id-' + item.id}\r\n              >\r\n                {item.name}\r\n              </Link>\r\n            </Col>\r\n            <Col xs={12} sm={2} className='pb-4 pb-sm-0 align-self-center'>\r\n              <Row>\r\n                <Col xs={4} sm={4}>\r\n                  <Button\r\n                    className='float-left'\r\n                    disabled={cartItemQuantityIsZero}\r\n                    onClick={() => this.handleDecreaseQuantity(cartItem)}\r\n                  >\r\n                    <i className='fas fa-minus' />\r\n                  </Button>\r\n                </Col>\r\n                <Col xs={4} sm={4} className='align-self-center'>\r\n                  {cartItem.quantity}\r\n                </Col>\r\n                <Col xs={4} sm={4}>\r\n                  <Button\r\n                    className='float-none float-sm-right'\r\n                    onClick={() => this.handleIncreaseQuantity(cartItem)}\r\n                  >\r\n                    <i className='fas fa-plus' />\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n            <Col xs={12} sm={2} className='pb-4 pb-sm-0 align-self-center'>\r\n              {cartItem.price} EUR/unit\r\n            </Col>\r\n            <Col xs={12} sm={2} className='pb-4 pb-sm-0 align-self-center'>\r\n              Total: {cartItem.totalPrice} EUR\r\n            </Col>\r\n            <Col xs={12} sm={1} className='align-self-center'>\r\n              <Button onClick={() => this.handleRemoveFromCart(cartItem)}>\r\n                <i className='fas fa-trash-alt' />\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n          <hr />\r\n        </Container>\r\n      )\r\n    })\r\n\r\n    const sumIsZero = this.props.cartItemsSum === 0\r\n    return (\r\n      <Container>\r\n        <Row>{cartItemsComponents}</Row>\r\n        <Row className='pt-2'>\r\n          <Container>\r\n            <Row>\r\n              <Col>\r\n                <h4 className='float-right'>{this.props.cartItemsSum} EUR</h4>\r\n              </Col>\r\n            </Row>\r\n            <Row className='pt-1'>\r\n              <Col>\r\n                <Link to={`checkout`}>\r\n                  <Button className='float-right' disabled={sumIsZero}>\r\n                    Checkout\r\n                  </Button>\r\n                </Link>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </Row>\r\n      </Container>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    const cartIsEmpty = this.props.cartItems.length === 0\r\n    return (\r\n      <Container>\r\n        {cartIsEmpty ? (\r\n          <div className='text-center'>\r\n            <h2>Cart is empty. Pick something.</h2>\r\n          </div>\r\n        ) : (\r\n          <this.InfoView />\r\n        )}\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nInfo.propTypes = {\r\n  cartItems: PropTypes.arrayOf(PropTypes.instanceOf(CartItem)),\r\n  cartItemsSum: PropTypes.number,\r\n  initialItems: PropTypes.arrayOf(PropTypes.instanceOf(Item)),\r\n  routeUrl: PropTypes.string,\r\n  onChangeItemQuantity: PropTypes.func,\r\n  onRemoveCartItem: PropTypes.func\r\n}\r\n\r\nexport default Info\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Form } from 'react-bootstrap'\r\n\r\nclass TextFormGroup extends Component {\r\n  handleChange = event => {\r\n    this.props.onChange(event)\r\n    event.persist()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Form.Group>\r\n        <Form.Label>{this.props.label}</Form.Label>\r\n        <Form.Control\r\n          name={this.props.name}\r\n          type={this.props.type}\r\n          defaultValue={this.props.defaultValue}\r\n          placeholder={this.props.placeholder}\r\n          required={true}\r\n          onChange={this.handleChange}\r\n          pattern={this.props.pattern}\r\n        />\r\n        <Form.Control.Feedback type='invalid'>\r\n          {this.props.feedback}\r\n        </Form.Control.Feedback>\r\n      </Form.Group>\r\n    )\r\n  }\r\n}\r\n\r\nTextFormGroup.propTypes = {\r\n  label: PropTypes.string,\r\n  name: PropTypes.string,\r\n  type: PropTypes.string,\r\n  defaultValue: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  feedback: PropTypes.string,\r\n  pattern: PropTypes.string,\r\n  onChange: PropTypes.func\r\n}\r\n\r\nexport default TextFormGroup\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Form } from 'react-bootstrap'\r\nimport TextFormGroup from './TextFormGroup'\r\n\r\nclass PaymentFormGroup extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      showTotalPrice: false,\r\n      showCreditCardExtraFields:\r\n        this.props.checkoutData.paymentMethod.value === 'Credit Card'\r\n    }\r\n  }\r\n\r\n  handleChange = event => {\r\n    this.props.onChange(event)\r\n  }\r\n\r\n  handlePaymentMethodChange = event => {\r\n    const showCreditCardExtraFields = event.target.value === 'Credit Card'\r\n    this.setState(() => ({\r\n      showCreditCardExtraFields\r\n    }))\r\n    this.props.onPaymenthMethodChange(event)\r\n  }\r\n\r\n  PaymentMethods = () => {\r\n    let options = []\r\n    this.props.paymentMethods.forEach((paymentMethod, i) => {\r\n      options.push(\r\n        <option key={i + 1} value={paymentMethod}>\r\n          {paymentMethod}\r\n        </option>\r\n      )\r\n    })\r\n    return options\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Form.Group>\r\n          <Form.Label>Payment method</Form.Label>\r\n          <Form.Control\r\n            as='select'\r\n            defaultValue={this.props.selectedOption}\r\n            onChange={this.handlePaymentMethodChange}\r\n          >\r\n            <this.PaymentMethods />\r\n          </Form.Control>\r\n        </Form.Group>\r\n        {this.state.showCreditCardExtraFields && (\r\n          <TextFormGroup\r\n            label={'Credit card number'}\r\n            name={'creditCardNumber'}\r\n            type={'text'}\r\n            defaultValue={this.props.checkoutData.creditCardNumber}\r\n            placeholder={'Ex. 5500000000000004'}\r\n            feedback={'Invalid format. Ex. 5500000000000004'}\r\n            pattern={this.props.creditCardNumRegex}\r\n            onChange={this.handleChange}\r\n          />\r\n        )}\r\n        {this.state.showCreditCardExtraFields && (\r\n          <TextFormGroup\r\n            label={'Credit card expiration date'}\r\n            name={'creditCardExpirationDate'}\r\n            type={'text'}\r\n            defaultValue={this.props.checkoutData.creditCardExpirationDate}\r\n            placeholder={'Ex. 02/19'}\r\n            feedback={'Invalid format. Ex. 02/19'}\r\n            pattern={this.props.creditCardExpDateRegex}\r\n            onChange={this.handleChange}\r\n          />\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nPaymentFormGroup.propTypes = {\r\n  checkoutData: PropTypes.shape({\r\n    name: PropTypes.string,\r\n    email: PropTypes.string,\r\n    address: PropTypes.string,\r\n    paymentMethod: PropTypes.shape({\r\n      value: PropTypes.string,\r\n      selected: PropTypes.string\r\n    }),\r\n    creditCardNumber: PropTypes.string,\r\n    creditCardExpirationDate: PropTypes.string,\r\n    deliveryOption: PropTypes.shape({\r\n      value: PropTypes.shape({\r\n        name: PropTypes.string,\r\n        price: PropTypes.number\r\n      }),\r\n      selected: PropTypes.string\r\n    })\r\n  }),\r\n  paymentMethods: PropTypes.arrayOf(PropTypes.string),\r\n  creditCardNumRegex: PropTypes.string,\r\n  creditCardExpDateRegex: PropTypes.string,\r\n  selectedOption: PropTypes.string,\r\n  onPaymenthMethodChange: PropTypes.func,\r\n  onChange: PropTypes.func\r\n}\r\n\r\nexport default PaymentFormGroup\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Form } from 'react-bootstrap'\r\n\r\nclass DeliveryFormGroup extends Component {\r\n  handleChange = event => {\r\n    this.props.onChange(event)\r\n  }\r\n\r\n  DeliveryOptions = () => {\r\n    let options = []\r\n    this.props.deliveryOptions.forEach((deliveryOption, i) => {\r\n      options.push(\r\n        <option key={i + 1} value={deliveryOption.name}>\r\n          {deliveryOption.name + ' - ' + deliveryOption.price + ' EUR'}\r\n        </option>\r\n      )\r\n    })\r\n    return options\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Form.Group>\r\n        <Form.Label>Delivery option</Form.Label>\r\n        <Form.Control\r\n          as='select'\r\n          defaultValue={this.props.selectedOption}\r\n          onChange={this.handleChange}\r\n        >\r\n          <this.DeliveryOptions />\r\n        </Form.Control>\r\n      </Form.Group>\r\n    )\r\n  }\r\n}\r\n\r\nDeliveryFormGroup.propTypes = {\r\n  deliveryOptions: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string,\r\n      price: PropTypes.num\r\n    })\r\n  ),\r\n  selectedOption: PropTypes.string,\r\n  onDeliveryOptionChange: PropTypes.func\r\n}\r\n\r\nexport default DeliveryFormGroup\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport TextFormGroup from './TextFormGroup'\r\n\r\nclass PersonalDataFormGroup extends Component {\r\n  handleChange = event => {\r\n    this.props.onChange(event)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <TextFormGroup\r\n          label={'Full name'}\r\n          name={'name'}\r\n          type={'text'}\r\n          defaultValue={this.props.checkoutData.name}\r\n          placeholder={'Ex. John Smith'}\r\n          feedback={'This field is required.'}\r\n          pattern={null}\r\n          onChange={this.handleChange}\r\n        />\r\n        <TextFormGroup\r\n          label={'Email'}\r\n          name={'email'}\r\n          type={'email'}\r\n          defaultValue={this.props.checkoutData.email}\r\n          placeholder={'example@gmail.com'}\r\n          feedback={'Incorrect email format.'}\r\n          pattern={null}\r\n          onChange={this.handleChange}\r\n        />\r\n        <TextFormGroup\r\n          label={'Address'}\r\n          name={'address'}\r\n          type={'text'}\r\n          defaultValue={this.props.checkoutData.address}\r\n          placeholder={'Street, city, postalcode'}\r\n          feedback={'This field is required.'}\r\n          pattern={null}\r\n          onChange={this.handleChange}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nPersonalDataFormGroup.propTypes = {\r\n  checkoutData: PropTypes.shape({\r\n    name: PropTypes.string,\r\n    email: PropTypes.string,\r\n    address: PropTypes.string,\r\n    paymentMethod: PropTypes.shape({\r\n      value: PropTypes.string,\r\n      selected: PropTypes.string\r\n    }),\r\n    creditCardNumber: PropTypes.string,\r\n    creditCardExpirationDate: PropTypes.string,\r\n    deliveryOption: PropTypes.shape({\r\n      value: PropTypes.shape({\r\n        name: PropTypes.string,\r\n        price: PropTypes.number\r\n      }),\r\n      selected: PropTypes.string\r\n    })\r\n  }),\r\n  onChange: PropTypes.func\r\n}\r\n\r\nexport default PersonalDataFormGroup\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\nimport { Container, Col, Row, Button, Form } from 'react-bootstrap'\r\nimport DataUtils from '../../../data/DataUtils'\r\nimport PaymentFormGroup from './PaymentFormGroup'\r\nimport DeliveryFormGroup from './DeliveryFormGroup'\r\nimport PersonalDataFormGroup from './PersonalDataFormGroup'\r\n\r\nclass CheckoutContainer extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      checkoutData: props.checkoutData,\r\n      deliveryPrice: props.checkoutData.deliveryOption.value.price,\r\n      showTotalPrice: false,\r\n      shouldCheckFieldValidity: false,\r\n      isFormValid: false,\r\n      regex: {\r\n        creditCardNumber:\r\n          '^(?:4[0-9]{12}(?:[0-9]{3})?|[25][1-7][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35d{3})d{11})$',\r\n        creditCardExpirationDate: '^(0[1-9]|1[0-2])/?([0-9]{4}|[0-9]{2})$'\r\n      }\r\n    }\r\n  }\r\n\r\n  handleTextFormGroupDataChange = event => {\r\n    this.setState(() => ({\r\n      checkoutData: {\r\n        ...this.state.checkoutData,\r\n        [event.target.name]: event.target.value\r\n      },\r\n      shouldCheckFieldValidity: true,\r\n      isFormValid: this.isFormValid()\r\n    }))\r\n  }\r\n\r\n  handleDeliveryOptionChange = event => {\r\n    const targetValue = event.target.value\r\n    const option = this.findDeliveryOptionByName(targetValue)\r\n    let checkoutData = { ...this.state.checkoutData }\r\n    checkoutData.deliveryOption.value = option\r\n    checkoutData.deliveryOption.selected = targetValue\r\n\r\n    this.setState(() => ({\r\n      checkoutData,\r\n      deliveryPrice: option.price,\r\n      shouldCheckFieldValidity: true\r\n    }))\r\n    this.recalculateTotalPriceWithDeliveryOption(option)\r\n  }\r\n\r\n  handlePaymentMethodChange = event => {\r\n    const option = event.target.value\r\n    let checkoutData = { ...this.state.checkoutData }\r\n    checkoutData.paymentMethod.value = option\r\n    checkoutData.paymentMethod.selected = option\r\n\r\n    this.setState(() => ({\r\n      checkoutData,\r\n      shouldCheckFieldValidity: true,\r\n      isFormValid: option !== 'Credit Card'\r\n    }))\r\n  }\r\n\r\n  handleButton = () => {\r\n    this.props.onCheckoutDataChange(this.state.checkoutData, this.isFormValid())\r\n  }\r\n\r\n  recalculateTotalPriceWithDeliveryOption = option => {\r\n    let newTotalPrice = this.props.cartItemsSum\r\n    newTotalPrice += option.price\r\n    newTotalPrice = DataUtils.roundToTwoDecimalPlaces(newTotalPrice)\r\n\r\n    this.setState(() => ({\r\n      totalPrice: newTotalPrice\r\n    }))\r\n  }\r\n\r\n  findDeliveryOptionByName = name =>\r\n    this.props.deliveryOptions.find(\r\n      o => o.name.substring(0, 2) === name.substring(0, 2)\r\n    )\r\n\r\n  isFormValid = () => {\r\n    const form = document.getElementById('checkoutForm')\r\n    let result = false\r\n    if (form !== 'undefinded' && form !== null) {\r\n      result = form.checkValidity()\r\n    }\r\n    return result\r\n  }\r\n\r\n  CheckoutView = () => {\r\n    return (\r\n      <Container>\r\n        <Col sm={5} className='col-centered'>\r\n          <Form\r\n            id='checkoutForm'\r\n            validated={this.state.shouldCheckFieldValidity}\r\n          >\r\n            <PersonalDataFormGroup\r\n              checkoutData={this.props.checkoutData}\r\n              onChange={this.handleTextFormGroupDataChange}\r\n            />\r\n            <PaymentFormGroup\r\n              checkoutData={this.props.checkoutData}\r\n              paymentMethods={this.props.paymentMethods}\r\n              creditCardNumRegex={this.state.regex.creditCardNumber}\r\n              creditCardExpDateRegex={this.state.regex.creditCardExpirationDate}\r\n              selectedOption={this.props.checkoutData.paymentMethod.value}\r\n              onPaymenthMethodChange={this.handlePaymentMethodChange}\r\n              onChange={this.handleTextFormGroupDataChange}\r\n            />\r\n            <DeliveryFormGroup\r\n              deliveryOptions={this.props.deliveryOptions}\r\n              selectedOption={this.props.checkoutData.deliveryOption.selected}\r\n              onChange={this.handleDeliveryOptionChange}\r\n            />\r\n\r\n            <h5 className='text-center'>\r\n              {DataUtils.roundToTwoDecimalPlaces(\r\n                this.props.cartItemsSum + this.state.deliveryPrice\r\n              )}{' '}\r\n              EUR\r\n            </h5>\r\n            <Row className='text-center pt-2'>\r\n              <Col>\r\n                <Link to={`info`}>\r\n                  <Button onClick={this.handleButton}>Back</Button>\r\n                </Link>\r\n              </Col>\r\n              <Col>\r\n                <Link to={`summary`}>\r\n                  <Button\r\n                    disabled={!this.state.isFormValid}\r\n                    onClick={this.handleButton}\r\n                  >\r\n                    Confirm\r\n                  </Button>\r\n                </Link>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </Col>\r\n      </Container>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return <this.CheckoutView />\r\n  }\r\n}\r\n\r\nCheckoutContainer.propTypes = {\r\n  cartItemsSum: PropTypes.number,\r\n  checkoutData: PropTypes.shape({\r\n    name: PropTypes.string,\r\n    email: PropTypes.string,\r\n    address: PropTypes.string,\r\n    paymentMethod: PropTypes.shape({\r\n      value: PropTypes.string,\r\n      selected: PropTypes.string\r\n    }),\r\n    creditCardNumber: PropTypes.string,\r\n    creditCardExpirationDate: PropTypes.string,\r\n    deliveryOption: PropTypes.shape({\r\n      value: PropTypes.shape({\r\n        name: PropTypes.string,\r\n        price: PropTypes.number\r\n      }),\r\n      selected: PropTypes.string\r\n    })\r\n  }),\r\n  paymentMethods: PropTypes.arrayOf(PropTypes.string),\r\n  deliveryOptions: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string,\r\n      price: PropTypes.num\r\n    })\r\n  ),\r\n  routeUrl: PropTypes.string,\r\n  onConfirmCheckoutData: PropTypes.func\r\n}\r\n\r\nexport default CheckoutContainer\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\nimport { Container, Col, Row, Button, Modal } from 'react-bootstrap'\r\nimport DataUtils from '../../data/DataUtils'\r\n\r\nclass Summary extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      showModal: false\r\n    }\r\n  }\r\n\r\n  handleCloseModal = () => {\r\n    this.props.onPurchaseComplete()\r\n    this.setState({ showModal: false })\r\n  }\r\n\r\n  handleShowModal = () => {\r\n    this.setState({ showModal: true })\r\n  }\r\n\r\n  EndOfDemoModal = () => {\r\n    return (\r\n      <Modal show={this.state.showModal} onHide={this.handleCloseModal}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Online shop</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <p>\r\n            Your purchases are completed. This is the end of demo version. You\r\n            will be redirected to main page.\r\n          </p>\r\n          <p>PS. Check available quantity of items which you just bought.</p>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Link to={process.env.PUBLIC_URL}>\r\n            <Button variant='primary' onClick={this.handleCloseModal}>\r\n              Ok\r\n            </Button>\r\n          </Link>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    )\r\n  }\r\n\r\n  SummaryRow = props => {\r\n    return (\r\n      <Row>\r\n        <Col className='text-right'>\r\n          <h6>{props.name}</h6>\r\n        </Col>\r\n        <Col className='text-left'>\r\n          <h6>{props.value}</h6>\r\n        </Col>\r\n      </Row>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    const checkoutData = this.props.checkoutData\r\n    const showCreditCardExtraFields =\r\n      checkoutData.paymentMethod.value === 'Credit Card'\r\n    return (\r\n      <Container>\r\n        <Col xs={12} sm={5} className='col-centered text-center'>\r\n          <this.SummaryRow name={'Name:'} value={checkoutData.name} />\r\n          <this.SummaryRow name={'Email:'} value={checkoutData.email} />\r\n          <this.SummaryRow name={'Address:'} value={checkoutData.address} />\r\n          <this.SummaryRow\r\n            name={'Payment method:'}\r\n            value={checkoutData.paymentMethod.value}\r\n          />\r\n          {showCreditCardExtraFields ? (\r\n            <div>\r\n              <this.SummaryRow\r\n                name={'Credit card number:'}\r\n                value={checkoutData.creditCardNumber}\r\n              />\r\n              <this.SummaryRow\r\n                name={'Credit card expiration date:'}\r\n                value={checkoutData.creditCardExpirationDate}\r\n              />\r\n            </div>\r\n          ) : (\r\n            ''\r\n          )}\r\n          <this.SummaryRow\r\n            name={'Delivery option:'}\r\n            value={\r\n              checkoutData.deliveryOption.value.name +\r\n              ' - ' +\r\n              checkoutData.deliveryOption.value.price\r\n            }\r\n          />\r\n          <this.SummaryRow\r\n            name={'Price to pay:'}\r\n            value={\r\n              DataUtils.roundToTwoDecimalPlaces(\r\n                this.props.cartItemsSum +\r\n                  checkoutData.deliveryOption.value.price\r\n              ) + ' EUR'\r\n            }\r\n          />\r\n          <Row className='text-center pt-2'>\r\n            <Col>\r\n              <Link to={`checkout`}>\r\n                <Button>Back</Button>\r\n              </Link>\r\n            </Col>\r\n            <Col>\r\n              <Button onClick={this.handleShowModal}>Buy</Button>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n        <this.EndOfDemoModal />\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nSummary.propTypes = {\r\n  cartItemsSum: PropTypes.number,\r\n  checkoutData: PropTypes.shape({\r\n    name: PropTypes.string,\r\n    email: PropTypes.string,\r\n    address: PropTypes.string,\r\n    paymentMethod: PropTypes.shape({\r\n      value: PropTypes.string,\r\n      selected: PropTypes.string\r\n    }),\r\n    creditCardNumber: PropTypes.string,\r\n    creditCardExpirationDate: PropTypes.string,\r\n    deliveryOption: PropTypes.shape({\r\n      value: PropTypes.shape({\r\n        name: PropTypes.string,\r\n        price: PropTypes.number\r\n      }),\r\n      selected: PropTypes.string\r\n    })\r\n  }),\r\n  routeUrl: PropTypes.string,\r\n  onPurchaseComplete: PropTypes.func\r\n}\r\n\r\nexport default Summary\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Route } from 'react-router-dom'\r\nimport { CartItem, Item, Category } from '../../data/DataGenerator'\r\nimport Info from './Info'\r\nimport CheckoutContainer from './Checkout/CheckoutContainer'\r\nimport Summary from './Summary'\r\nimport { Container } from 'react-bootstrap'\r\n\r\nclass CartContainer extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      checkoutData: {\r\n        name: '',\r\n        email: '',\r\n        address: '',\r\n        paymentMethod: {\r\n          value: this.props.initialData.paymentMethods[0],\r\n          selected: this.props.initialData.paymentMethods[0]\r\n        },\r\n        creditCardNumber: '',\r\n        creditCardExpirationDate: '',\r\n        deliveryOption: {\r\n          value: this.props.initialData.deliveryOptions[0],\r\n          selected: this.props.initialData.deliveryOptions[0].name\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  handleQuantityChange = (\r\n    cartItem,\r\n    initialItemQuantyToAdd,\r\n    cartItemQuantityToAdd\r\n  ) => {\r\n    this.props.onChangeItemQuantity(\r\n      cartItem,\r\n      initialItemQuantyToAdd,\r\n      cartItemQuantityToAdd\r\n    )\r\n  }\r\n\r\n  handleRemove = cartItem => {\r\n    this.props.onRemoveCartItem(cartItem)\r\n  }\r\n\r\n  handleCheckoutDataChange = checkoutData => {\r\n    this.setState(() => ({ checkoutData }))\r\n  }\r\n\r\n  handlePurchaseComplete = () => {\r\n    this.props.onPurchaseComplete()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Route\r\n          exact\r\n          path={`${this.props.routeUrl}/info`}\r\n          component={route => (\r\n            <Info\r\n              cartItems={this.props.cartItems}\r\n              cartItemsSum={this.props.cartItemsSum}\r\n              initialItems={this.props.initialData.items}\r\n              routeUrl={route.match.url}\r\n              onChangeItemQuantity={this.handleQuantityChange}\r\n              onRemoveCartItem={this.handleRemove}\r\n            />\r\n          )}\r\n        />\r\n        <Route\r\n          eaxct\r\n          path={`${this.props.routeUrl}/checkout`}\r\n          component={route => (\r\n            <CheckoutContainer\r\n              cartItemsSum={this.props.cartItemsSum}\r\n              checkoutData={this.state.checkoutData}\r\n              paymentMethods={this.props.initialData.paymentMethods}\r\n              deliveryOptions={this.props.initialData.deliveryOptions}\r\n              routeUrl={route.match.url}\r\n              onCheckoutDataChange={this.handleCheckoutDataChange}\r\n            />\r\n          )}\r\n        />\r\n        <Route\r\n          eaxct\r\n          path={`${this.props.routeUrl}/summary`}\r\n          component={route => (\r\n            <Summary\r\n              cartItemsSum={this.props.cartItemsSum}\r\n              checkoutData={this.state.checkoutData}\r\n              routeUrl={route.match.url}\r\n              onPurchaseComplete={this.handlePurchaseComplete}\r\n            />\r\n          )}\r\n        />\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nCartContainer.propTypes = {\r\n  cartItems: PropTypes.arrayOf(PropTypes.instanceOf(CartItem)),\r\n  cartItemsSum: PropTypes.number,\r\n  initialData: PropTypes.shape({\r\n    items: PropTypes.arrayOf(PropTypes.instanceOf(Item)),\r\n    categories: PropTypes.arrayOf(PropTypes.instanceOf(Category)),\r\n    paymentMethods: PropTypes.arrayOf(PropTypes.string),\r\n    deliveryOptions: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        name: PropTypes.string,\r\n        price: PropTypes.num\r\n      })\r\n    )\r\n  }),\r\n  routeUrl: PropTypes.string,\r\n  onChangeItemQuantity: PropTypes.func,\r\n  onRemoveCartItem: PropTypes.func,\r\n  onPurchaseComplete: PropTypes.func\r\n}\r\n\r\nexport default CartContainer\r\n","import DataUtils from '../../data/DataUtils'\r\nimport { CartItem } from '../../data/DataGenerator'\r\n\r\nclass CartUtils {\r\n  static recalculateTotalSum = cartItems =>\r\n    cartItems.length > 0\r\n      ? DataUtils.roundToTwoDecimalPlaces(\r\n          cartItems.map(i => i.totalPrice).reduce((a, b) => a + b)\r\n        )\r\n      : 0\r\n\r\n  /**\r\n   * Returns recalculated CartData and info about operation status\r\n   */\r\n  static recalculateOnAdd = (addedItemId, items, cartData) => {\r\n    let isOk = false\r\n    const cartItem = CartUtils.findItemInCart(cartData, addedItemId)\r\n    const item = DataUtils.getItemById(items, addedItemId)\r\n\r\n    if (item.quantityOnStock > 0) {\r\n      item.quantityOnStock -= 1\r\n      if (cartItem === undefined) {\r\n        let newCartItem = new CartItem(addedItemId, item.price)\r\n        newCartItem.setQuantity(1)\r\n        cartData.cartItems.push(newCartItem)\r\n      } else {\r\n        cartItem.setQuantity(cartItem.quantity + 1)\r\n      }\r\n      cartData.cartItemsSum = CartUtils.recalculateTotalSum(cartData.cartItems)\r\n      isOk = true\r\n    }\r\n\r\n    return {\r\n      cartData,\r\n      isOk\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns recalculated initialItems and cartData\r\n   */\r\n  static recalculateOnRemove = (cartItem, cartData, items) => {\r\n    const previousCartDataItems = cartData.cartItems\r\n    let item = DataUtils.getItemById(items, cartItem.itemId)\r\n    const cartItemIndex = cartData.cartItems\r\n      .map(i => i.itemId)\r\n      .indexOf(cartItem.itemId)\r\n    let changedCartItem = cartData.cartItems[cartItemIndex]\r\n    const quantitiesToGiveBack = changedCartItem.quantity\r\n    cartData.cartItems.splice(cartItemIndex, 1)\r\n    cartData.cartItemsSum = CartUtils.recalculateTotalSum(previousCartDataItems)\r\n    item.quantityOnStock += quantitiesToGiveBack\r\n\r\n    return {\r\n      items,\r\n      cartData\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns recalculated initialItems and cartData\r\n   */\r\n  static recalculateAllAfterItemQuantityChange = (\r\n    items,\r\n    cartData,\r\n    cartItem,\r\n    initialItemQuantyToAdd,\r\n    cartItemQuantityToAdd\r\n  ) => {\r\n    let initialItem = items.find(i => i.id === cartItem.itemId)\r\n    let changedCartItem = cartData.cartItems.find(\r\n      c => c.itemId === cartItem.itemId\r\n    )\r\n\r\n    if (\r\n      // decrease quantity\r\n      (initialItemQuantyToAdd > 0 && changedCartItem.quantity > 0) ||\r\n      // increase quantity\r\n      (initialItemQuantyToAdd < 0 && initialItem.quantityOnStock > 0)\r\n    ) {\r\n      initialItem.quantityOnStock += initialItemQuantyToAdd\r\n      let newQuantityOfChangedItem =\r\n        changedCartItem.quantity + cartItemQuantityToAdd\r\n      changedCartItem.setQuantity(newQuantityOfChangedItem)\r\n      cartData.cartItemsSum = CartUtils.recalculateTotalSum(cartData.cartItems)\r\n    }\r\n\r\n    return {\r\n      items,\r\n      cartData\r\n    }\r\n  }\r\n\r\n  static findItemInCart = (cartData, itemId) =>\r\n    cartData.cartItems.find(cartItem => cartItem.itemId === itemId)\r\n}\r\n\r\nexport default CartUtils\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\nimport DataFilter from '../data/DataFilter'\r\nimport SidebarContainer from './Sidebar/SidebarContainer'\r\nimport ViewerContainer from './Viewer/ViewerContainer'\r\nimport ItemDetailsContainer from './ItemDetails/ItemDetailsContainer'\r\nimport MenuContainer from './Menu/MenuContainer'\r\nimport CartContainer from './Cart/CartContainer'\r\nimport { Item, Category } from '../data/DataGenerator'\r\nimport CartUtils from './Cart/CartUtils'\r\nimport DataUtils from '../data/DataUtils'\r\n\r\nclass MainContainer extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      initialData: {\r\n        items: props.data.items,\r\n        categories: props.data.categories,\r\n        paymentMethods: props.data.paymentMethods,\r\n        deliveryOptions: props.data.deliveryOptions\r\n      },\r\n      receivedData: {\r\n        searchValue: '',\r\n        activeCategory: this.props.data.categories[0].name,\r\n        activeFeatures: []\r\n      },\r\n      filteredData: {\r\n        items: DataFilter.filterByCategoryAndFeature(\r\n          this.props.data.items,\r\n          this.props.data.categories[0].name,\r\n          []\r\n        )\r\n      },\r\n      cartData: {\r\n        cartItems: [],\r\n        cartItemsSum: 0\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.loadCartDataFromLocalStorage()\r\n  }\r\n\r\n  handleSidebarChange = (activeCategory, activeFeatures) => {\r\n    this.setState(() => ({\r\n      receivedData: {\r\n        ...this.state.receivedData,\r\n        activeCategory,\r\n        activeFeatures\r\n      },\r\n      filteredData: {\r\n        ...this.state.filteredData,\r\n        items: DataFilter.filterByAllOptions(\r\n          this.state.initialData.items,\r\n          this.state.receivedData.searchValue,\r\n          activeCategory,\r\n          activeFeatures\r\n        )\r\n      }\r\n    }))\r\n  }\r\n\r\n  handleSearchChange = searchValue => {\r\n    this.setState(() => ({\r\n      receivedData: {\r\n        ...this.state.receivedData,\r\n        searchValue\r\n      },\r\n      filteredData: {\r\n        ...this.state.filteredData,\r\n        items: DataFilter.filterByAllOptions(\r\n          this.state.initialData.items,\r\n          searchValue,\r\n          this.state.receivedData.activeCategory,\r\n          this.state.receivedData.activeFeatures\r\n        )\r\n      }\r\n    }))\r\n  }\r\n\r\n  handleAddReview = (review, itemId) => {\r\n    let items = [...this.state.initialData.items]\r\n    let item = items.find(item => item.id === itemId)\r\n    if (item.reviews.find(r => r.name === review.name) === undefined) {\r\n      item.reviews.push(review)\r\n      DataUtils.saveToLocalStorage('items', items)\r\n      this.setState(() => ({\r\n        initialData: {\r\n          ...this.state.initialData,\r\n          items\r\n        }\r\n      }))\r\n    }\r\n  }\r\n\r\n  handleAddToCart = itemId => {\r\n    const result = CartUtils.recalculateOnAdd(\r\n      itemId,\r\n      this.state.initialData.items,\r\n      this.state.cartData\r\n    )\r\n    if (result.isOk) {\r\n      DataUtils.saveToLocalStorage('items', this.state.initialData.items)\r\n      this.saveCartDataToLocalStorage(result.cartData)\r\n      this.setState(() => ({\r\n        cartData: result.cartData\r\n      }))\r\n    }\r\n  }\r\n\r\n  handleRemoveFromCart = cartItem => {\r\n    const result = CartUtils.recalculateOnRemove(\r\n      cartItem,\r\n      this.state.cartData,\r\n      this.state.initialData.items\r\n    )\r\n    DataUtils.saveToLocalStorage('items', this.state.initialData.items)\r\n    this.saveCartDataToLocalStorage(result.cartData)\r\n    this.setState(() => ({\r\n      initialData: {\r\n        ...this.state.initialData,\r\n        items: result.items\r\n      },\r\n      cartData: result.cartData\r\n    }))\r\n  }\r\n\r\n  handleItemQuantityChange = (\r\n    cartItem,\r\n    initialItemQuantyToAdd,\r\n    cartItemQuantityToAdd\r\n  ) => {\r\n    const result = CartUtils.recalculateAllAfterItemQuantityChange(\r\n      this.state.initialData.items,\r\n      this.state.cartData,\r\n      cartItem,\r\n      initialItemQuantyToAdd,\r\n      cartItemQuantityToAdd\r\n    )\r\n    DataUtils.saveToLocalStorage('items', result.items)\r\n    this.saveCartDataToLocalStorage(result.cartData)\r\n    this.setState(() => ({\r\n      initialData: {\r\n        ...this.state.initialData,\r\n        items: result.items\r\n      },\r\n      cartData: result.cartData\r\n    }))\r\n  }\r\n\r\n  handlePurchaseComplete = () => {\r\n    DataUtils.saveToLocalStorage('items', this.state.initialData.items)\r\n    DataUtils.saveToLocalStorage('cartItems', [])\r\n    DataUtils.saveToLocalStorage('cartItemsSum', 0)\r\n    this.setState(() => ({\r\n      cartData: {\r\n        cartItems: [],\r\n        cartItemsSum: 0\r\n      }\r\n    }))\r\n  }\r\n\r\n  loadCartDataFromLocalStorage = () => {\r\n    const cartData = {\r\n      cartItems: DataUtils.loadFromLocalStorage(\r\n        'cartItems',\r\n        DataUtils.rebuildCartItemsFromJson\r\n      ),\r\n      cartItemsSum: DataUtils.loadFromLocalStorage('cartItemsSum')\r\n    }\r\n    if (cartData.cartItems !== null && cartData.cartItemsSum !== null) {\r\n      this.setState({\r\n        cartData\r\n      })\r\n    }\r\n  }\r\n\r\n  saveCartDataToLocalStorage = cartData => {\r\n    DataUtils.saveToLocalStorage('cartItems', cartData.cartItems)\r\n    DataUtils.saveToLocalStorage('cartItemsSum', cartData.cartItemsSum)\r\n  }\r\n\r\n  handleResetReceivedandFilteredData = () => {\r\n    this.setState(() => ({\r\n      receivedData: {\r\n        searchValue: '',\r\n        activeCategory: this.props.data.categories[0].name,\r\n        activeFeatures: []\r\n      },\r\n      filteredData: {\r\n        items: DataFilter.filterByCategoryAndFeature(\r\n          this.props.data.items,\r\n          this.props.data.categories[0].name,\r\n          []\r\n        )\r\n      }\r\n    }))\r\n  }\r\n\r\n  Viewer = () => {\r\n    return (\r\n      <Row>\r\n        <Col sm={3}>\r\n          <SidebarContainer\r\n            categories={this.props.data.categories}\r\n            activeCategory={this.state.receivedData.activeCategory}\r\n            onSidebarChange={this.handleSidebarChange}\r\n          />\r\n        </Col>\r\n        <Col sm={9}>\r\n          <ViewerContainer\r\n            filteredItems={this.state.filteredData.items}\r\n            onAddToCartClick={this.handleAddToCart}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    )\r\n  }\r\n\r\n  NoMatch = ({ location }) => (\r\n    <div className='text-center'>\r\n      <div className='pb-2'>\r\n        <h1>Error 404</h1>\r\n        <h3>This page doesn't exists.</h3>\r\n      </div>\r\n      <h3>\r\n        No match for <code>{location.pathname}</code>\r\n      </h3>\r\n    </div>\r\n  )\r\n\r\n  render() {\r\n    const publicURL = process.env.PUBLIC_URL\r\n    return (\r\n      <Router>\r\n        <Container>\r\n          <Row>\r\n            <MenuContainer\r\n              searchValue={this.state.receivedData.searchValue}\r\n              onSearchChange={this.handleSearchChange}\r\n              cartItemsLength={this.state.cartData.cartItems.length}\r\n              onResetReceivedandFilteredData={\r\n                this.handleResetReceivedandFilteredData\r\n              }\r\n            />\r\n          </Row>\r\n          <Switch>\r\n            <Route\r\n              exact\r\n              path={'(' + publicURL + '|' + publicURL + '/search)'}\r\n              component={this.Viewer}\r\n            />\r\n            <Route\r\n              path={publicURL + '/cart'}\r\n              component={route => (\r\n                <CartContainer\r\n                  cartItems={this.state.cartData.cartItems}\r\n                  cartItemsSum={this.state.cartData.cartItemsSum}\r\n                  initialData={this.state.initialData}\r\n                  routeUrl={route.match.url}\r\n                  onChangeItemQuantity={this.handleItemQuantityChange}\r\n                  onRemoveCartItem={this.handleRemoveFromCart}\r\n                  onPurchaseComplete={this.handlePurchaseComplete}\r\n                />\r\n              )}\r\n            />\r\n            <Route\r\n              path={publicURL + '/item-details/item-id-:id'}\r\n              component={route => (\r\n                <ItemDetailsContainer\r\n                  initialItems={this.state.initialData.items}\r\n                  routeParamId={route.match.params.id}\r\n                  onAddReview={this.handleAddReview}\r\n                  onAddToCartClick={this.handleAddToCart}\r\n                />\r\n              )}\r\n            />\r\n            <Route component={this.NoMatch} />\r\n          </Switch>\r\n        </Container>\r\n      </Router>\r\n    )\r\n  }\r\n}\r\n\r\nMainContainer.propTypes = {\r\n  data: PropTypes.shape({\r\n    items: PropTypes.arrayOf(PropTypes.instanceOf(Item)),\r\n    categories: PropTypes.arrayOf(PropTypes.instanceOf(Category)),\r\n    paymentMethods: PropTypes.arrayOf(PropTypes.string),\r\n    deliveryOptions: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        name: PropTypes.string,\r\n        price: PropTypes.num\r\n      })\r\n    )\r\n  })\r\n}\r\n\r\nexport default MainContainer\r\n","import React, { Component } from 'react'\r\nimport { DataGenerator } from './data/DataGenerator'\r\nimport DataUtils from './data/DataUtils'\r\nimport MainContainer from './components/MainContainer'\r\nimport './App.scss'\r\n\r\nclass App extends Component {\r\n  static dataQuantity = 200\r\n\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      data: null,\r\n      error: {\r\n        occured: false,\r\n        message: ''\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.generateData()\r\n      .then(data => {\r\n        const items = DataUtils.loadFromLocalStorage(\r\n          'items',\r\n          DataUtils.rebuildItemsFromJson\r\n        )\r\n        items === null\r\n          ? DataUtils.saveToLocalStorage('items', data.items)\r\n          : (data.items = items)\r\n        this.setState({ data })\r\n      })\r\n      .catch(err => {\r\n        this.setState({\r\n          error: {\r\n            occured: true,\r\n            message: err.message\r\n          }\r\n        })\r\n      })\r\n  }\r\n\r\n  generateData = () =>\r\n    new Promise((resolve, reject) => {\r\n      const data = new DataGenerator().generate(App.dataQuantity)\r\n      if (data instanceof Error) {\r\n        reject(new Error('Generate mocks with DataGenerator failed.'))\r\n      } else {\r\n        resolve(new DataGenerator().generate(App.dataQuantity))\r\n      }\r\n    })\r\n\r\n  ErrorContainer = () => {\r\n    return (\r\n      <div className=\"text-center pt-5\">\r\n        <div className=\"pb-2\">\r\n          <h2>Error while fetching data. Please reload the page.</h2>\r\n          <h5>Error message: \"{this.state.error.message}\"</h5>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  WaitContainer = () => {\r\n    return (\r\n      <div className=\"text-center pt-5\">\r\n        <div className=\"pb-2\">\r\n          <h2>Downloading data...</h2>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    if (\r\n      this.state.data !== null &&\r\n      this.state.data !== undefined &&\r\n      !this.state.error.occured\r\n    ) {\r\n      return <MainContainer data={this.state.data} />\r\n    } else if (this.state.error.occured) {\r\n      return <this.ErrorContainer />\r\n    } else {\r\n      return <this.WaitContainer />\r\n    }\r\n  }\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config)\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          )\r\n        })\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing\r\n        if (installingWorker == null) {\r\n          return\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              )\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration)\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.')\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration)\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error)\r\n    })\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type')\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload()\r\n          })\r\n        })\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      )\r\n    })\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister()\r\n    })\r\n  }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}