{"version":3,"sources":["data/DataUtils.js","data/DataGenerator.js","data/DataFilter.js","components/Sidebar/CategoryList.js","components/Sidebar/FeatureList.js","components/Sidebar/SidebarContainer.js","components/Viewer/PaginationUtils.js","components/Viewer/Pagination.js","components/Viewer/ItemCard.js","components/Viewer/CardGroups.js","components/Viewer/ViewerContainer.js","components/ItemDetails/ItemDetailsContainer.js","components/Menu/MenuContainer.js","components/Cart/Info.js","components/Cart/Checkout.js","components/Cart/Summary.js","components/Cart/CartContainer.js","components/Cart/CartUtils.js","components/MainContainer.js","App.js","serviceWorker.js","index.js"],"names":["DataUtils","randomBetween","min","max","Math","random","roundToTwoDecimalPlaces","num","round","randomArrayItem","array","floor","length","arrayFromArrayRandomItems","Array","from","filter","randomBoolean","arrayContainsAllElementsFromAnother","array0","array1","map","a","some","b","every","e","getItemById","initialItems","itemId","find","item","id","DataGenerator","Object","classCallCheck","this","data","categories","Category","Feature","paymentMethods","deliveryOptions","name","price","quantity","chance","Chance","i","category","push","Item","uuidv1","capitalize","word","syllables","lenth","sentence","words","paragraph","features","f","generateRandomReviews","generateRandomImages","imagesNum","images","j","reviewsNum","reviews","Review","date","string","american","year","descriptionShort","descriptionLong","categoryName","featuresNames","imagesSources","quantityOnStock","state","text","CartItem","deliveryCost","totalPrice","DataFilter","activeCategory","activeFeatures","values","value","searchedValue","toLowerCase","includes","toString","CategoryList","handleClick","_this","props","onItemClick","index","_this2","categoriesNames","c","react_default","createElement","ListGroup","action","onClick","className","handleActive","key","Component","FeatureList","featureName","Form","Check","type","label","onChange","SidebarContainer","possibleConstructorReturn","getPrototypeOf","call","handleClickOnCategory","getFeaturesFromCategory","resetFeatures","setState","onSidebarChange","handleClickOnFeature","featureToSwitch","newFeatures","switchState","forEach","Container","variant","Sidebar_CategoryList","Group","Sidebar_FeatureList","PaginationUtils","cardsData","newActivePageNum","activePage","firstItemNumOnActivePage","getFirstItemNumOnActivePage","getPagesLen","itemsLength","ceil","rows","columns","itemsPerPage","Pagination","handlePage","pageChoiceOpt","isFirstPage","isLastPage","es_Pagination","First","disabled","Prev","active","Ellipsis","Next","ItemCard","handleDetailsClick","handleAddToCart","onAddToCartClick","Card","Img","src","Body","Title","Text","Row","Col","Link","to","Button","CardGroups","handleItemClick","firstItemOnActivePage","cardGroups","rowNum","itemsGroup","itemNum","items","undefined","Viewer_ItemCard","CardDeck","Viewer","handleActivepage","viewerRows","viewerColumns","Viewer_CardGroups","filteredItems","Viewer_Pagination","ItemDetailsContainer","handleThumbnailClick","imageNum","activeImageNum","handleAddReviewClick","onAddReview","formData","Date","review","resetFormState","handleFormInputChange","targetName","target","targetValue","isFieldValid","checkValidity","formValidation","objectSpread","defineProperty","isFormValid","v","isFieldValidated","Images","alt","Thumbnails","sources","result","source","style","height","Reviews","itemWithUpdatedReviews","toLocaleString","day","month","FormToAddReview","sm","validated","Control","placeholder","required","minLength","Feedback","as","maxLength","isOutOfStock","MenuContainer","handleSearchChange","event","searchValue","onResetReceivedandFilteredData","onSearchChange","persist","preventDefault","xs","Badge","cartItemsLength","Info","handleDecreaseQuantity","cartItem","handleQuantity","handleIncreaseQuantity","initialItemQuantyToAdd","cartItemQuantityToAdd","onChangeItemQuantity","handleRemoveFromCart","onRemoveCartItem","InfoView","cartItems","cartItemsComponents","cartItemQuantityIsZero","sumIsZero","cartItemsSum","cartIsEmpty","Checkout","handlePaymentMethodChange","paymentMethod","creditCardExpirationDate","creditCardNumber","showCreditCardExtraFields","allFieldsAreValid","handleDeliveryOptionChange","deliveryOption","showTotalPrice","controllers","recalculateTotalPriceWithDeliveryOption","inputTargetValue","option","o","substring","newTotalPrice","handleConfirmButton","onConfirmCheckoutData","formValidaton","FormGroup","Label","pattern","withFeedback","feedback","CheckoutView","PaymentMethods","regex","DeliveryOptions","options","email","address","Summary","handleCloseModal","onPurchaseComplete","showModal","handleShowModal","EndOfDemoModal","Modal","show","onHide","Header","closeButton","Footer","SummaryRow","checkoutData","CartContainer","handleQuantityChange","handleRemove","handleCheckoutConfirm","handlePurchaseComplete","Route","exact","path","concat","routeUrl","component","route","Cart_Info","initialData","match","url","eaxct","Cart_Checkout","Cart_Summary","CartUtils","recalculateTotalSum","reduce","recalculateOnAdd","addedItemId","cartData","isOk","itemNotExistsInCart","newCartItem","setQuantity","recalculateOnRemove","previousCartDataItems","cartItemIndex","indexOf","quantitiesToGiveBack","splice","recalculateAllAfterItemQuantityChange","initialItem","changedCartItem","newQuantityOfChangedItem","MainContainer","handleSidebarChange","receivedData","filteredData","filterByCategoryAndFeature","filterBySearchValue","shouldExpandViewer","activeItem","handleResetReceivedandFilteredData","handleAddReview","r","handleItemQuantityChange","resetCart","ViewerComponent","ViewerContainer","Sidebar_SidebarContainer","BrowserRouter","Menu_MenuContainer","Cart_CartContainer","ItemDetails_ItemDetailsContainer","App","generateData","dataGenerator","generate","dataQuantity","getItems","getCategories","getPaymentMethods","getDeliveryOptions","components_MainContainer","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.165d14ab.chunk.js","sourcesContent":["class DataUtils {\r\n  // min - inclusive, max - exclusive\r\n  static randomBetween = (min, max) => Math.random() * (max - min) + min;\r\n\r\n  static roundToTwoDecimalPlaces = num => Math.round(num * 100) / 100;\r\n\r\n  static randomArrayItem = array =>\r\n    array[Math.floor(Math.random() * array.length)];\r\n\r\n  static arrayFromArrayRandomItems = array =>\r\n    Array.from(array).filter(() => DataUtils.randomBoolean());\r\n\r\n  static randomBoolean = () => Math.random() >= 0.5;\r\n\r\n  static arrayContainsAllElementsFromAnother = (array0, array1) =>\r\n    array1\r\n      .map(a => {\r\n        return array0.some(b => {\r\n          return b === a;\r\n        });\r\n      })\r\n      .every(e => e);\r\n\r\n  static getItemById = (initialItems, itemId) =>\r\n    initialItems.find(item => item.id === itemId);\r\n}\r\n\r\nexport default DataUtils;\r\n","import DataUtils from \"./DataUtils\";\r\nimport uuidv1 from \"uuid/v1\";\r\nimport Chance from \"chance\";\r\n\r\nclass DataGenerator {\r\n  constructor() {\r\n    this.data = [];\r\n    this.categories = [\r\n      new Category(\"Category 0\", [\r\n        new Feature(\"C0 feature 0\"),\r\n        new Feature(\"C0 feature 1\"),\r\n        new Feature(\"C0 feature 2\")\r\n      ]),\r\n      new Category(\"Category 1\", [\r\n        new Feature(\"C1 feature 0\"),\r\n        new Feature(\"C1 feature 1\"),\r\n        new Feature(\"C1 feature 2\"),\r\n        new Feature(\"C1 feature 3\")\r\n      ]),\r\n      new Category(\"Category 2\", [\r\n        new Feature(\"C2 feature 0\"),\r\n        new Feature(\"C2 feature 1\"),\r\n        new Feature(\"C2 feature 2\"),\r\n        new Feature(\"C2 feature 3\"),\r\n        new Feature(\"C2 feature 4\")\r\n      ])\r\n    ];\r\n    this.paymentMethods = [\"Credit Card\", \"PayPal\", \"PayU\"];\r\n    this.deliveryOptions = [\r\n      {\r\n        name: \"UPS\",\r\n        price: 14.99\r\n      },\r\n      {\r\n        name: \"DHL\",\r\n        price: 16.99\r\n      },\r\n      {\r\n        name: \"DPD\",\r\n        price: 18.99\r\n      }\r\n    ];\r\n  }\r\n\r\n  generate(quantity) {\r\n    let chance = new Chance();\r\n    for (let i = 0; i < quantity; i++) {\r\n      let category = DataUtils.randomArrayItem(this.categories);\r\n      this.data.push(\r\n        new Item(\r\n          uuidv1(),\r\n          chance.capitalize(chance.word({ syllables: 2, lenth: 6 })) + \" #\" + i,\r\n          DataUtils.roundToTwoDecimalPlaces(DataUtils.randomBetween(1, 1000)),\r\n          chance.sentence({ words: 10 }),\r\n          chance.paragraph(),\r\n          category.name,\r\n          DataUtils.arrayFromArrayRandomItems(\r\n            category.features.map(f => f.name)\r\n          ),\r\n          this.generateRandomReviews(\r\n            chance,\r\n            Math.floor(DataUtils.randomBetween(2, 6))\r\n          ),\r\n          this.generateRandomImages(\r\n            chance,\r\n            Math.floor(DataUtils.randomBetween(2, 6))\r\n          ),\r\n          Math.floor(DataUtils.randomBetween(1, 11))\r\n        )\r\n      );\r\n    }\r\n  }\r\n\r\n  generateRandomImages(chance, imagesNum) {\r\n    let images = [];\r\n    for (let j = 0; j < imagesNum; j++) {\r\n      images.push(\r\n        \"https://avatars.dicebear.com/v2/identicon/\" +\r\n          chance.word({ length: 15 }) +\r\n          \".svg\"\r\n      );\r\n    }\r\n    return images;\r\n  }\r\n\r\n  generateRandomReviews(chance, reviewsNum) {\r\n    let reviews = [];\r\n    for (let i = 0; i < reviewsNum; i++) {\r\n      reviews.push(\r\n        new Review(\r\n          chance.name(),\r\n          chance.date({\r\n            string: false,\r\n            american: false,\r\n            year: 2018\r\n          }),\r\n          chance.sentence()\r\n        )\r\n      );\r\n    }\r\n    return reviews;\r\n  }\r\n\r\n  getItems() {\r\n    return this.data;\r\n  }\r\n\r\n  getCategories() {\r\n    return this.categories;\r\n  }\r\n\r\n  getPaymentMethods() {\r\n    return this.paymentMethods;\r\n  }\r\n\r\n  getDeliveryOptions() {\r\n    return this.deliveryOptions;\r\n  }\r\n}\r\n\r\nclass Item {\r\n  constructor(\r\n    id,\r\n    name,\r\n    price,\r\n    descriptionShort,\r\n    descriptionLong,\r\n    categoryName,\r\n    featuresNames,\r\n    reviews,\r\n    imagesSources,\r\n    quantityOnStock\r\n  ) {\r\n    this.id = id;\r\n    this.name = name;\r\n    this.price = price;\r\n    this.descriptionShort = descriptionShort;\r\n    this.descriptionLong = descriptionLong;\r\n    this.categoryName = categoryName;\r\n    this.featuresNames = featuresNames;\r\n    this.reviews = reviews;\r\n    this.imagesSources = imagesSources;\r\n    this.quantityOnStock = quantityOnStock;\r\n  }\r\n}\r\n\r\nclass Category {\r\n  constructor(name, features) {\r\n    this.name = name;\r\n    this.features = features;\r\n  }\r\n}\r\n\r\nclass Feature {\r\n  constructor(name) {\r\n    this.name = name;\r\n    this.state = false;\r\n  }\r\n\r\n  setState(state) {\r\n    this.state = state;\r\n  }\r\n\r\n  switchState() {\r\n    this.state = !this.state;\r\n  }\r\n}\r\n\r\nclass Review {\r\n  constructor(name, date, text) {\r\n    this.name = name;\r\n    this.date = date;\r\n    this.text = text;\r\n  }\r\n}\r\n\r\nclass CartItem {\r\n  constructor(itemId, price) {\r\n    this.itemId = itemId;\r\n    this.quantity = 0;\r\n    this.price = price;\r\n    this.deliveryCost = 0;\r\n    this.totalPrice = 0;\r\n  }\r\n\r\n  setQuantity(quantity) {\r\n    this.quantity = quantity;\r\n    this.totalPrice = DataUtils.roundToTwoDecimalPlaces(\r\n      this.quantity * this.price\r\n    );\r\n  }\r\n}\r\n\r\nexport { DataGenerator, Item, Category, Feature, Review, CartItem };\r\n","import DataUtils from \"./DataUtils\";\r\n\r\nclass DataFilter {\r\n  static filterByCategoryAndFeature(\r\n    initialItems,\r\n    activeCategory,\r\n    activeFeatures\r\n  ) {\r\n    let allFeaturesAreOff = activeFeatures.every(\r\n      filter => filter.state === false\r\n    );\r\n\r\n    if (allFeaturesAreOff) {\r\n      return Object.values(\r\n        initialItems.filter(item => {\r\n          return item.categoryName === activeCategory;\r\n        })\r\n      );\r\n    } else {\r\n      return initialItems.filter(\r\n        item =>\r\n          DataUtils.arrayContainsAllElementsFromAnother(\r\n            item.featuresNames,\r\n            activeFeatures.filter(f => f.state === true).map(f => f.name)\r\n          ) && item.categoryName === activeCategory\r\n      );\r\n    }\r\n  }\r\n\r\n  static filterBySearchValue(initialItems, value) {\r\n    let searchedValue = value.toLowerCase();\r\n    return initialItems.filter(\r\n      item =>\r\n        item.name.toLowerCase().includes(searchedValue) ||\r\n        item.descriptionShort.toLowerCase().includes(searchedValue) ||\r\n        item.descriptionLong.toLowerCase().includes(searchedValue) ||\r\n        item.price.toString().includes(searchedValue)\r\n    );\r\n  }\r\n}\r\n\r\nexport default DataFilter;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { ListGroup } from \"react-bootstrap\";\r\n\r\nclass CategoryList extends Component {\r\n  handleClick = activeCategory => {\r\n    this.props.onItemClick(activeCategory);\r\n  };\r\n\r\n  handleActive(value, index) {\r\n    if (\r\n      this.props.activeCategory === value ||\r\n      (this.props.activeCategory === null && index === 0)\r\n    )\r\n      return \"active\";\r\n  }\r\n\r\n  render() {\r\n    return this.props.categoriesNames.map((c, index) => (\r\n      <ListGroup.Item\r\n        action\r\n        onClick={() => {\r\n          this.handleClick(c);\r\n        }}\r\n        className={this.handleActive(c, index)}\r\n        key={c}\r\n      >\r\n        {c}\r\n      </ListGroup.Item>\r\n    ));\r\n  }\r\n}\r\n\r\nCategoryList.propTypes = {\r\n  categoriesNames: PropTypes.arrayOf(PropTypes.string),\r\n  activeCategory: PropTypes.string,\r\n  onItemClick: PropTypes.func\r\n};\r\n\r\nexport default CategoryList;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { Feature } from \"../../data/DataGenerator\";\r\n\r\nclass FeatureList extends Component {\r\n  handleClick = featureName => {\r\n    this.props.onItemClick(featureName);\r\n  };\r\n\r\n  render() {\r\n    return this.props.features.map(f => (\r\n      <Form.Check\r\n        type=\"checkbox\"\r\n        label={f.name}\r\n        key={f.name}\r\n        onChange={() => {\r\n          this.handleClick(f.name);\r\n        }}\r\n      />\r\n    ));\r\n  }\r\n}\r\n\r\nFeatureList.propTypes = {\r\n  features: PropTypes.arrayOf(PropTypes.instanceOf(Feature))\r\n};\r\n\r\nexport default FeatureList;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Container, Form, ListGroup } from \"react-bootstrap\";\r\nimport CategoryList from \"./CategoryList\";\r\nimport FeatureList from \"./FeatureList\";\r\nimport { Category } from \"../../data/DataGenerator\";\r\n\r\nclass SidebarContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      activeCategory: \"\",\r\n      activeFeatures: []\r\n    };\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.setState({\r\n      activeCategory: \"Category 0\",\r\n      activeFeatures: this.getFeaturesFromCategory(\"Category 0\")\r\n    });\r\n  }\r\n\r\n  handleClickOnCategory = activeCategory => {\r\n    let activeFeatures = this.getFeaturesFromCategory(activeCategory);\r\n    if (this.state.activeCategory !== activeCategory) {\r\n      this.resetFeatures(activeFeatures);\r\n    }\r\n\r\n    this.setState(() => ({\r\n      activeCategory,\r\n      activeFeatures\r\n    }));\r\n    this.props.onSidebarChange(activeCategory, activeFeatures);\r\n  };\r\n\r\n  handleClickOnFeature = featureToSwitch => {\r\n    let newFeatures = this.state.activeFeatures;\r\n    newFeatures.find(f => f.name === featureToSwitch).switchState();\r\n\r\n    this.setState(() => ({\r\n      activeFeatures: newFeatures\r\n    }));\r\n    this.props.onSidebarChange(this.state.activeCategory, newFeatures);\r\n  };\r\n\r\n  getFeaturesFromCategory(activeCategory) {\r\n    return this.props.categories.find(c => c.name === activeCategory).features;\r\n  }\r\n\r\n  resetFeatures(activeFeatures) {\r\n    activeFeatures.forEach(f => {\r\n      f.setState(false);\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <ListGroup className=\"pb-3\" variant=\"flush\">\r\n          <CategoryList\r\n            categoriesNames={this.props.categories.map(c => c.name)}\r\n            activeCategory={this.props.activeCategory}\r\n            onItemClick={this.handleClickOnCategory}\r\n          />\r\n        </ListGroup>\r\n        <Form className=\"pl-3\">\r\n          <Form.Group>\r\n            <FeatureList\r\n              features={this.getFeaturesFromCategory(this.props.activeCategory)}\r\n              onItemClick={this.handleClickOnFeature}\r\n            />\r\n          </Form.Group>\r\n        </Form>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nSidebarContainer.propTypes = {\r\n  categories: PropTypes.arrayOf(PropTypes.instanceOf(Category)),\r\n  activeCategory: PropTypes.string,\r\n  onSidebarChange: PropTypes.func\r\n};\r\n\r\nexport default SidebarContainer;\r\n","class PaginationUtils {\r\n  static getPagesLen = (itemsLength, cardsData) =>\r\n    Math.ceil(itemsLength / (cardsData.rows * cardsData.columns)) - 1;\r\n\r\n  static getFirstItemNumOnActivePage = cardsData => {\r\n    let itemsPerPage = cardsData.rows * cardsData.columns;\r\n    let activePage = cardsData.activePage;\r\n    let firstItemOnActivePage = cardsData.firstItemNumOnActivePage;\r\n\r\n    if (activePage === 0) {\r\n      firstItemOnActivePage = 0;\r\n    } else {\r\n      firstItemOnActivePage = itemsPerPage * activePage;\r\n    }\r\n    return firstItemOnActivePage;\r\n  };\r\n\r\n  static handlePage(cardsData, newActivePageNum) {\r\n    cardsData.activePage = newActivePageNum;\r\n    cardsData.firstItemNumOnActivePage = PaginationUtils.getFirstItemNumOnActivePage(\r\n      cardsData\r\n    );\r\n    return cardsData;\r\n  }\r\n}\r\n\r\nexport default PaginationUtils;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Pagination as BootstrapPagination } from \"react-bootstrap\";\r\nimport PaginationUtils from \"./PaginationUtils\";\r\n\r\nclass Pagination extends Component {\r\n  handlePage = (props, pageChoiceOpt) => {\r\n    let cardsData = props.cardsData;\r\n    let activePage = cardsData.activePage;\r\n\r\n    switch (pageChoiceOpt) {\r\n      case \"first\":\r\n        props.onItemClick(PaginationUtils.handlePage(cardsData, 0));\r\n        break;\r\n      case \"last\":\r\n        props.onItemClick(\r\n          PaginationUtils.handlePage(\r\n            cardsData,\r\n            PaginationUtils.getPagesLen(props.itemsLength, cardsData)\r\n          )\r\n        );\r\n        break;\r\n      case \"prev\":\r\n        props.onItemClick(\r\n          PaginationUtils.handlePage(cardsData, activePage - 1)\r\n        );\r\n        break;\r\n      case \"next\":\r\n        props.onItemClick(\r\n          PaginationUtils.handlePage(cardsData, activePage + 1)\r\n        );\r\n        break;\r\n      default:\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let props = this.props;\r\n    let isFirstPage = props.cardsData.activePage === 0;\r\n    let isLastPage =\r\n      props.cardsData.activePage ===\r\n      PaginationUtils.getPagesLen(props.itemsLength, props.cardsData);\r\n    return (\r\n      <div>\r\n        <BootstrapPagination className=\"pt-2 float-right\">\r\n          <BootstrapPagination.First\r\n            disabled={isFirstPage}\r\n            onClick={() => this.handlePage(props, \"first\")}\r\n          />\r\n          <BootstrapPagination.Prev\r\n            disabled={isFirstPage}\r\n            onClick={() => this.handlePage(props, \"prev\")}\r\n          />\r\n          <BootstrapPagination.Item active>\r\n            {props.cardsData.activePage + 1}\r\n          </BootstrapPagination.Item>\r\n          <BootstrapPagination.Ellipsis disabled />\r\n          <BootstrapPagination.Item\r\n            onClick={() => this.handlePage(props, \"last\")}\r\n          >\r\n            {PaginationUtils.getPagesLen(props.itemsLength, props.cardsData) +\r\n              1}\r\n          </BootstrapPagination.Item>\r\n          <BootstrapPagination.Next\r\n            disabled={isLastPage}\r\n            onClick={() => this.handlePage(props, \"next\")}\r\n          />\r\n        </BootstrapPagination>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nPagination.propTypes = {\r\n  itemsLength: PropTypes.number,\r\n  cardsData: PropTypes.shape({\r\n    rows: PropTypes.number,\r\n    columns: PropTypes.number,\r\n    activePage: PropTypes.number,\r\n    firstItemNumOnActivePage: PropTypes.num\r\n  }),\r\n  onItemClick: PropTypes.func\r\n};\r\n\r\nexport default Pagination;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Card, Row, Col, Button } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Item } from \"../../data/DataGenerator\";\r\n\r\nclass ItemCard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      item: this.props.item\r\n    };\r\n  }\r\n\r\n  handleDetailsClick = () => {\r\n    this.props.onItemClick(this.state.item);\r\n  };\r\n\r\n  handleAddToCart = () => {\r\n    this.props.onAddToCartClick(this.state.item.id);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Card>\r\n        <Card.Img\r\n          className=\"mx-auto d-block viewerCardImage\"\r\n          variant=\"top\"\r\n          src={this.state.item.imagesSources[0]}\r\n        />\r\n        <Card.Body className=\"d-flex flex-column\">\r\n          <Card.Title>{this.state.item.name}</Card.Title>\r\n          <Card.Text>{this.state.item.descriptionShort}</Card.Text>\r\n          <div className=\"mt-auto\">\r\n            <Row>\r\n              <Col>\r\n                <Link to={\"/item-details/item-id-\" + this.state.item.id}>\r\n                  <Button\r\n                    className=\"float-left\"\r\n                    variant=\"primary\"\r\n                    onClick={this.handleDetailsClick}\r\n                  >\r\n                    <i className=\"fas fa-info\" /> &nbsp; Details\r\n                  </Button>\r\n                </Link>\r\n              </Col>\r\n              <Col>\r\n                <Button\r\n                  className=\"float-right\"\r\n                  variant=\"primary\"\r\n                  onClick={this.handleAddToCart}\r\n                >\r\n                  <i className=\"fas fa-cart-arrow-down\" />\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n            <Row className=\"pt-3 text-center\">\r\n              <Col>{this.state.item.price + \" EUR\"}</Col>\r\n            </Row>\r\n          </div>\r\n        </Card.Body>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nItemCard.propTypes = {\r\n  item: PropTypes.instanceOf(Item),\r\n  onItemClick: PropTypes.func\r\n};\r\n\r\nexport default ItemCard;\r\n","import React, { Component } from \"react\";\r\nimport { CardDeck } from \"react-bootstrap\";\r\nimport { Item } from \"../../data/DataGenerator\";\r\nimport PropTypes from \"prop-types\";\r\nimport ItemCard from \"./ItemCard\";\r\n\r\nclass CardGroups extends Component {\r\n  handleItemClick = item => {\r\n    this.props.onItemClick(item);\r\n  };\r\n\r\n  handleAddToCart = itemId => {\r\n    this.props.onAddToCartClick(itemId);\r\n  };\r\n\r\n  CardGroups = () => {\r\n    let rows = this.props.cardsData.rows;\r\n    let firstItemOnActivePage = this.props.cardsData.firstItemNumOnActivePage;\r\n\r\n    let cardGroups = [];\r\n    for (let rowNum = 0; rowNum < rows; rowNum++) {\r\n      let itemsGroup = [];\r\n      for (let itemNum = 0; itemNum < this.props.cardsData.columns; itemNum++) {\r\n        let item = this.props.items[firstItemOnActivePage];\r\n        if (item !== undefined) {\r\n          itemsGroup.push(\r\n            <ItemCard\r\n              item={item}\r\n              key={item.id}\r\n              onItemClick={this.handleItemClick}\r\n              onAddToCartClick={this.handleAddToCart}\r\n            />\r\n          );\r\n          firstItemOnActivePage += 1;\r\n        }\r\n        if (itemNum % rows === 0) {\r\n          cardGroups.push(\r\n            <CardDeck className=\"pb-2\" key={rowNum}>\r\n              {itemsGroup}\r\n            </CardDeck>\r\n          );\r\n        }\r\n      }\r\n    }\r\n    return cardGroups;\r\n  };\r\n\r\n  render() {\r\n    return <this.CardGroups />;\r\n  }\r\n}\r\n\r\nCardGroups.propTypes = {\r\n  items: PropTypes.arrayOf(PropTypes.instanceOf(Item)),\r\n  cardsData: PropTypes.shape({\r\n    rows: PropTypes.number,\r\n    columns: PropTypes.number,\r\n    activePage: PropTypes.number,\r\n    firstItemNumOnActivePage: PropTypes.num\r\n  })\r\n};\r\n\r\nexport default CardGroups;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport Pagination from \"./Pagination\";\r\nimport CardGroups from \"./CardGroups\";\r\nimport { Item } from \"../../data/DataGenerator\";\r\n\r\nclass Viewer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      cardsData: {\r\n        rows: props.viewerRows,\r\n        columns: props.viewerColumns,\r\n        activePage: 0,\r\n        firstItemNumOnActivePage: 0\r\n      }\r\n    };\r\n  }\r\n\r\n  handleItemClick = item => {\r\n    this.props.onItemClick(item);\r\n  };\r\n\r\n  handleActivepage = cardsData => {\r\n    this.setState(() => ({\r\n      cardsData\r\n    }));\r\n  };\r\n\r\n  handleAddToCart = itemId => {\r\n    this.props.onAddToCartClick(itemId);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <CardGroups\r\n          items={this.props.filteredItems}\r\n          cardsData={this.state.cardsData}\r\n          onItemClick={this.handleItemClick}\r\n          onAddToCartClick={this.handleAddToCart}\r\n        />\r\n        <Pagination\r\n          itemsLength={this.props.filteredItems.length}\r\n          cardsData={this.state.cardsData}\r\n          onItemClick={this.handleActivepage}\r\n        />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nViewer.propTypes = {\r\n  viewerRows: PropTypes.number,\r\n  viewerColumns: PropTypes.number,\r\n  filteredItems: PropTypes.arrayOf(PropTypes.instanceOf(Item)),\r\n  onItemClick: PropTypes.func\r\n};\r\n\r\nexport default Viewer;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Item } from \"../../data/DataGenerator\";\r\nimport { Container, Row, Col, Button, Form } from \"react-bootstrap\";\r\nimport { Review } from \"../../data/DataGenerator\";\r\n\r\nclass ItemDetailsContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      activeImageNum: 0,\r\n      formData: {\r\n        name: \"\",\r\n        review: \"\"\r\n      },\r\n      formValidation: {\r\n        name: false,\r\n        review: false\r\n      },\r\n      isFormValid: false,\r\n      isFieldValidated: false\r\n    };\r\n  }\r\n\r\n  handleThumbnailClick = imageNum => {\r\n    this.setState(() => ({\r\n      activeImageNum: imageNum\r\n    }));\r\n  };\r\n\r\n  handleAddToCart = () => {\r\n    this.props.onAddToCartClick(this.props.item.id);\r\n  };\r\n\r\n  handleAddReviewClick = () => {\r\n    this.props.onAddReview(\r\n      new Review(\r\n        this.state.formData.name,\r\n        new Date(),\r\n        this.state.formData.review\r\n      ),\r\n      this.props.item.id\r\n    );\r\n    this.resetFormState();\r\n  };\r\n\r\n  resetFormState() {\r\n    this.setState(() => ({\r\n      formData: {\r\n        name: \"\",\r\n        review: \"\"\r\n      },\r\n      formValidation: {\r\n        name: false,\r\n        review: false\r\n      },\r\n      isFormValid: false,\r\n      isFieldValidated: false\r\n    }));\r\n  }\r\n\r\n  handleFormInputChange = e => {\r\n    let targetName = e.target.name;\r\n    let targetValue = e.target.value;\r\n    let isFieldValid = e.target.checkValidity() === true;\r\n    let formValidation = this.state.formValidation;\r\n    formValidation[targetName] = isFieldValid;\r\n\r\n    this.setState(() => ({\r\n      formData: {\r\n        ...this.state.formData,\r\n        [targetName]: targetValue\r\n      },\r\n      formValidation,\r\n      isFormValid: Object.values(formValidation).every(v => v === true),\r\n      isFieldValidated: true\r\n    }));\r\n  };\r\n\r\n  Images = props => {\r\n    return (\r\n      <Container>\r\n        <Row>\r\n          <img\r\n            className=\"itemDetailsImage\"\r\n            alt=\"\"\r\n            src={props.imagesSources[props.activeImageNum]}\r\n          />\r\n        </Row>\r\n        <Row className=\"pt-4 align-items-center\">\r\n          <this.Thumbnails sources={props.imagesSources} />\r\n        </Row>\r\n      </Container>\r\n    );\r\n  };\r\n\r\n  Thumbnails = props => {\r\n    let result = [];\r\n    props.sources.forEach((source, i) => {\r\n      result.push(\r\n        <Col key={i}>\r\n          <Button variant=\"light\" onClick={() => this.handleThumbnailClick(i)}>\r\n            <img alt=\"\" style={{ height: \"20px\" }} src={source} />\r\n          </Button>\r\n        </Col>\r\n      );\r\n    });\r\n    return result;\r\n  };\r\n\r\n  Reviews = props => {\r\n    let itemWithUpdatedReviews = props.initialItems.find(\r\n      i => i.id === props.item.id\r\n    );\r\n    let reviews = [];\r\n    itemWithUpdatedReviews.reviews.forEach((review, i) => {\r\n      reviews.push(\r\n        <div key={i}>\r\n          <Container className=\"pt-3\">\r\n            <Row>\r\n              {review.name} -{\" \"}\r\n              {review.date.toLocaleString(\"pl-PL\", {\r\n                day: \"numeric\",\r\n                month: \"numeric\",\r\n                year: \"numeric\"\r\n              })}\r\n            </Row>\r\n            <Row>{review.text}</Row>\r\n          </Container>\r\n        </div>\r\n      );\r\n    });\r\n    return reviews;\r\n  };\r\n\r\n  FormToAddReview = () => {\r\n    return (\r\n      <div>\r\n        <Col sm={6} className=\"pt-4 pl-0\">\r\n          <h4>Add your review</h4>\r\n          <Form className=\"pt-3\" validated={this.state.isFieldValidated}>\r\n            <Form.Group>\r\n              <Form.Control\r\n                name=\"name\"\r\n                value={this.state.formData.name}\r\n                type=\"text\"\r\n                placeholder=\"Your name\"\r\n                required\r\n                minLength=\"5\"\r\n                onChange={this.handleFormInputChange}\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                This field is required. Min. characters is 5.\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Control\r\n                name=\"review\"\r\n                value={this.state.formData.review}\r\n                as=\"textarea\"\r\n                placeholder=\"Your review\"\r\n                rows=\"3\"\r\n                minLength=\"10\"\r\n                maxLength=\"250\"\r\n                required\r\n                onChange={this.handleFormInputChange}\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                This field is required. Min. characters: 10, max. 250.\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Button\r\n                disabled={!this.state.isFormValid}\r\n                onClick={this.handleAddReviewClick}\r\n              >\r\n                Submit\r\n              </Button>\r\n            </Form.Group>\r\n          </Form>\r\n        </Col>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    let isOutOfStock = this.props.item.quantityOnStock === 0;\r\n    return (\r\n      <Container>\r\n        <Row>\r\n          <Col className=\"pb-3\" sm={6}>\r\n            <this.Images\r\n              imagesSources={this.props.item.imagesSources}\r\n              activeImageNum={this.state.activeImageNum}\r\n            />\r\n          </Col>\r\n          <Col sm={6}>\r\n            <Container>\r\n              <Row>\r\n                <h3>{this.props.item.name}</h3>\r\n              </Row>\r\n              <Row>\r\n                <p>Id: {this.props.item.id}</p>\r\n              </Row>\r\n              <Row className=\"text-justify\">\r\n                <p>{this.props.item.descriptionLong}</p>\r\n              </Row>\r\n              <Row>\r\n                <Col className=\"align-self-center pl-0\">\r\n                  <span className=\"float-left\">\r\n                    On stock: {this.props.item.quantityOnStock}\r\n                  </span>\r\n                </Col>\r\n                <Col className=\"pr-0\">\r\n                  <Button\r\n                    className=\"float-right\"\r\n                    disabled={isOutOfStock}\r\n                    onClick={this.handleAddToCart}\r\n                  >\r\n                    Add &nbsp; <i className=\"fas fa-cart-arrow-down\" />\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            </Container>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"pt-3\">\r\n          <Container className=\"pl-15\">\r\n            <h4>Reviews</h4>\r\n            <this.Reviews\r\n              item={this.props.item}\r\n              initialItems={this.props.initialItems}\r\n            />\r\n            <this.FormToAddReview />\r\n          </Container>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nItemDetailsContainer.propTypes = {\r\n  initialItems: PropTypes.arrayOf(PropTypes.instanceOf(Item)),\r\n  item: PropTypes.instanceOf(Item),\r\n  onAddReview: PropTypes.func,\r\n  onAddToCartClick: PropTypes.func\r\n};\r\n\r\nexport default ItemDetailsContainer;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Row, Col, Button, Badge, Container, Form } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass MenuContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      searchValue: \"\"\r\n    };\r\n  }\r\n\r\n  handleSearchChange = event => {\r\n    let searchValue = event.target.value;\r\n    this.setState(() => ({\r\n      searchValue\r\n    }));\r\n    if (searchValue === \"\") {\r\n      this.props.onResetReceivedandFilteredData();\r\n    } else {\r\n      this.props.onSearchChange(searchValue);\r\n      event.persist();\r\n      event.preventDefault();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container className=\"menu\">\r\n        <Row>\r\n          <Col xs={3} sm={4}>\r\n            <Link to=\"/\">\r\n              <Button\r\n                className=\"float-right\"\r\n                variant=\"primary\"\r\n                onClick={() => this.props.onResetReceivedandFilteredData()}\r\n              >\r\n                <i className=\"fas fa-home\" />\r\n              </Button>\r\n            </Link>\r\n          </Col>\r\n          <Col className=\"text-center\" xs={6} sm={4}>\r\n            <Link to=\"/search\">\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Search\"\r\n                value={this.props.searchValue}\r\n                onChange={this.handleSearchChange}\r\n              />\r\n            </Link>\r\n          </Col>\r\n          <Col xs={3} sm={4}>\r\n            <Link to=\"/cart/info\">\r\n              <Button\r\n                variant=\"primary float-left\"\r\n                onClick={() => this.props.onResetReceivedandFilteredData()}\r\n              >\r\n                <i className=\"fas fa-shopping-cart\" />\r\n                \"&nbsp;\r\n                <Badge variant=\"primary\">{this.props.cartItemsLength}</Badge>\r\n              </Button>\r\n            </Link>\r\n          </Col>\r\n        </Row>\r\n        <hr />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nMenuContainer.propTypes = {\r\n  searchValue: PropTypes.string,\r\n  onSearchChange: PropTypes.func,\r\n  cartItemsLength: PropTypes.number,\r\n  onResetReceivedandFilteredData: PropTypes.func\r\n};\r\n\r\nexport default MenuContainer;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { CartItem, Item } from \"../../data/DataGenerator\";\r\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\r\n\r\nclass Info extends Component {\r\n  handleDecreaseQuantity = cartItem => {\r\n    this.handleQuantity(cartItem, 1, -1);\r\n  };\r\n\r\n  handleIncreaseQuantity = cartItem => {\r\n    this.handleQuantity(cartItem, -1, 1);\r\n  };\r\n\r\n  handleQuantity = (\r\n    cartItem,\r\n    initialItemQuantyToAdd,\r\n    cartItemQuantityToAdd\r\n  ) => {\r\n    this.props.onChangeItemQuantity(\r\n      cartItem,\r\n      initialItemQuantyToAdd,\r\n      cartItemQuantityToAdd\r\n    );\r\n  };\r\n\r\n  handleRemoveFromCart = cartItem => {\r\n    this.props.onRemoveCartItem(cartItem);\r\n  };\r\n\r\n  InfoView = () => {\r\n    let initialItems = this.props.initialItems;\r\n    let cartItems = this.props.cartItems;\r\n    let cartItemsComponents = [];\r\n\r\n    cartItems.forEach((cartItem, i) => {\r\n      let cartItemQuantityIsZero = cartItem.quantity === 0;\r\n      let item = initialItems.find(item => item.id === cartItem.itemId);\r\n      cartItemsComponents.push(\r\n        <Container key={i}>\r\n          <Row className=\"text-center\">\r\n            <Col xs={6} sm={2} className=\"pb-4 pb-sm-0\">\r\n              <img\r\n                className=\"cartItemImage\"\r\n                alt=\"\"\r\n                src={item.imagesSources[0]}\r\n              />\r\n            </Col>\r\n            <Col xs={6} sm={3} className=\"pb-4 pb-sm-0 align-self-center\">\r\n              {item.name}\r\n            </Col>\r\n            <Col xs={12} sm={2} className=\"pb-4 pb-sm-0 align-self-center\">\r\n              <Row>\r\n                <Col xs={4} sm={4}>\r\n                  <Button\r\n                    className=\"float-left\"\r\n                    disabled={cartItemQuantityIsZero}\r\n                    onClick={() => this.handleDecreaseQuantity(cartItem)}\r\n                  >\r\n                    <i className=\"fas fa-minus\" />\r\n                  </Button>\r\n                </Col>\r\n                <Col xs={4} sm={4} className=\"align-self-center\">\r\n                  {cartItem.quantity}\r\n                </Col>\r\n                <Col xs={4} sm={4}>\r\n                  <Button\r\n                    className=\"float-none float-sm-right\"\r\n                    onClick={() => this.handleIncreaseQuantity(cartItem)}\r\n                  >\r\n                    <i className=\"fas fa-plus\" />\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n            <Col xs={12} sm={2} className=\"pb-4 pb-sm-0 align-self-center\">\r\n              {cartItem.price} EUR/unit\r\n            </Col>\r\n            <Col xs={12} sm={2} className=\"pb-4 pb-sm-0 align-self-center\">\r\n              Total: {cartItem.totalPrice} EUR\r\n            </Col>\r\n            <Col xs={12} sm={1} className=\"align-self-center\">\r\n              <Button onClick={() => this.handleRemoveFromCart(cartItem)}>\r\n                <i className=\"fas fa-trash-alt\" />\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n          <hr />\r\n        </Container>\r\n      );\r\n    });\r\n\r\n    let sumIsZero = this.props.cartItemsSum === 0;\r\n    return (\r\n      <Container>\r\n        <Row>{cartItemsComponents}</Row>\r\n        <Row className=\"pt-2\">\r\n          <Container>\r\n            <Row>\r\n              <Col>\r\n                <h4 className=\"float-right\">{this.props.cartItemsSum} EUR</h4>\r\n              </Col>\r\n            </Row>\r\n            <Row className=\"pt-1\">\r\n              <Col>\r\n                <Link to={`checkout`}>\r\n                  <Button className=\"float-right\" disabled={sumIsZero}>\r\n                    Checkout\r\n                  </Button>\r\n                </Link>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    let cartIsEmpty = this.props.cartItems.length === 0;\r\n    return (\r\n      <Container>\r\n        {cartIsEmpty ? (\r\n          <div className=\"text-center\">\r\n            <h2>Cart is empty. Pick something.</h2>\r\n          </div>\r\n        ) : (\r\n          <this.InfoView />\r\n        )}\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nInfo.propTypes = {\r\n  cartItems: PropTypes.arrayOf(PropTypes.instanceOf(CartItem)),\r\n  cartItemsSum: PropTypes.number,\r\n  initialItems: PropTypes.arrayOf(PropTypes.instanceOf(Item)),\r\n  routeUrl: PropTypes.string,\r\n  onChangeItemQuantity: PropTypes.func,\r\n  onRemoveCartItem: PropTypes.func\r\n};\r\n\r\nexport default Info;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Container, Col, Row, Button, Form } from \"react-bootstrap\";\r\nimport DataUtils from \"../../data/DataUtils\";\r\n\r\nclass Checkout extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      totalPrice: 0,\r\n      controllers: {\r\n        showTotalPrice: false,\r\n        showCreditCardExtraFields: false\r\n      },\r\n      formData: {\r\n        name: \"\",\r\n        email: \"\",\r\n        address: \"\",\r\n        paymentMethod: \"\",\r\n        creditCardNumber: \"\",\r\n        creditCardExpirationDate: \"\",\r\n        deliveryOption: {}\r\n      },\r\n      formValidation: {\r\n        name: false,\r\n        email: false,\r\n        address: false,\r\n        paymentMethod: false,\r\n        creditCardNumber: false,\r\n        creditCardExpirationDate: false,\r\n        deliveryOption: false\r\n      },\r\n      isFormValid: false,\r\n      isFieldValidated: false,\r\n      regex: {\r\n        creditCardNumber:\r\n          \"^(?:4[0-9]{12}(?:[0-9]{3})?|[25][1-7][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35d{3})d{11})$\",\r\n        creditCardExpirationDate: \"^(0[1-9]|1[0-2])/?([0-9]{4}|[0-9]{2})$\"\r\n      }\r\n    };\r\n  }\r\n\r\n  handlePaymentMethodChange = e => {\r\n    const value = e.target.value;\r\n    let formValidation = this.state.formValidation;\r\n    formValidation.paymentMethod = value !== \"Choose...\";\r\n    formValidation.creditCardExpirationDate =\r\n      value !== \"Choose...\" && value !== \"Credit Card\";\r\n    formValidation.creditCardNumber = formValidation.creditCardExpirationDate;\r\n    const showCreditCardExtraFields = value === \"Credit Card\";\r\n\r\n    this.setState(() => ({\r\n      formData: {\r\n        ...this.state.formData,\r\n        paymentMethod: value\r\n      },\r\n      showCreditCardExtraFields,\r\n      formValidation,\r\n      isFormValid: this.allFieldsAreValid(formValidation)\r\n    }));\r\n  };\r\n\r\n  handleDeliveryOptionChange = e => {\r\n    const value = e.target.value;\r\n    let formValidation = this.state.formValidation;\r\n    formValidation.deliveryOption = value !== \"Choose...\";\r\n    const showTotalPrice = formValidation.deliveryOption;\r\n\r\n    this.setState(() => ({\r\n      controllers: {\r\n        ...this.state.controllers,\r\n        showTotalPrice\r\n      },\r\n      formData: {\r\n        ...this.state.formData,\r\n        deliveryOption: value\r\n      },\r\n      formValidation,\r\n      isFormValid: this.allFieldsAreValid(formValidation)\r\n    }));\r\n    this.recalculateTotalPriceWithDeliveryOption(value);\r\n  };\r\n\r\n  recalculateTotalPriceWithDeliveryOption = inputTargetValue => {\r\n    let option = this.props.deliveryOptions.find(\r\n      o => o.name.substring(0, 2) === inputTargetValue.substring(0, 2)\r\n    );\r\n    let newTotalPrice = this.props.cartItemsSum;\r\n    if (option !== undefined) {\r\n      newTotalPrice += option.price;\r\n      newTotalPrice = DataUtils.roundToTwoDecimalPlaces(newTotalPrice);\r\n      this.setState(() => ({\r\n        formData: {\r\n          ...this.state.formData,\r\n          deliveryOption: option\r\n        },\r\n        totalPrice: newTotalPrice\r\n      }));\r\n    }\r\n  };\r\n\r\n  handleFormInputChange = e => {\r\n    let targetName = e.target.name;\r\n    let targetValue = e.target.value;\r\n    let isFieldValid = e.target.checkValidity() === true;\r\n    let formValidation = this.state.formValidation;\r\n    formValidation[targetName] = isFieldValid;\r\n\r\n    this.setState(() => ({\r\n      formData: {\r\n        ...this.state.formData,\r\n        [targetName]: targetValue\r\n      },\r\n      formValidation,\r\n      isFormValid: this.allFieldsAreValid(formValidation),\r\n      isFieldValidated: true\r\n    }));\r\n  };\r\n\r\n  handleConfirmButton = () => {\r\n    this.props.onConfirmCheckoutData(\r\n      this.state.formData,\r\n      this.state.totalPrice\r\n    );\r\n  };\r\n\r\n  allFieldsAreValid = formValidaton =>\r\n    Object.values(formValidaton).every(v => v === true);\r\n\r\n  FormGroup = props => {\r\n    return (\r\n      <Form.Group>\r\n        <Form.Label>{props.label}</Form.Label>\r\n        <Form.Control\r\n          name={props.name}\r\n          type={props.type}\r\n          placeholder={props.placeholder}\r\n          required={props.required}\r\n          onChange={this.handleFormInputChange}\r\n          pattern={props.pattern}\r\n        />\r\n        {props.withFeedback ? (\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {props.feedback}\r\n          </Form.Control.Feedback>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </Form.Group>\r\n    );\r\n  };\r\n\r\n  CheckoutView = () => {\r\n    return (\r\n      <Container>\r\n        <Col sm={5} className=\"col-centered\">\r\n          <Form validated={this.state.isFieldValidated}>\r\n            <this.FormGroup\r\n              label={\"Full name\"}\r\n              name={\"name\"}\r\n              type={\"text\"}\r\n              placeholder={\"Ex. John Smith\"}\r\n              required={true}\r\n              withFeedback={true}\r\n              feedback={\"This field is required.\"}\r\n              pattern={null}\r\n            />\r\n            <this.FormGroup\r\n              label={\"Email\"}\r\n              name={\"email\"}\r\n              type={\"email\"}\r\n              placeholder={\"example@gmail.com\"}\r\n              required={true}\r\n              withFeedback={true}\r\n              feedback={\"Incorrect email format.\"}\r\n              pattern={null}\r\n            />\r\n            <this.FormGroup\r\n              label={\"Address\"}\r\n              name={\"address\"}\r\n              type={\"text\"}\r\n              placeholder={\"Street, city, postalcode\"}\r\n              required={true}\r\n              withFeedback={true}\r\n              feedback={\"This field is required.\"}\r\n              pattern={null}\r\n            />\r\n            <Form.Group>\r\n              <Form.Label>Payment method</Form.Label>\r\n              <Form.Control\r\n                as=\"select\"\r\n                onChange={e => this.handlePaymentMethodChange(e)}\r\n              >\r\n                <this.PaymentMethods />\r\n              </Form.Control>\r\n            </Form.Group>\r\n            {this.state.showCreditCardExtraFields && (\r\n              <this.FormGroup\r\n                label={\"Credit card number\"}\r\n                name={\"creditCardNumber\"}\r\n                type={\"text\"}\r\n                placeholder={\"Ex. 5500000000000004\"}\r\n                required={true}\r\n                withFeedback={true}\r\n                feedback={\"Invalid format. Ex. 5500000000000004\"}\r\n                pattern={this.state.regex.creditCardNumber}\r\n              />\r\n            )}\r\n            {this.state.showCreditCardExtraFields && (\r\n              <this.FormGroup\r\n                label={\"Credit card expiration date\"}\r\n                name={\"creditCardExpirationDate\"}\r\n                type={\"text\"}\r\n                placeholder={\"Ex. 02/19\"}\r\n                required={true}\r\n                withFeedback={true}\r\n                feedback={\"Invalid format. Ex. 02/19\"}\r\n                pattern={this.state.regex.creditCardExpirationDate}\r\n              />\r\n            )}\r\n            <Form.Group>\r\n              <Form.Label>Delivery option</Form.Label>\r\n              <Form.Control\r\n                as=\"select\"\r\n                onChange={e => this.handleDeliveryOptionChange(e)}\r\n              >\r\n                <this.DeliveryOptions />\r\n              </Form.Control>\r\n            </Form.Group>\r\n            {this.state.controllers.showTotalPrice && (\r\n              <h5 className=\"text-center\">{this.state.totalPrice} EUR</h5>\r\n            )}\r\n            <Row className=\"text-center pt-2\">\r\n              <Col>\r\n                <Link to={`info`}>\r\n                  <Button>Back</Button>\r\n                </Link>\r\n              </Col>\r\n              <Col>\r\n                <Link to={`summary`}>\r\n                  <Button\r\n                    disabled={!this.state.isFormValid}\r\n                    onClick={this.handleConfirmButton}\r\n                  >\r\n                    Confirm\r\n                  </Button>\r\n                </Link>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </Col>\r\n      </Container>\r\n    );\r\n  };\r\n\r\n  PaymentMethods = () => {\r\n    let options = [];\r\n    options.push(<option key={0}>Choose...</option>);\r\n    this.props.paymentMethods.forEach((paymentMethod, i) => {\r\n      options.push(<option key={i + 1}>{paymentMethod}</option>);\r\n    });\r\n    return options;\r\n  };\r\n\r\n  DeliveryOptions = () => {\r\n    let options = [];\r\n    options.push(<option key={0}>Choose...</option>);\r\n    this.props.deliveryOptions.forEach((deliveryOption, i) => {\r\n      options.push(\r\n        <option key={i + 1}>\r\n          {deliveryOption.name + \" - \" + deliveryOption.price + \" EUR\"}\r\n        </option>\r\n      );\r\n    });\r\n    return options;\r\n  };\r\n\r\n  render() {\r\n    return <this.CheckoutView />;\r\n  }\r\n}\r\n\r\nCheckout.propTypes = {\r\n  cartItemsSum: PropTypes.number,\r\n  paymentMethods: PropTypes.arrayOf(PropTypes.string),\r\n  deliveryOptions: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string,\r\n      price: PropTypes.num\r\n    })\r\n  ),\r\n  routeUrl: PropTypes.string,\r\n  onConfirmCheckoutData: PropTypes.func\r\n};\r\n\r\nexport default Checkout;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Container, Col, Row, Button, Modal } from \"react-bootstrap\";\r\n\r\nclass Summary extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showModal: false\r\n    };\r\n  }\r\n\r\n  handleCloseModal = () => {\r\n    this.props.onPurchaseComplete();\r\n    this.setState({ showModal: false });\r\n  };\r\n\r\n  handleShowModal = () => {\r\n    this.setState({ showModal: true });\r\n  };\r\n\r\n  EndOfDemoModal = () => {\r\n    return (\r\n      <Modal show={this.state.showModal} onHide={this.handleCloseModal}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Online shop</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          Your purchases are completed. This is the end of demo version. You\r\n          will be redirected fo main page.\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Link to=\"/\">\r\n            <Button variant=\"primary\" onClick={this.handleCloseModal}>\r\n              Ok\r\n            </Button>\r\n          </Link>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n  SummaryRow = props => {\r\n    return (\r\n      <Row>\r\n        <Col className=\"text-right\">\r\n          <h6>{props.name}</h6>\r\n        </Col>\r\n        <Col className=\"text-left\">\r\n          <h6>{props.value}</h6>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    let checkoutData = this.props.checkoutData;\r\n    let showCreditCardExtraFields =\r\n      checkoutData.paymentMethod === \"Credit Card\";\r\n    return (\r\n      <Container>\r\n        <Col xs={12} sm={5} className=\"col-centered text-center\">\r\n          <this.SummaryRow name={\"Name:\"} value={checkoutData.name} />\r\n          <this.SummaryRow name={\"Email:\"} value={checkoutData.email} />\r\n          <this.SummaryRow name={\"Address:\"} value={checkoutData.address} />\r\n          <this.SummaryRow\r\n            name={\"Payment method:\"}\r\n            value={checkoutData.paymentMethod}\r\n          />\r\n          {showCreditCardExtraFields ? (\r\n            <div>\r\n              <this.SummaryRow\r\n                name={\"Credit card number:\"}\r\n                value={checkoutData.creditCardNumber}\r\n              />\r\n              <this.SummaryRow\r\n                name={\"Credit card expiration date:\"}\r\n                value={checkoutData.creditCardExpirationDate}\r\n              />\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <this.SummaryRow\r\n            name={\"Delivery option:\"}\r\n            value={\r\n              checkoutData.deliveryOption.name +\r\n              \" - \" +\r\n              checkoutData.deliveryOption.price\r\n            }\r\n          />\r\n          <this.SummaryRow\r\n            name={\"Price to pay:\"}\r\n            value={this.props.cartItemsSum + \" EUR\"}\r\n          />\r\n          <Row className=\"text-center pt-2\">\r\n            <Col>\r\n              <Link to={`checkout`}>\r\n                <Button>Back</Button>\r\n              </Link>\r\n            </Col>\r\n            <Col>\r\n              <Button onClick={this.handleShowModal}>Buy</Button>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n        <this.EndOfDemoModal />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nSummary.propTypes = {\r\n  cartItemsSum: PropTypes.number,\r\n  checkoutData: PropTypes.shape({\r\n    name: PropTypes.string,\r\n    email: PropTypes.string,\r\n    address: PropTypes.string,\r\n    paymentMethod: PropTypes.string,\r\n    creditCardNumber: PropTypes.string,\r\n    creditCardExpirationDate: PropTypes.string,\r\n    deliveryOption: PropTypes.shape({\r\n      name: PropTypes.string,\r\n      price: PropTypes.number\r\n    })\r\n  }),\r\n  routeUrl: PropTypes.string,\r\n  onPurchaseComplete: PropTypes.func\r\n};\r\n\r\nexport default Summary;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { CartItem, Item, Category } from \"../../data/DataGenerator\";\r\nimport Info from \"./Info\";\r\nimport Checkout from \"./Checkout\";\r\nimport Summary from \"./Summary\";\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nclass CartContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      checkoutData: {},\r\n      totalPrice: 0\r\n    };\r\n  }\r\n\r\n  handleQuantityChange = (\r\n    cartItem,\r\n    initialItemQuantyToAdd,\r\n    cartItemQuantityToAdd\r\n  ) => {\r\n    this.props.onChangeItemQuantity(\r\n      cartItem,\r\n      initialItemQuantyToAdd,\r\n      cartItemQuantityToAdd\r\n    );\r\n  };\r\n\r\n  handleRemove = cartItem => {\r\n    this.props.onRemoveCartItem(cartItem);\r\n  };\r\n\r\n  handleCheckoutConfirm = (checkoutData, totalPrice) => {\r\n    this.setState(() => ({\r\n      checkoutData,\r\n      totalPrice\r\n    }));\r\n  };\r\n\r\n  handlePurchaseComplete = () => {\r\n    this.props.onPurchaseComplete();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Route\r\n          exact\r\n          path={`${this.props.routeUrl}/info`}\r\n          component={route => (\r\n            <Info\r\n              cartItems={this.props.cartItems}\r\n              cartItemsSum={this.props.cartItemsSum}\r\n              initialItems={this.props.initialData.items}\r\n              routeUrl={route.match.url}\r\n              onChangeItemQuantity={this.handleQuantityChange}\r\n              onRemoveCartItem={this.handleRemove}\r\n            />\r\n          )}\r\n        />\r\n        <Route\r\n          eaxct\r\n          path={`${this.props.routeUrl}/checkout`}\r\n          component={route => (\r\n            <Checkout\r\n              cartItemsSum={this.props.cartItemsSum}\r\n              paymentMethods={this.props.initialData.paymentMethods}\r\n              deliveryOptions={this.props.initialData.deliveryOptions}\r\n              routeUrl={route.match.url}\r\n              onConfirmCheckoutData={this.handleCheckoutConfirm}\r\n            />\r\n          )}\r\n        />\r\n        <Route\r\n          eaxct\r\n          path={`${this.props.routeUrl}/summary`}\r\n          component={route => (\r\n            <Summary\r\n              cartItemsSum={this.state.totalPrice}\r\n              checkoutData={this.state.checkoutData}\r\n              routeUrl={route.match.url}\r\n              onPurchaseComplete={this.handlePurchaseComplete}\r\n            />\r\n          )}\r\n        />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nCartContainer.propTypes = {\r\n  cartItems: PropTypes.arrayOf(PropTypes.instanceOf(CartItem)),\r\n  cartItemsSum: PropTypes.number,\r\n  initialData: PropTypes.shape({\r\n    items: PropTypes.arrayOf(PropTypes.instanceOf(Item)),\r\n    categories: PropTypes.arrayOf(PropTypes.instanceOf(Category)),\r\n    paymentMethods: PropTypes.arrayOf(PropTypes.string),\r\n    deliveryOptions: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        name: PropTypes.string,\r\n        price: PropTypes.num\r\n      })\r\n    )\r\n  }),\r\n  routeUrl: PropTypes.string,\r\n  onChangeItemQuantity: PropTypes.func,\r\n  onRemoveCartItem: PropTypes.func,\r\n  onPurchaseComplete: PropTypes.func\r\n};\r\n\r\nexport default CartContainer;\r\n","import DataUtils from \"../../data/DataUtils\";\r\nimport { CartItem } from \"../../data/DataGenerator\";\r\n\r\nclass CartUtils {\r\n  static recalculateTotalSum = cartItems =>\r\n    cartItems.length > 0\r\n      ? DataUtils.roundToTwoDecimalPlaces(\r\n          cartItems.map(i => i.totalPrice).reduce((a, b) => a + b)\r\n        )\r\n      : 0;\r\n\r\n  /**\r\n   * Returns recalculated CartData and info about operation status\r\n   */\r\n  static recalculateOnAdd = (addedItemId, items, cartData) => {\r\n    let isOk = false;\r\n    if (CartUtils.itemNotExistsInCart(cartData, addedItemId)) {\r\n      let item = DataUtils.getItemById(items, addedItemId);\r\n      if (item.quantityOnStock > 0) {\r\n        item.quantityOnStock -= 1;\r\n        let newCartItem = new CartItem(addedItemId, item.price);\r\n        newCartItem.setQuantity(1);\r\n        cartData.cartItems.push(newCartItem);\r\n        cartData.cartItemsSum = CartUtils.recalculateTotalSum(\r\n          cartData.cartItems\r\n        );\r\n        isOk = true;\r\n      }\r\n    }\r\n\r\n    return {\r\n      cartData,\r\n      isOk\r\n    };\r\n  };\r\n\r\n  /**\r\n   * Returns recalculated initialItems and cartData\r\n   */\r\n  static recalculateOnRemove = (cartItem, cartData, items) => {\r\n    let previousCartDataItems = cartData.cartItems;\r\n    let item = DataUtils.getItemById(items, cartItem.itemId);\r\n    let cartItemIndex = cartData.cartItems\r\n      .map(i => i.itemId)\r\n      .indexOf(cartItem.itemId);\r\n    let changedCartItem = cartData.cartItems[cartItemIndex];\r\n    let quantitiesToGiveBack = changedCartItem.quantity;\r\n    cartData.cartItems.splice(cartItemIndex, 1);\r\n    cartData.cartItemsSum = CartUtils.recalculateTotalSum(\r\n      previousCartDataItems\r\n    );\r\n    item.quantityOnStock += quantitiesToGiveBack;\r\n\r\n    return {\r\n      items,\r\n      cartData\r\n    };\r\n  };\r\n\r\n  /**\r\n   * Returns recalculated initialItems and cartData\r\n   */\r\n  static recalculateAllAfterItemQuantityChange = (\r\n    items,\r\n    cartData,\r\n    cartItem,\r\n    initialItemQuantyToAdd,\r\n    cartItemQuantityToAdd\r\n  ) => {\r\n    let initialItem = items.find(i => i.id === cartItem.itemId);\r\n    let changedCartItem = cartData.cartItems.find(\r\n      c => c.itemId === cartItem.itemId\r\n    );\r\n\r\n    if (\r\n      // decrease quantity\r\n      (initialItemQuantyToAdd > 0 && changedCartItem.quantity > 0) ||\r\n      // increase quantity\r\n      (initialItemQuantyToAdd < 0 && initialItem.quantityOnStock > 0)\r\n    ) {\r\n      initialItem.quantityOnStock += initialItemQuantyToAdd;\r\n      let newQuantityOfChangedItem =\r\n        changedCartItem.quantity + cartItemQuantityToAdd;\r\n      changedCartItem.setQuantity(newQuantityOfChangedItem);\r\n      cartData.cartItemsSum = CartUtils.recalculateTotalSum(cartData.cartItems);\r\n    }\r\n\r\n    return {\r\n      items,\r\n      cartData\r\n    };\r\n  };\r\n\r\n  static itemNotExistsInCart = (cartData, itemId) =>\r\n    cartData.cartItems.find(cartItem => cartItem.itemId === itemId) ===\r\n    undefined;\r\n}\r\n\r\nexport default CartUtils;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport DataFilter from \"../data/DataFilter\";\r\nimport SidebarContainer from \"./Sidebar/SidebarContainer\";\r\nimport ViewerContainer from \"./Viewer/ViewerContainer\";\r\nimport ItemDetailsContainer from \"./ItemDetails/ItemDetailsContainer\";\r\nimport MenuContainer from \"./Menu/MenuContainer\";\r\nimport CartContainer from \"./Cart/CartContainer\";\r\nimport { Item, Category } from \"../data/DataGenerator\";\r\nimport CartUtils from \"./Cart/CartUtils\";\r\n\r\nclass MainContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      initialData: {\r\n        items: props.data.items,\r\n        categories: props.data.categories,\r\n        paymentMethods: props.data.paymentMethods,\r\n        deliveryOptions: props.data.deliveryOptions\r\n      },\r\n      receivedData: {\r\n        searchValue: \"\",\r\n        activeCategory: \"\",\r\n        activeFeatures: [],\r\n        activeItem: {}\r\n      },\r\n      filteredData: {\r\n        items: []\r\n      },\r\n      controllers: {\r\n        viewerRows: 2,\r\n        viewerColumns: 2,\r\n        shouldExpandViewer: false\r\n      },\r\n      cartData: {\r\n        cartItems: [],\r\n        cartItemsSum: 0\r\n      }\r\n    };\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.handleResetReceivedandFilteredData();\r\n  }\r\n\r\n  handleSidebarChange = (activeCategory, activeFeatures) => {\r\n    this.setState(() => ({\r\n      receivedData: {\r\n        ...this.state.receivedData,\r\n        activeCategory,\r\n        activeFeatures\r\n      },\r\n      filteredData: {\r\n        ...this.state.filteredData,\r\n        items: DataFilter.filterByCategoryAndFeature(\r\n          this.state.initialData.items,\r\n          activeCategory,\r\n          activeFeatures\r\n        )\r\n      }\r\n    }));\r\n  };\r\n\r\n  handleSearchChange = searchValue => {\r\n    this.setState(() => ({\r\n      receivedData: {\r\n        ...this.state.receivedData,\r\n        searchValue\r\n      },\r\n      filteredData: {\r\n        ...this.state.filteredData,\r\n        items: DataFilter.filterBySearchValue(\r\n          this.state.initialData.items,\r\n          searchValue\r\n        )\r\n      },\r\n      controllers: {\r\n        ...this.state.controllers,\r\n        shouldExpandViewer: true\r\n      }\r\n    }));\r\n  };\r\n\r\n  handleItemClick = activeItem => {\r\n    this.handleResetReceivedandFilteredData();\r\n    this.setState(() => ({\r\n      receivedData: {\r\n        ...this.state.receivedData,\r\n        activeItem\r\n      }\r\n    }));\r\n  };\r\n\r\n  handleAddReview = (review, itemId) => {\r\n    let item = this.state.initialData.items.find(item => item.id === itemId);\r\n    if (item.reviews.find(r => r.name === review.name) === undefined)\r\n      item.reviews.push(review);\r\n  };\r\n\r\n  handleAddToCart = itemId => {\r\n    let result = CartUtils.recalculateOnAdd(\r\n      itemId,\r\n      this.state.initialData.items,\r\n      this.state.cartData\r\n    );\r\n    if (result.isOk) {\r\n      this.setState(() => ({\r\n        cartData: result.cartData\r\n      }));\r\n    }\r\n  };\r\n\r\n  handleRemoveFromCart = cartItem => {\r\n    let result = CartUtils.recalculateOnRemove(\r\n      cartItem,\r\n      this.state.cartData,\r\n      this.state.initialData.items\r\n    );\r\n    this.setState(() => ({\r\n      initialData: {\r\n        ...this.state.initialData,\r\n        items: result.items\r\n      },\r\n      cartData: result.cartData\r\n    }));\r\n  };\r\n\r\n  handleItemQuantityChange = (\r\n    cartItem,\r\n    initialItemQuantyToAdd,\r\n    cartItemQuantityToAdd\r\n  ) => {\r\n    let result = CartUtils.recalculateAllAfterItemQuantityChange(\r\n      this.state.initialData.items,\r\n      this.state.cartData,\r\n      cartItem,\r\n      initialItemQuantyToAdd,\r\n      cartItemQuantityToAdd\r\n    );\r\n\r\n    this.setState(() => ({\r\n      initialData: {\r\n        ...this.state.initialData,\r\n        items: result.items\r\n      },\r\n      cartData: result.cartData\r\n    }));\r\n  };\r\n\r\n  handlePurchaseComplete = () => {\r\n    this.resetCart();\r\n  };\r\n\r\n  handleResetReceivedandFilteredData = () => {\r\n    this.setState(() => ({\r\n      receivedData: {\r\n        searchValue: \"\",\r\n        activeCategory: this.props.data.categories[0].name,\r\n        activeFeatures: [],\r\n        activeItem: {}\r\n      },\r\n      filteredData: {\r\n        items: DataFilter.filterByCategoryAndFeature(\r\n          this.props.data.items,\r\n          this.props.data.categories[0].name,\r\n          []\r\n        )\r\n      },\r\n      controllers: {\r\n        ...this.state.controllers,\r\n        shouldExpandViewer: false\r\n      }\r\n    }));\r\n  };\r\n\r\n  resetCart() {\r\n    this.setState(() => ({\r\n      cartData: {\r\n        cartItems: [],\r\n        cartItemsSum: 0\r\n      }\r\n    }));\r\n  }\r\n\r\n  Viewer = () => {\r\n    let shouldExpandViewer = this.state.controllers.shouldExpandViewer;\r\n    let viewerRows = this.state.controllers.viewerRows;\r\n    let viewerColumns = this.state.controllers.viewerColumns;\r\n    let rows = shouldExpandViewer ? viewerRows + 1 : viewerRows;\r\n    let columns = shouldExpandViewer ? viewerColumns + 1 : viewerColumns;\r\n\r\n    const ViewerComponent = () => (\r\n      <ViewerContainer\r\n        viewerRows={rows}\r\n        viewerColumns={columns}\r\n        filteredItems={this.state.filteredData.items}\r\n        onItemClick={this.handleItemClick}\r\n        onAddToCartClick={this.handleAddToCart}\r\n      />\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        {shouldExpandViewer ? (\r\n          <ViewerComponent />\r\n        ) : (\r\n          <Row>\r\n            <Col sm={3}>\r\n              <SidebarContainer\r\n                categories={this.props.data.categories}\r\n                activeCategory={this.state.receivedData.activeCategory}\r\n                onSidebarChange={this.handleSidebarChange}\r\n              />\r\n            </Col>\r\n            <Col sm={9}>\r\n              <ViewerComponent />\r\n            </Col>\r\n          </Row>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <Container>\r\n          <Row>\r\n            <MenuContainer\r\n              searchValue={this.state.receivedData.searchValue}\r\n              onSearchChange={this.handleSearchChange}\r\n              cartItemsLength={this.state.cartData.cartItems.length}\r\n              onResetReceivedandFilteredData={\r\n                this.handleResetReceivedandFilteredData\r\n              }\r\n            />\r\n          </Row>\r\n          <Route exact path=\"/(|search)\" component={this.Viewer} />\r\n          <Route\r\n            path=\"/cart\"\r\n            component={route => (\r\n              <CartContainer\r\n                cartItems={this.state.cartData.cartItems}\r\n                cartItemsSum={this.state.cartData.cartItemsSum}\r\n                initialData={this.state.initialData}\r\n                routeUrl={route.match.url}\r\n                onChangeItemQuantity={this.handleItemQuantityChange}\r\n                onRemoveCartItem={this.handleRemoveFromCart}\r\n                onPurchaseComplete={this.handlePurchaseComplete}\r\n              />\r\n            )}\r\n          />\r\n          <Route\r\n            path={\r\n              \"/item-details/item-id-\" + this.state.receivedData.activeItem.id\r\n            }\r\n            component={() => (\r\n              <ItemDetailsContainer\r\n                initialItems={this.state.initialData.items}\r\n                item={this.state.receivedData.activeItem}\r\n                onAddReview={this.handleAddReview}\r\n                onAddToCartClick={this.handleAddToCart}\r\n              />\r\n            )}\r\n          />\r\n        </Container>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nMainContainer.propTypes = {\r\n  data: PropTypes.shape({\r\n    items: PropTypes.arrayOf(PropTypes.instanceOf(Item)),\r\n    categories: PropTypes.arrayOf(PropTypes.instanceOf(Category)),\r\n    paymentMethods: PropTypes.arrayOf(PropTypes.string),\r\n    deliveryOptions: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        name: PropTypes.string,\r\n        price: PropTypes.num\r\n      })\r\n    )\r\n  })\r\n};\r\n\r\nexport default MainContainer;\r\n","import React, { Component } from \"react\";\nimport { DataGenerator } from \"./data/DataGenerator\";\nimport MainContainer from \"./components/MainContainer\";\nimport \"./App.scss\";\n\nclass App extends Component {\n  static dataQuantity = 200;\n\n  constructor() {\n    super();\n    this.data = {\n      items: [],\n      categories: [],\n      paymentMethods: [],\n      deliveryOptions: []\n    };\n    this.generateData();\n  }\n\n  generateData() {\n    const dataGenerator = new DataGenerator();\n    dataGenerator.generate(App.dataQuantity);\n    this.data.items = dataGenerator.getItems();\n    this.data.categories = dataGenerator.getCategories();\n    this.data.paymentMethods = dataGenerator.getPaymentMethods();\n    this.data.deliveryOptions = dataGenerator.getDeliveryOptions();\n  }\n\n  render() {\n    return <MainContainer data={this.data} />;\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}